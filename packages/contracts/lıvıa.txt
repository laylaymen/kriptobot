 [1] LIVIA Nihai Modül Listesi (Gruplandırılmış)
Toplamda 26 modül, 4 ana grup altında işlevsel olarak ayrıldı.

🧠 A. Duygusal Müdahale ve Baskılama Modülleri
Aşırı özgüven, intikam işlemi, kimlik kanıtlama gibi dürtüsel tepkileri bastırmak için kullanılır.

Modül	Görev
identityDrivenImpulseFilter.js	Kimlik kanıtlama dürtüsüyle yapılan işlemleri bastırır
rationalizationBlocker.js	“Bu sefer farklı olacak” gibi bilişsel çarpıtmaları engeller
subjectiveSensitivityFilter.js	Duygusal içerik varsa sinyalleri geçici durdurur
confidenceLimiter.js	Aşırı güven varsa VIVO sinyallerine filtre uygular
emotionalSurgeLimiter.js	Duygusal yoğunluk sonrası pozisyonları filtreler
compensatoryRiskSpike.js	SL sonrası intikam pozisyonu açılmasını önler
framingEffectNormalizer.js	Zarar pozisyonlarını duygusal çerçeveyle tutmayı bastırır
adaptiveBiasShield.js (paylaşımlı)	Otobilinç’ten gelen davranış setine göre sinyalleri engeller

⚠️ B. Psikolojik Savunma & Tepki Yönetimi Modülleri
SL sonrası travmatik işlem tepkileri, ani spike’lara verilen duygusal refleksler gibi durumlarda çalışır.

Modül	Görev
emotionTriggeredDefence.js	SL sonrası fazla işlem varsa sistemsel savunma başlatır
macroDefenceTrigger.js	Teknik + psikolojik risk birlikteyse savunma modunu aktif eder
signalTrustLimiter.js	Sahte sinyal sayısı artarsa geçici sinyal engelleme uygular
fiatDrivenEmotionalFilter.js	Kur etkisiyle oluşan panik işlemleri bastırır
volatilityDefenceTrigger.js	Aşırı oynaklıkta pozisyon savunması uygular
pauseRecommendationEngine.js	SL + kaçan fırsat varsa sistemsel mola önerir
fomoSpikeDefender.js	RSI > 70 + hacim spike varsa işlem durdurulur

📉 C. Risk ve Pozisyon Boyutu Dengeleyicileri
TP sonrası artan risk alma eğilimini, zarar sonrası büyüyen pozisyonları bastırır.

Modül	Görev
riskTrustBalancer.js	Art arda TP sonrası büyüyen riskleri sınırlar
emotionalCooldownTimer.js (öneriyle geldi)	2 büyük SL sonrası otomatik işlem geciktirme
positionSizeLimiter.js (anlamsal çıkarım)	Duygusal durumlara göre pozisyon büyüklüğünü sınırlayan mantık
btcMismatchDefender.js	BTC düşüşteyse altcoin long pozisyonlarını bloklar
confidenceLimiter.js	Aşırı güven varsa pozisyon hacmine doğrudan müdahale eder

🔁 D. Sistem İçi & Çapraz Denetleyici Modüller
Diğer sistemlerden gelen bilgilere göre sinyal geçişi, duygusal etiketleme veya davranış düzeltmesi yapar.

Modül	Görev
identityConflictResolver.js	Zarar edilen stratejiye duygusal dönüş varsa bastırır
crossBiasClusterTracker.js	Aşırı güven + kayıptan kaçınma kombosunu tespit eder
collectiveBiasFilter.js (VIVO destekli)	Trend/hype etkisi yüksekse sinyalleri baskılar
adaptiveBiasShield.js (paylaşımlı)	Davranışsal örüntü varsa sinyal engellenir
structuralBehaviorMonitor.js (ortak)	Tüm sistemde davranış yapısını analiz eder

[2] LIVIA Sisteminde Veri Alışverişi Haritası
Aşağıda LIVIA’nın diğer sistemlerle olan veri ilişkileri, hem aldığı hem de gönderdiği veri türleriyle birlikte sunulmuştur:

📥 A. Veri ALDIĞI Sistemler
Sistem	Gelen Veri	Kullanan Modül(ler)
Otobilinç	Zihinsel yorgunluk, önyargı, refleks örüntüleri	adaptiveBiasShield.js, crossBiasClusterTracker.js, confidenceLimiter.js, compensatoryRiskSpike.js
VIVO	Sinyal baskı gerekliliği, varyant tipleri	signalTrustLimiter.js, pauseRecommendationEngine.js, confidenceLimiter.js
Grafik Beyni	BTC trendi, hacim spike, volatilite	btcMismatchDefender.js, fomoSpikeDefender.js, volatilityDefenceTrigger.js, macroDefenceTrigger.js
Denetim Asistanı	Davranış logları, bias yoğunluğu, SL sonrası psikolojik trend	crossBiasClusterTracker.js, rationalizationBlocker.js, identityConflictResolver.js

📤 B. Veri GÖNDERDİĞİ Sistemler
Sistem	Gönderilen Veri	Gönderen Modül(ler)
VIVO	Kullanıcı hazır değil → sinyal geçici olarak baskılansın	pauseRecommendationEngine.js, adaptiveBiasShield.js, confidenceLimiter.js
Otobilinç	Duygusal tepki sonucu oluşan davranış etiketleri	crossBiasClusterTracker.js, identityConflictResolver.js
Denetim Asistanı	İşlem filtreleme nedenleri ve sistemsel duygusal log	rationalizationBlocker.js, framingEffectNormalizer.js, emotionalSurgeLimiter.js

🔗 C. Sistem İçi Modüller Arası Etkileşim Zincirleri
Kaynak Modül	Hedef Modül	Açıklama
emotionTriggeredDefence.js	pauseRecommendationEngine.js	SL sonrası işlem baskılandığında otomatik mola önerisi
adaptiveBiasShield.js	confidenceLimiter.js	Bias yoğunluğu varsa risk limiti ve sinyal azaltımı birlikte uygulanır
compensatoryRiskSpike.js	positionSizeLimiter.js	SL sonrası büyük pozisyon varsa otomatik pozisyon limiti devreye girer

🧠 D. LIVIA'nın Veri Rolü Tanımı
LIVIA, sistem içinde:

Duygusal filtre,

Risk sınırlayıcı,

Psikolojik savunma arayüzü,

Sinyal baskılayıcı gibi çalışır.

Yani gelen her sinyal LIVIA'dan geçmeden pozisyon olamaz.
Ve sadece engelleyici değil, “neden bastırıyorum” bilgisini de geri ileten bir sistemdir.

🧩 [4] Yeni Modül Önerileri (LIVIA için Zihinsel Savunma ve Dengeleyici Yapılar)
LIVIA’nın mevcut yapısı iyi ama bazı alanlar daha hassas, daha zeki bir müdahale sistemiyle desteklenebilir.
Aşağıdaki boşlukları tespit ettim ve bunlara özel 5 modül öneriyorum ⬇️

🔧 1. emotionalRecoveryMonitor.js
🎯 Amaç: SL sonrası psikolojik toparlanma sürecini ölçmek, yeni işlem için kullanıcı “hazır mı” analiz etmek

💡 Eğer kullanıcı, SL sonrası ilk 3 işlemde odak sapması gösteriyorsa → yeni işlemler geciktirilir

Export: { toparlanmaSkoru, işlemİzleri, önerilenBekleme }

🔧 2. reactiveDefenseGate.js
🎯 Amaç: Duygusal tetikleyiciye karşı ilk işlemden sonra savunma duvarı kurmak

💡 Örneğin: FOMO → bir işlem açıldıysa → sonraki 10 dakika sinyaller baskılanır

Export: { tetikleyici, savunmaAktif, kalanSüre }

🔧 3. behavioralAnchorReset.js
🎯 Amaç: Kullanıcının pozitif/negatif işlem sonrası aşırı yönelimi varsa sistem davranışı sıfırlama önerir

💡 TP sonrası 2 pozisyon üst üste long açma → sistem “anchor etkisi” olduğunu tespit eder, strateji değişimi önerir

Export: { anchorTipi, yönSapması, resetÖnerisi }

🔧 4. contextAwareMoralLimiter.js
🎯 Amaç: Kur, siyasi olay, haber şoku gibi dışsal duygusal etken varsa sinyal geçişini otomatik engeller

💡 Eğer Google Trends + sosyal medya + kur verisi birlikte hareketliyse → sistem devreye girer

Export: { tetikleyiciOlay, sinyalKısıtlama, riskNotu }

🔧 5. empathyDrivenCooldownPlanner.js
🎯 Amaç: Kullanıcının yazdığı notlar, açıklamalar veya sesli ifadeleri analiz ederek psikolojik mola önerisi sunar

💡 “Bu sefer kaybedersem kendimi toparlayamam” gibi bir ifade varsa → otomatik mola süreci başlatılır

Export: { ifadeAnalizi, molaÖnerisi, sinyalBlokDurumu }

📌 Eklenen Modül Özeti:
Modül	Görev Alanı
emotionalRecoveryMonitor.js	SL sonrası psikolojik toparlanma
reactiveDefenseGate.js	Duygusal tepki sonrası ikinci savunma
behavioralAnchorReset.js	Aşırı yönlü işlem zincirini sıfırlama
contextAwareMoralLimiter.js	Dışsal duygusal baskılara karşı savunma
empathyDrivenCooldownPlanner.js	Kullanıcı ifadeleriyle psikolojik mola süreci
Grafik Beyni’nden Elenen Modüller (LIVIA Uyum Kontrolü)
Modül	İlk Yeri	Uyum	Karar
frustrationDrivenOvertrader.js	Grafik Beyni	❗ FOMO + sinyalsiz işlem artışı → duygusal tetikleme	✅ LIVIA’ya taşındı
fomoBiasFlagger.js	Grafik Beyni	❗ FOMO başlangıç davranışı sinyali → psikolojik filtreleme gerekli	✅ LIVIA’ya alınabilir, ama Otobilinç ile paylaşılabilir
sentimentDrivenDeviations.js	Grafik Beyni	❌ Teknik sapma analizi → psikolojik sinyal değil	❌ KALDIRILDI
liquidityIntegrityFilter.js	Grafik Beyni	❌ Teknik emir defteri analizi → duygusal işlemle ilgisi yok	❌ KALDIRILDI

🔄 Otobilinç’ten Elenen Modüller (LIVIA Uyum Kontrolü)
Modül	İlk Yeri	Uyum	Karar
rationalizationBlocker.js	Otobilinç	✅ “Kendini haklı çıkarma” gibi çarpıtmaları bastırır → duygusal savunma filtresi	✅ LIVIA’ya taşındı
framingEffectNormalizer.js	Otobilinç	✅ Zarar pozisyonunu çerçeveleyip işlemde kalma → LIVIA’nın işi	✅ LIVIA’ya taşındı
beliefFeedbackLooper.js	Otobilinç	❌ Öğrenme çarpıklığı + log analizi → Denetim Asistanı işi	❌ KALDIRILDI
overtradingLoopCatcher.js	Otobilinç	❗ İşlem yoğunluğu → doğrudan duygusal değil, otomatik refleks	⚠️ LIVIA yerine Otobilinç'te kalsın

🔄 VIVO’dan Elenen Modüller (LIVIA Uyum Kontrolü)
Modül	İlk Yeri	Uyum	Karar
signalReliabilityIndex.js	VIVO	❌ Teknik başarı skorları → duygusal yapı değil	❌ KALDIRILDI
formationPerformanceTracker.js	VIVO	❌ Formasyon performansı → grafik/strateji analizi	❌ KALDIRILDI
biasToProfitDivergence.js	VIVO	❗ Yanıltıcı kazançlar üzerinden kullanıcıyı yanlış yönlendirme riski var	⚠️ Sınırda → Denetim Asistanı'nda kalmalı

✅ LIVIA’ya Eklenen Eski Sistem Modülleri:
Modül	Eski Sistemi	Sebep
frustrationDrivenOvertrader.js	Grafik Beyni	Sinyalsiz işlem patlamasını duygusal bastırma olarak tanımlar
fomoBiasFlagger.js	Grafik Beyni	FOMO eğilimini daha işlem gelmeden tespit eder
rationalizationBlocker.js	Otobilinç	Kendi kendini kandırma ve "bu sefer farklı" gibi bilişsel çarpıtmaları engeller
framingEffectNormalizer.js	Otobilinç	Zararı “umutla” tutma refleksini baskılar

🧠 LIVIA Sistemi – Temel Kodlama Promptu
🎯 GENEL GÖREVİ
LIVIA, sistemin duygusal filtreleme, psikolojik savunma ve davranışsal dengeleme katmanıdır.
Kullanıcının işlemlerindeki dürtüsel, savunmacı veya tehlikeli duygusal motivasyonları analiz ederek:

Sinyalleri geçici olarak baskılar

İşlem hacmini, sıklığını veya zamanlamasını sınırlar

Gerekirse işlem açılmasını engeller

VIVO, Otobilinç ve Denetim Asistanı’na geri bildirim gönderir

🧱 MODÜL GRUPLARI & GÖREVLERİ
🔒 [1] Duygusal Tepki ve Dürtü Baskılayıcılar
Kullanıcının anlık tepkilerini bastırarak hatalı işlem kararlarını önler.

Modüller:

identityDrivenImpulseFilter.js

rationalizationBlocker.js

framingEffectNormalizer.js

subjectiveSensitivityFilter.js

confidenceLimiter.js

adaptiveBiasShield.js (paylaşımlı)

rationalizationBlocker.js

frustrationDrivenOvertrader.js (eklendi)

fomoBiasFlagger.js (eklendi)

⚠️ [2] Psikolojik Savunma Modülleri
Zarar sonrası çöküş, intikam işlemi, FOMO gibi tepkisel davranışları bastırır.

Modüller:

emotionTriggeredDefence.js

pauseRecommendationEngine.js

compensatoryRiskSpike.js

macroDefenceTrigger.js

fiatDrivenEmotionalFilter.js

volatilityDefenceTrigger.js

signalTrustLimiter.js

contextAwareMoralLimiter.js (öneriyle geldi)

reactiveDefenseGate.js (öneriyle geldi)

📉 [3] Risk Yönetimi ve Pozisyon Dengeleyiciler
Pozisyon büyüklüğü, işlem sıklığı, risk/margin gibi metrikleri duygusal duruma göre sınırlar.

Modüller:

riskTrustBalancer.js

btcMismatchDefender.js

positionSizeLimiter.js

emotionalCooldownTimer.js

behavioralAnchorReset.js (öneriyle geldi)

emotionalRecoveryMonitor.js (öneriyle geldi)

🤝 [4] Çapraz Sistem Eşleşmeleri / Geri Bildirimciler
VIVO, Otobilinç ve Denetim Asistanı ile etkileşim kurar, duygusal durumlara göre sistemleri yönlendirir.

Modüller:

crossBiasClusterTracker.js

identityConflictResolver.js

collectiveBiasFilter.js (VIVO ile ortak)

structuralBehaviorMonitor.js

empathyDrivenCooldownPlanner.js (öneriyle geldi)

🔁 VERİ AKIŞI
📥 Veri Alır:
Sistem	Veri	Kullanılan Modüller
Otobilinç	Bias, zihinsel yorgunluk, davranış örüntüleri	adaptiveBiasShield, crossBiasClusterTracker, compensatoryRiskSpike
VIVO	Sinyal frekansı, varyant tipi	pauseRecommendationEngine, signalTrustLimiter, confidenceLimiter
Grafik Beyni	Trend, volatilite, hacim spike, BTC yönü	macroDefenceTrigger, volatilityDefenceTrigger, btcMismatchDefender, fomoSpikeDefender
Denetim Asistanı	Bias türü, SL sonrası tepki serisi	framingEffectNormalizer, identityConflictResolver, rationalizationBlocker

📤 Veri Gönderir:
Sistem	Gönderdiği Veri	Hedef
VIVO	Sinyal baskı gerekliliği, geçici bloklama	confidenceLimiter, pauseRecommendationEngine
Otobilinç	Gözlemlenen yeni davranış kalıpları	crossBiasClusterTracker, identityConflictResolver
Denetim Asistanı	Davranış etiketleme, işlem engelleme gerekçesi	rationalizationBlocker, contextAwareMoralLimiter

🧠 SİSTEM PRENSİPLERİ
LIVIA, bir “duygusal geçit” gibidir → sistemden çıkan her sinyal buradan geçmeden pozisyona dönüşemez.

Bireysel karar değil → durumsal, bağlamsal, davranışsal filtreleme yapar.

Sistem gerektiğinde sadece durdurmaz, geri bildirim sunar, “neden bastırdım?” diye açıklar.

💻 KODLAMA YAPISI
Her modül async yapıdadır

Giriş: duygusalDurum, sinyalTipi, işlemGeçmişi, ortamVerisi

Çıkış:

json
Kopyala
Düzenle
{
  "işlemEngeli": true,
  "sebep": "Aşırı güven sonrası hacim artışı",
  "öneri": "30 dk mola",
  "etkilenenSinyaller": ["longRSI", "comboBreak"]
}
🛠️ KODLAMA TAVSİYELERİ
Her modül bir davranışsal önyargıya net bağlanmalı.

Sadece işlem durdurmak değil, neden durdurduğunu açıklayacak detay vermeli.

Uyarı sistemleri diğer yapay zeka katmanlarına uygun formatta veri göndermeli.
______________________________________________________________________________________________
LIVIA-01 · operatorDialogOrchestrator.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Operatöre tek, bağlamlı “öneri kartı” göstermek; gerekli ek soruları tetiklemek; onay/ret’i toplayıp imzalı nihai karara çevirmek. VIVO, Portföy, Sentry/Guard ve Policy sinyallerini harmanlar. Kod yazdırmıyoruz; diğer yapay zekâ bu promptla Node.js + TypeScript servisini yazacak.

1) Kapsam & İlkeler

Event-driven çekirdek, tüm I/O JSON. Tüm timestamp’ler ISO-8601, Europe/Istanbul.

Zod ile giriş/çıkış doğrulama. Idempotent yayın (aynı promptId tekrarlanmaz).

Audit alanı her Out event’te zorunlu. Telemetry: dialog.metrics, Alert: dialog.alert.

Dil: Operatör mesajları Türkçe (TR), kısa, madde işaretli; 500 karakter sınırı varsayılan.

Güvenlik: Operatör yanıtı (inbound) için HMAC veya imzalı token doğrulaması (gateway/bridge katmanıyla, bu modülde doğrulama çağrısı yapılır).

2) Girdiler (In) — Şemalar (Zod’a çevrilecek)
{
  "composition.playbook.choice": {
    "event": "composition.playbook.choice",
    "timestamp": "iso8601",
    "symbol": "AVAXUSDT",
    "timeframe": "M5",
    "playbookId": "pb-12",
    "variant": "base|aggressive|conservative",
    "exec": "market|limit|twap|iceberg",
    "params": { "offsetBps": 3 },
    "constraints": { "postOnly": false },
    "reasonCodes": ["highVol","trend"]
  },
  "position.size.suggestion": {
    "event": "position.size.suggestion",
    "timestamp": "iso8601",
    "correlationId": "run-42:avax-m5",
    "symbol": "AVAXUSDT",
    "riskUnitUSD": 250,
    "qty": 123.45,
    "maxNotional": 5000,
    "reasonCodes": ["sl=45bps","riskPerTrade=0.5%"]
  },
  "variant.suggestion": {
    "event": "variant.suggestion",
    "timestamp": "iso8601",
    "suggested": "base|aggressive|conservative",
    "confidence0to1": 0.78,
    "reasons": ["strongEdge","lowDD"]
  },
  "signal.variant.tuned": {
    "event": "signal.variant.tuned",
    "timestamp": "iso8601",
    "base": "base",
    "adjusted": "conservative",
    "reasonCodes": ["overconfidence"]
  },
  "operator.consistency.score": {
    "event": "operator.consistency.score",
    "timestamp": "iso8601",
    "score0to1": 0.62,
    "horizonDays": 30,
    "strengthTags": ["steady"],
    "explanations": ["discipline↑","latency ok"]
  },
  "livia.bias.weights": {
    "event": "livia.bias.weights",
    "timestamp": "iso8601",
    "overconfidence": 0.3,
    "lossAversion": 0.5,
    "riskSeeking": 0.2,
    "notes": []
  },
  "sentry.guard.directive": {
    "event": "sentry.guard.directive",
    "timestamp": "iso8601",
    "mode": "normal|degraded|streams_panic|halt_entry",
    "expiresAt": "iso8601",
    "reasonCodes": ["ping_p99_hi"]
  },
  "latency_slip.guard.directive": {
    "event": "latency_slip.guard.directive",
    "timestamp": "iso8601",
    "mode": "normal|slowdown|block_aggressive|halt_entry",
    "expiresAt": "iso8601",
    "reasonCodes": ["slip_p95_>15bps"]
  },
  "policy.snapshot": {
    "event": "policy.snapshot",
    "timestamp": "iso8601",
    "variants": { "aggressive": true, "conservative": true },
    "limits": { "maxSlipBps": 15, "maxSpreadBps": 80, "minRR": 1.2 }
  },
  "qa.tags": {
    "event": "qa.tags",
    "timestamp": "iso8601",
    "tags": ["highVol","open-bar"]
  },
  "operator.response.in": {
    "event": "operator.response.in",
    "timestamp": "iso8601",
    "promptId": "dlg-avax-42",
    "decisionId": "opt-1|opt-2|custom",
    "payload": { "note": "limit +2bps uygundur" },
    "auth": { "sig": "hex", "userId": "op-007" }
  }
}

3) Çıktılar (Out) — Şemalar
{
  "operator.prompt.out": {
    "event": "operator.prompt.out",
    "timestamp": "iso8601",
    "promptId": "dlg-avax-42",
    "title": "AVAXUSDT — Base/TWAP önerisi",
    "body": "Varyant: Base → Conservative öneri. Qty≈123.45; SL 45bps; QA: highVol. Devam?",
    "options": [
      {"id":"opt-1","label":"Uygula","actionHint":"commit_plan"},
      {"id":"opt-2","label":"Miktarı %25 azalt","actionHint":"revise_qty"},
      {"id":"opt-3","label":"İptal","actionHint":"abort"}
    ],
    "context": {
      "symbol":"AVAXUSDT","variant":"base","tuned":"conservative",
      "exec":"twap","qty":123.45,"riskUnitUSD":250,"guard":"slowdown"
    },
    "expiresAt": "iso8601",
    "audit": { "eventId":"...", "producedBy":"livia-01", "producedAt":"iso8601" }
  },
  "operator.decision.final": {
    "event": "operator.decision.final",
    "timestamp": "iso8601",
    "promptId": "dlg-avax-42",
    "decisionId": "opt-1|opt-2|custom",
    "accepted": true,
    "rationale": "TWAP uygula; qty %25 azalt",
    "ttlSec": 120,
    "context": { "correlationId": "run-42:avax-m5", "symbol": "AVAXUSDT" },
    "audit": { "eventId":"...", "producedBy":"livia-01", "producedAt":"iso8601" }
  },
  "dialog.metrics": {
    "event":"dialog.metrics",
    "timestamp":"iso8601",
    "openPrompts": 1,
    "avgDecisionSec": 37,
    "acceptRate": 0.74,
    "fallbacks": 2,
    "byMode": {"normal":0.8,"slowdown":0.6,"halt_entry":0.0}
  },
  "dialog.alert": {
    "event":"dialog.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"timeout → conservative fallback",
    "context":{"promptId":"dlg-avax-42","reasonCodes":["timeout","guard=slowdown"]}
  }
}

4) Konfig (varsayılanlar)
{
  style: { maxChars: 500, bullets: true, showReasons: true },
  rules: {
    requireConfirmFor: ["aggressive","halt_entry","failover"],
    minScoreForSelfApprove: 0.70,          // skor≥0.70 ise düşük riskte otomatik onay (policy izin verirse)
    blockIfGuard: ["halt_entry"]           // guard=halt_entry iken yeni giriş onayı yok
  },
  timeouts: { promptSec: 90, idleCloseSec: 300 },
  i18n: { locale: "tr-TR", tz: "Europe/Istanbul" },
  security: { verifyOperatorAuth: true, hmacHeader: "X-Signature" },
  idempotencyTtlSec: 300
}

5) Durum Yönetimi

DialogState (in-memory + opsiyonel persist data/dialog.state.json):

openPrompts: Map<promptId, {...context, expiresAt, idemKey}>

lastDecisionByCorrelationId: Map<cid, decision>

stats: { opens, accepts, rejects, timeouts }

Idempotency: promptId tekil; aynı promptId için ikinci operator.prompt.out engellenir.

6) Akış (FSM) – Karar Mantığı

Girdi geldiğinde advance(state, event, cfg, now) → emissions[]:

Bağlam Toplama

Son composition.playbook.choice, position.size.suggestion, variant.suggestion/signal.variant.tuned, guard/policy/qa → tek bir öneri kartına indir.

policy.variants.aggressive=false ise agresif öneriyi düşür (conservative’a).

latency_slip.guard.directive.mode en kısıtlayıcı modu belirler (halt_entry > block_aggressive > slowdown > normal).

Onay Gerekli mi?

rules.requireConfirmFor ve guard/policy/variant durumlarına bak.

operator.consistency.score ≥ minScoreForSelfApprove ve risk düşükse; ve policy izinliyse → self-approve (otomatik accepted=true).

Aksi halde operator.prompt.out üret.

Prompt Üretimi

title: SYMBOL — Variant/Exec

body: 3–5 madde: Varyant, Qty, SL/TP/SLip, Guard, Nedenler.

options: Uygula, Miktarı %25 azalt, İptal.

expiresAt = now + promptSec.

Yanıt İşleme (operator.response.in)

Auth doğrula (security.verifyOperatorAuth).

expiresAt geçtiyse → dialog.alert(warn, "expired") + fallback.

decisionId:

opt-1: accepted=true.

opt-2: qty = qty * 0.75, accepted=true, rationale notu ekle.

opt-3: accepted=false.

custom: payload.note → rationale.

Sonuç: operator.decision.final (TTL=120s).

Timeout/Fallback

Süre dolarsa conservative fallback (varsa variant="conservative", exec="limit", qty↓%25).

dialog.alert(info, "timeout → fallback").

Telemetri

dialog.metrics per 30 sn: openPrompts, avgDecisionSec, acceptRate, byMode.

7) Operatöre Gösterilecek Metin Şablonları (TR)

Öneri Kartı (body)

• Varyant: ${base} → ${tuned}

• Yürütme: ${exec} (${params})

• Miktar: ~${qty} (${riskUnitUSD} USD risk)

• QA/Guard: ${qa.join(", ")} / ${guardMode}

• Nedenler: ${reasonCodes.slice(0,3).join(", ")}

Seçenek Etiketleri

Uygula, Miktarı %25 azalt, İptal

Ek Notlar (gerekirse)

Yüksek volatilite algılandı; TWAP/limit tavsiye ediliyor.

Guard: slowdown — agresif girişler geçici olarak kısıtlı.

8) Kenar Durumlar & Çakışmalar

guard=halt_entry → yeni giriş için onay verilmez; sadece “İptal” sun.

policy.aggressive=false ve variant.suggestion=aggressive → otomatik conservative.

Aynı correlationId için ardışık prompt üretilmez (idempotent).

operator.consistency.score < 0.4 → otomatik Miktarı %25 azaltı varsayılan öneri olarak öne çıkar.

qa.tags open-bar ise exec="limit" önceliklendir.

9) Entegrasyon Noktaları

LIVIA-02 (Guard Question): Prompt’tan önce “kritik senaryo”ysa soru tetiklemek için operator.decision.context yayınla; dönen guard.question.result.ok=false ise operator.prompt.out yerine uyarı.

LIVIA-04 (Confirmation Bounds): operator.decision.context gönder; ihlal varsa düzeltme önerisi ile tekrar prompt.

LIVIA-05 (Approval Gateway): operator.decision.final → dual-control gerekiyorsa oradan onay çıkar.

VIVO-19/Composer: operator.decision.final(accepted=true) → “commit plan” sinyali üretmeleri için bağlanır (bu modül sadece kararı yayar).

10) Dosya Yapısı (öneri)
services/livia/operatorDialogOrchestrator.ts
services/livia/state/dialogStore.ts
services/livia/lib/promptFormat.ts
services/livia/lib/authVerify.ts
services/livia/lib/contextBuilder.ts
services/livia/__tests__/operatorDialogOrchestrator.test.ts
cfg/livia.operatorDialog.yaml

11) Test İskeleti (Jest/Vitest)

Onay Zorunlu: variant=aggressive + policy.aggressive=true + guard=normal → operator.prompt.out üretilir.

Self-Approve: score≥0.70, risk düşük → operator.decision.final(accepted=true) prompt olmadan.

Guard Kısıtı: guard=halt_entry → yalnız “İptal” opsiyonu.

Timeout: yanıt yok → conservative fallback ve dialog.alert(timeout).

Idempotency: aynı promptId ile ikinci prompt bastırılır.

Auth: imza yok/yanlış → yanıt reddi + dialog.alert(error,"auth_failed").

12) Örnek Senaryo (Kısa)

composition.playbook.choice(base/twap) + position.size.suggestion(qty=120) + signal.variant.tuned(conservative) + latency_slip.guard=slowdown →

Orchestrator bağlamı birleştirir; onay gerekir →

operator.prompt.out(title="AVAX — Base/TWAP", options: Uygula/-%25/İptal)

Operatör opt-2 der → operator.decision.final(accepted=true, rationale="qty -%25")

30 sn metrik yayını: acceptRate güncellenir.

13) Pseudo-FSM
IDLE
 └─(context_inputs)→ READY_TO_PROMPT
READY_TO_PROMPT
 ├─(self-approve)→ DECIDED(accepted)
 ├─(emit prompt)→ AWAIT_RESPONSE
AWAIT_RESPONSE
 ├─(response ok)→ DECIDED(accepted|rejected)
 ├─(timeout)→ DECIDED(fallback_conservative)
DECIDED
 └─(emit operator.decision.final)→ IDLE

14) Performans & SLO

FSM p99 < 3 ms; prompt üretimi p95 < 10 ms.

operator.prompt.out → operator.response.in medyan < 60 sn (izleme metriği).

Hata oranı (auth/format) < %1.______________________________________________________________________________________________

tamam reis — sırada LIVIA-02 · guardQuestionEngine.ts var. Aşağıdaki tek blok Geniş Prompt v3’ü .txt dosyana koyup diğer yapay zekâya ver; Node.js + TypeScript servisini bu yönergeyle yazsın. Kod yazdırmıyoruz; nasıl kodlanacağını yol-prompt olarak tarifliyoruz.

LIVIA-02 · guardQuestionEngine.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Operasyonel risk/ belirsizlik yüksekken hedefli, kısa ve net sorular üretmek; yanıtları doğrulamak, gerektiğinde blok (devam etme) kararı vermek ve LIVIA-01’e sonuç döndürmek. Örn: highVol, degraded, failover, aggressive giriş, büyük qty, yüksek slip/spread vb. durumlarda operatörden “devam/iptal/parametre” netliği alın.

1) İlkeler (tüm modül için)

Event-driven I/O (JSON); tüm timestamp’ler ISO-8601, saat dilimi Europe/Istanbul.

Zod ile giriş/çıkış doğrulama.

Idempotent yayın: aynı qId için tekrar soru çıkarma.

Her Out event’e audit alanı ekle.

TR kısa dil: tek ekranda 1–2 cümle, mümkünse madde işaretli.

Güvenlik: operator.answer.in imzasını (HMAC/token) doğrulamak için authVerify çağrısı.

2) Girdiler (In) — Şema örnekleri (Zod’a çevrilecek)
{
  "operator.decision.context": {
    "event": "operator.decision.context",
    "timestamp": "iso8601",
    "promptId": "dlg-avax-42",
    "correlationId": "run-42:avax-m5",
    "symbol": "AVAXUSDT",
    "variant": "base|aggressive|conservative",
    "exec": "market|limit|twap|iceberg",
    "qty": 123.45,
    "riskUnitUSD": 250,
    "slBps": 45,
    "tpBps": 70
  },
  "sentry.guard.directive": {
    "event": "sentry.guard.directive",
    "timestamp": "iso8601",
    "mode": "normal|degraded|streams_panic|halt_entry",
    "expiresAt": "iso8601",
    "reasonCodes": ["gap>2s"]
  },
  "latency_slip.guard.directive": {
    "event": "latency_slip.guard.directive",
    "timestamp": "iso8601",
    "mode": "normal|slowdown|block_aggressive|halt_entry",
    "expiresAt": "iso8601",
    "reasonCodes": ["slip_p95>15bps"]
  },
  "market.volatility.snapshot": {
    "event":"market.volatility.snapshot",
    "timestamp":"iso8601",
    "symbol":"AVAXUSDT",
    "atrBps": 120,
    "spreadBps": 85
  },
  "portfolio.correlation.snapshot": {
    "event":"portfolio.correlation.snapshot",
    "timestamp":"iso8601",
    "topPairs":[{"a":"AVAXUSDT","b":"SOLUSDT","rho":0.91}],
    "clusters":{"Layer1":{"capUtil":1.08}}
  },
  "operator.consistency.score": {
    "event":"operator.consistency.score",
    "timestamp":"iso8601",
    "score0to1":0.38,
    "horizonDays":30
  },
  "livia.bias.weights": {
    "event":"livia.bias.weights",
    "timestamp":"iso8601",
    "overconfidence":0.72,
    "lossAversion":0.40,
    "riskSeeking":0.55
  },
  "policy.snapshot": {
    "event":"policy.snapshot",
    "timestamp":"iso8601",
    "variants":{"aggressive":true,"conservative":true},
    "limits":{"maxSlipBps":15,"maxSpreadBps":80,"minRR":1.2,"maxQtyUSD":25000},
    "criticalRequiresConfirm":["aggressive","failover","halt_entry_override"]
  },
  "qa.tags": {
    "event":"qa.tags",
    "timestamp":"iso8601",
    "tags":["highVol","open-bar"]
  },
  "operator.answer.in": {
    "event":"operator.answer.in",
    "timestamp":"iso8601",
    "qId":"q-avax-42-1",
    "answer":"yes|no|value|option",
    "value": 12,
    "unit":"bps|qty|bool|null",
    "auth":{"sig":"hex","userId":"op-007"}
  }
}

3) Çıktılar (Out) — Şema örnekleri
{
  "operator.question.out": {
    "event":"operator.question.out",
    "timestamp":"iso8601",
    "qId":"q-avax-42-1",
    "promptId":"dlg-avax-42",
    "title":"Yüksek slip riski",
    "text":"Slip p95 ~18 bps. Devam için slip toleransını onaylıyor musun?",
    "kind":"confirm|numerical|choice",
    "expected":"yes|no|value|option",
    "constraints":{"min":0,"max":20,"step":1,"unit":"bps"},
    "options":[{"id":"ok","label":"Evet"},{"id":"no","label":"Hayır"}],
    "ttlSec":90,
    "context":{"symbol":"AVAXUSDT","mode":"slowdown","atrBps":120,"spreadBps":85},
    "audit":{"eventId":"...","producedBy":"livia-02","producedAt":"iso8601"}
  },
  "guard.question.result": {
    "event":"guard.question.result",
    "timestamp":"iso8601",
    "qId":"q-avax-42-1",
    "promptId":"dlg-avax-42",
    "ok": false,
    "reasons":["slip_tolerance_exceeded"],
    "recommendation":{"action":"block|revise|proceed","params":{"qtyFactor":0.75,"exec":"limit"}},
    "audit":{"eventId":"...","producedBy":"livia-02","producedAt":"iso8601"}
  },
  "guard.question.metrics": {
    "event":"guard.question.metrics",
    "timestamp":"iso8601",
    "asked":1,
    "answered":1,
    "okRate":0.62,
    "avgAnswerSec":28,
    "blocked":0.38,
    "byKind":{"confirm":0.7,"numerical":0.5,"choice":0.65}
  },
  "guard.question.alert": {
    "event":"guard.question.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"answer invalid (out of range)",
    "context":{"qId":"q-avax-42-1","value":35,"constraints":{"max":20}}
  }
}

4) Konfig Varsayılanları
{
  i18n: { locale: "tr-TR", tz: "Europe/Istanbul" },

  // Belirsizlik puanı U∈[0,1] için katsayılar
  scoring: {
    weights: {
      guardMode: 0.25,      // normal<slowdown<block_aggressive<halt_entry
      vol: 0.20,            // atr/spread yüksekse
      slipRisk: 0.20,       // slip_p95 tahmini / policy.maxSlip
      operatorScore: 0.15,  // düşük skor = daha çok soru
      bias: 0.10,           // overconfidence, riskSeeking
      correlation: 0.10     // rho, capUtil aşımı
    },
    askThreshold: 0.40,     // U≥0.40 → en az 1 soru
    hardBlockThreshold: 0.85// U≥0.85 → blok öner (cevap beklemeden)
  },

  // Soru Playbook’ları (eşleşme → şablon)
  playbooks: {
    highVol: [
      { kind:"confirm",  text:"Volatilite yüksek. Agresif girişi geçici olarak devre dışı bırakmayı kabul ediyor musun?", expect:"yes" },
      { kind:"choice",   text:"Yürütme tarzını seç: TWAP mı LIMIT mi?", expect:"option", options:["twap","limit"] }
    ],
    slipRisk: [
      { kind:"numerical", text:"Slip toleransını bps cinsinden belirt (0–20).", expect:"value", constraints:{min:0,max:20,step:1,unit:"bps"} }
    ],
    spreadWide: [
      { kind:"confirm",  text:"Spread geniş (~${spreadBps} bps). Devam etmek için LIMIT kullanmayı kabul ediyor musun?", expect:"yes" }
    ],
    failover: [
      { kind:"confirm",  text:"Bağlantı bozuk (degraded). Failover önerisini onaylıyor musun?", expect:"yes" }
    ],
    aggressive: [
      { kind:"confirm",  text:"Agresif varyant seçildi. Onaylıyor musun?", expect:"yes" }
    ],
    qtyHigh: [
      { kind:"choice",   text:"Miktarı azaltalım mı?", expect:"option", options:["-25%","-50%","Hayır"] }
    ]
  },

  rules: {
    blockOnNo: ["failover","aggressive"], // bu tip sorularda "hayır" → ok=false
    numericalBounds: {
      slipBps: { min: 0, max: 20 },
      spreadBps: { min: 0, max: 120 },
      qtyFactor: { min: 0.25, max: 1.0 }
    }
  },

  ttlSec: 90,
  idempotencyTtlSec: 300
}

5) Belirsizlik Puanı (U) — Hesap & Soru Seçimi

Normalize girdiler:

guardModeScore: normal=0.0, slowdown=0.4, block_aggressive=0.7, halt_entry=1.0

volScore: min(1, (atrBps/100 + spreadBps/80)/2)

slipRiskScore: min(1, slip_p95_est / policy.maxSlipBps) (yoksa latency_slip.guard’dan türet)

operatorScoreAdj: 1 - operator.consistency.score0to1

biasScore: orthonormalize(overconfidence, riskSeeking) ortalaması

corrScore: max(0, (rhoTop - 0.85)/0.15, capUtil-1) (0..1)

U = dot(weights, components)

Soru seçimi:

U≥hardBlockThreshold → guard.question.result(ok=false, reason: "hard_block"), recommendation:{action:"block"}.

Aksi halde playbook eşleşmeleri:

Eğer latency_slip.guard in {slowdown, block_aggressive} → slipRisk soruları.

spreadBps > policy.maxSpreadBps → spreadWide.

sentry=degraded → failover.

variant=aggressive → aggressive.

qtyUSD = qty * mid yaklaşık > maxQtyUSD’nin %80’ini aşıyorsa → qtyHigh.

qa.tags highVol|open-bar → highVol.

Öncelik sırası: guard > failover > spread > slip > aggressive > qty > highVol.

Aynı anda çok soru: en fazla 2 soruyu sıraya koy (operatör yükünü düşük tut).

6) Akış (FSM) — advance(state, event, cfg, now) → emissions[]

Durumlar:

IDLE

READY (sorular planlandı)

AWAIT_ANSWER (tek aktif soru)

DECIDED (ok / block / revise / proceed)

Geçişler:

Context & guard girdileri → computeU & planQuestions() →

U≥hardBlock → DECIDED(ok=false, action=block)

Yoksa ilk soruyu üret → operator.question.out → AWAIT_ANSWER.

operator.answer.in geldi:

authVerify → başarısız ise guard.question.alert(error,"auth_failed") + tekrar bekle.

Sınır/kısıt kontrolü (Zod & constraints):

Geçersiz: guard.question.alert(warn,"invalid_answer"), tekrar sor.

Geçerli: scoreAnswer() ve applyRule():

confirm: yes → ok; no → blockOnNo kapsamındaysa ok=false, değilse revise (örn. qty↓).

numerical: aralıkta ise (slipBps<=max) → ok; değilse revise (örn. exec="limit", qtyFactor).

choice: mapping tablosu (-25% → qtyFactor=0.75).

Sonuca göre:

ok=false → guard.question.result(ok=false, recommendation:{action:"block"}).

ok=true ama düzeltme gerekiyorsa → recommendation:{action:"revise", params:{...}}.

ok=true ve düzeltmesiz → recommendation:{action:"proceed"}.

Sırada soru varsa → yeni operator.question.out, durum AWAIT_ANSWER.

Soru bitince → DECIDED.

Timeout (ttl dolarsa):

Varsayılan: ok=false ve recommendation:{action:"block"} (operatör sessizse blok).

Not: Sonuç, LIVIA-01 tarafından tüketilir; orada operator.prompt.out/operator.decision.final akışı tamamlanır.

7) Kenar Durumlar

sentry.mode="halt_entry" ise soru yerine direkt ok=false + block öner (yeni giriş yasak).

policy.variants.aggressive=false + variant=aggressive ise aggressive sorusu atlanır (zaten yasak).

Aynı promptId için aktif bir qId varsa yeni soru üretme (idempotency).

Bir cevap ardışık iki kere aynı ise (tekrar tıklama) → yut.

qtyHigh sorusunda “Hayır” cevabı verilirse → ok=false değil, recommendation:{action:"proceed"} (sadece öneriydi).

spreadWide sorusunda hayır → revise: exec="limit" zorunlu tavsiye.

8) Dosya Yapısı (öneri)
services/livia/guardQuestionEngine.ts          // FSM + event handlers
services/livia/state/gqeStore.ts               // openQuestions, stats, idem index
services/livia/lib/gqeScoring.ts               // U hesaplama
services/livia/lib/gqePlaybook.ts              // kural tabanı + şablonlar
services/livia/lib/answerValidate.ts           // Zod + constraints
services/livia/lib/authVerify.ts               // HMAC/JWT doğrulama
services/livia/__tests__/guardQuestionEngine.test.ts
cfg/livia.guardQuestions.yaml                  // playbook ve eşik overrides

9) Test İskeleti (Jest/Vitest)

U Hesabı

guard=block_aggressive, atrBps=130, spread=90, operatorScore=0.3 → U≥0.7 (soru çıkar).

guard=normal, vol düşük, operatorScore=0.9 → U≤0.3 (soru yok).

Failover

sentry=degraded → failover confirm sorusu; “hayır” → ok=false, block.

Slip

slip numerical: cevap 18 bps, policy.maxSlip=15 → revise (exec=limit).

Spread

spread 100 bps → confirm “LIMIT’e geç” sorusu; “evet” → ok=true, proceed.

Aggressive

variant=aggressive, policy.aggressive=true → confirm sor; “evet” → proceed; “hayır” → block.

Qty High

qtyUSD ≈ maxQtyUSD * 0.9 → choice -25% → revise (qtyFactor=0.75).

Timeout & Auth

cevap süre aşımı → ok=false, block.

imza hatalı → guard.question.alert(error,"auth_failed").

Idempotency

aynı qId ile ikinci operator.question.out yayınlanmaz.

10) Örnek Çalışma (kısa)

Girdiler:

operator.decision.context(AVAX base/twap qty=123)

latency_slip.guard=slowdown, market.volatility(atr=120, spread=85), operator.score=0.38, bias.overconfidence=0.72

U ≈ 0.68 → soru şart.

operator.question.out(kind="numerical", text="Slip toleransı (0–20 bps)?")

Operatör value=18 döner → revise: exec="limit", qtyFactor=0.75 öner; guard.question.result(ok=true, action="revise").

İkinci soru: failover confirm (sentry=degraded). Cevap: evet → proceed.

Sonuç seti LIVIA-01’e döner; Orchestrator promptu buna göre günceller.

11) Performans & SLO

Soru planlama p99 < 3 ms; cevap işleme p99 < 2 ms.

Sorudan cevaba medyan < 60 sn (telemetriyle izleyin).

Hatalı/eksik cevap oranı < %2 (Zod + constraints).

Timeout’ların %90+’ı guard=slowdown/block_aggressive dönemlerine denk gelmeli (doğru tetikleme).

12) Telemetri & Alert

guard.question.metrics per 30 sn: asked, answered, okRate, blocked, avgAnswerSec, byKind.

guard.question.alert seviyeleri:

warn: invalid_answer, ttl_expired

error: auth_failed, internal_failure

13) Entegrasyon (özet)

LIVIA-01: operator.decision.context ile tetikler; guard.question.result sonucuna göre operator.prompt.out/operator.decision.final akışını şekillendirir.

LIVIA-04: numerical cevaplar (slip/spread/qtyFactor) bounds doğrulamasına gider; ihlal varsa yeni düzeltme döner.

SENTRY/SG: mod/sebep kodları belirsizlik skoruna girer; failover soruları sentry=degraded/panic’te çıkar.

PORTFÖY/PFL: qty revizyonu önerileri Composer’a yansır (revise).
______________________________________________________________________________________________

tamam reis — sırada LIVIA-03 · biasAwarenessMonitor.ts. Aşağıdaki tek blok Geniş Prompt v3’ü .txt dosyana koyup diğer yapay zekâya ver; Node.js + TypeScript servisini bu yönergeyle yazsın. Kod yazdırmıyoruz; nasıl kodlanacağını yol-prompt olarak tarifliyoruz.

LIVIA-03 · biasAwarenessMonitor.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Operatör davranışından üç temel yanlılığı ( overconfidence, loss aversion, risk seeking ) sayısal olarak tahmin edip 0..1 arasında ağırlıklar üretmek; sonuçları açıklama, uyarı ve telemetriyle birlikte LIVIA-01/02/04 ve VIVO-42 biasWeightedSignalTuner için yayınlamak.

1) İlkeler

Event-driven I/O (JSON), ISO-8601, Europe/Istanbul.

Zod ile tüm giriş/çıkış doğrulama.

Idempotent yayın (aynı windowId ve operatorId için tekrar yok).

Her Out event’te audit alanı zorunlu.

Gizlilik etiketi: classification: "SENSITIVE_LOW".

2) Girdiler (In) — Şema örnekleri (Zod’a çevrilecek)
{
  "operator.choice.log": {
    "event":"operator.choice.log",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "symbol":"AVAXUSDT",
    "variant":"base|aggressive|conservative",
    "exec":"market|limit|twap|iceberg",
    "overrides":{"qtyFactor":1.2,"slTightenBps":0,"slWidenBps":0,"tpTightenBps":0},
    "context":{"guardMode":"normal|slowdown|block_aggressive|halt_entry","volBps":95,"spreadBps":60}
  },

  "trade.summary.closed": {
    "event":"trade.summary.closed",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "symbol":"AVAXUSDT",
    "entryTs":"iso8601",
    "exitTs":"iso8601",
    "side":"long|short",
    "plannedSL_bps":45,
    "plannedTP_bps":70,
    "realizedR":0.8,
    "exitReason":"tp|sl|timeout|abort|manual_close",
    "maxFavorableExcursion_bps":52,
    "maxAdverseExcursion_bps":38,
    "slAdjustments":{"tighten":0,"widen":0},        // adet
    "tpAdjustments":{"tighten":1,"widen":0},        // adet
    "adds":{"count":1,"totalQtyFactor":1.25},       // DCA/averaging-up/down
    "reentriesWithin24h":0                           // stop sonrası tekrar giriş sayısı
  },

  "operator.consistency.score": {
    "event":"operator.consistency.score",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "score0to1":0.62
  },

  "pnl.daily": {
    "event":"pnl.daily",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "windowId":"2025-09-01_rolling30",
    "equityCurve":[{"ts":"iso8601","equityUSD":12345.6}],
    "sessions":[{"date":"2025-09-01","pnlUSD":120.5}]
  },

  "qa.tags": {
    "event":"qa.tags",
    "timestamp":"iso8601",
    "tags":["highVol","open-bar"]
  }
}

3) Çıktılar (Out) — Şema örnekleri
{
  "livia.bias.weights": {
    "event":"livia.bias.weights",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "overconfidence":0.41,
    "lossAversion":0.63,
    "riskSeeking":0.38,
    "confidence0to1":0.72,
    "notes":[ "overconfidence: re-entry↑, qtyOvershoot↑", "lossAversion: holdLoss>holdWin" ],
    "audit":{"eventId":"...","producedBy":"livia-03","producedAt":"iso8601"}
  },

  "livia.bias.explain": {
    "event":"livia.bias.explain",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "window":{"trades":50,"days":30},
    "contributions":{
      "overconfidence":{"reentryRate":0.18,"qtyOvershoot":0.12,"aggrInHighVol":0.07,"earlyTP":0.04},
      "lossAversion":{"lossHoldRatio":0.22,"slWidenRate":0.15,"abortVsSL":0.09},
      "riskSeeking":{"aggressiveRate":0.21,"takerInWideSpread":0.11,"addsAgainstMAE":0.06}
    },
    "scales":{"minSamples":20,"emaAlpha":0.3}
  },

  "bias.alert": {
    "event":"bias.alert",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "level":"info|warn|error",
    "message":"lossAversion high (≥0.70)",
    "context":{"lossAversion":0.74,"windowTrades":52}
  },

  "bias.metrics": {
    "event":"bias.metrics",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "windowTrades":52,
    "overconfidence":0.41,
    "lossAversion":0.63,
    "riskSeeking":0.38,
    "confidence":0.72,
    "updates":1
  }
}

4) Konfig (varsayılanlar)
{
  window: { trades: 50, minTrades: 20, days: 30 }, // EMA penceresi: son 50 işlem / 30 gün
  emaAlpha: 0.30,          // zamanla yumuşatma (0..1)
  hysteresis: 0.08,        // eşik çevresinde flip-flop engeli
  priors: {                 // veri azsa varsayılanlar
    overconfidence: 0.50,
    lossAversion: 0.50,
    riskSeeking: 0.50,
    confidence0to1: 0.30
  },
  thresholds: {
    medium: 0.50,
    high: 0.70
  },
  weights: {
    // 0..1 arası normalize edilmiş özellik ağırlıkları
    overconfidence: { reentryRate:0.30, qtyOvershoot:0.25, aggrInHighVol:0.25, earlyTP:0.20 },
    lossAversion:   { lossHoldRatio:0.40, slWidenRate:0.35, abortVsSL:0.25 },
    riskSeeking:    { aggressiveRate:0.35, takerInWideSpread:0.35, addsAgainstMAE:0.30 }
  },
  featureBounds: {
    // normalize fonksiyonları için alt/üst sınırlar
    reentryRate: [0, 0.35],
    qtyOvershoot: [0, 0.50],        // önerilen qty'den sapma (|qty/qtySug-1|)
    aggrInHighVol: [0, 0.60],       // highVol iken aggressive seçimi oranı
    earlyTP: [0, 0.40],             // TP'ye varmadan kâr alım oranı
    lossHoldRatio: [0.8, 2.0],      // (avgLossHoldMin / avgWinHoldMin)
    slWidenRate: [0, 0.35],
    abortVsSL: [0, 0.60],           // abort / (abort+sl)
    aggressiveRate: [0, 0.60],
    takerInWideSpread: [0, 0.60],   // spread>maxSpread *katsayı* iken market/taker oranı
    addsAgainstMAE: [0, 0.50]       // MAE görülürken qty ekleme oranı
  },
  i18n: { locale: "tr-TR", tz: "Europe/Istanbul" },
  idempotencyTtlSec: 600
}

5) Özellik (Feature) Hesabı — Normalize & Skor

Hazırlık: son window.trades adet trade.summary.closed ve eşleşen operator.choice.log kayıtlarını topla. Eksikse priors ve düşük güven döndür.

Örnek normalize fonksiyonları (0..1):

norm(x; [a,b]) = clamp((x-a)/(b-a), 0, 1)

lossHoldRatio için normLossHold = clamp((x-1.0)/(2.0-0.8), 0, 1); 1.0 nötr, >1.0 kötü.

qtyOvershoot = |avg(qtyPlaced/qtySuggested - 1)| → [0,0.5].

aggrInHighVol = count(variant='aggressive' & qa.tags includes 'highVol') / count(highVol decisions).

Özellik kümeleri:

Overconfidence

reentryRate: stop/zarar sonrası 24h içinde aynı sembole yeniden giriş oranı.

qtyOvershoot: önerilen boyuttan yukarı sapma ortalaması.

aggrInHighVol: highVol koşullarında aggressive seçimi oranı.

earlyTP: maxFavorableExcursion_bps > plannedTP_bps*0.6 iken tp olmadan manual_close/partial-take oranı (erken sevinç).

Loss Aversion

lossHoldRatio: avgHoldLossMin / avgHoldWinMin.

slWidenRate: SL genişletme adedi / işlemler.

abortVsSL: abort çıkışlarının abort+sl toplamına oranı (kuralsız kaçış).

Risk Seeking

aggressiveRate: aggressive varyant seçimi oranı.

takerInWideSpread: spreadBps > maxSpreadBps*1.0 iken exec='market' veya maker olmayan giriş oranı.

addsAgainstMAE: MAE görürken adds.count>0 olan işlemler oranı.

Bileşik skorlar:

raw_overconfidence = Σ w_i * norm_i
raw_lossAversion   = Σ w_i * norm_i
raw_riskSeeking    = Σ w_i * norm_i


EMA ile yumuşatma:

bias_t = alpha * raw + (1 - alpha) * bias_{t-1}


Güven (confidence0to1):

conf = clamp( min(1, trades/minTrades) * (0.5 + 0.5*operatorConsistencyScore) , 0, 1)

Veri yetersizse conf ≤ 0.5; arttıkça 1’e yaklaşır.

Histerezis:

Son yayınlanan değerden fark < hysteresis ise yayınlama; aksi halde yayınla (gürültü azaltma).

6) Akış (FSM) — advance(state, event, cfg, now) → emissions[]

IDLE
operator.choice.log | trade.summary.closed | operator.consistency.score | pnl.daily → buffer güncelle.

READY_TO_COMPUTE
window.trades ≥ minTrades olduğunda özellikleri hesapla → raw skorlar → EMA → confidence.

EMIT
livia.bias.weights + livia.bias.explain + bias.metrics yayınla (idempotency: windowId+operatorId).
Eşik aşımı (≥ thresholds.high) → bias.alert(level="warn|error").

7) Kenar Durumlar

minTrades altı → priors döndür, confidence düşük, bias.alert(info,"insufficient_samples").

operator.consistency.score yoksa 0.5 varsay.

Guard halt_entry dönemlerinde elde edilen verileri dahil et, ancak aggressiveRate’i guard ile normalize et (yasaklanmışsa cezalandırma yok).

Aşırı uç metrikler → winsorize (p1–p99).

8) Event Bus

In: operator.choice.log, trade.summary.closed, operator.consistency.score, pnl.daily, qa.tags

Out: livia.bias.weights, livia.bias.explain, bias.alert, bias.metrics

9) Dosya Yapısı (öneri)
services/livia/biasAwarenessMonitor.ts        // FSM + orchestrasyon
services/livia/state/biasStore.ts             // halka buffer + EMA state + lastEmit
services/livia/lib/features.ts                // özellik çıkarımı + normalizasyon
services/livia/lib/ema.ts                     // EMA & histerezis
services/livia/lib/contribExplainer.ts        // contribution breakdown
services/livia/__tests__/biasAwarenessMonitor.test.ts
cfg/livia.bias.yaml                           // ağırlık/threshold override

10) Test İskeleti (Jest/Vitest)

Veri az: 12 trade → priors + confidence<0.5 + bias.alert(info).

Overconfidence: re-entry 0.25, qtyOvershoot 0.2, highVol’da aggressive 0.5 → overconfidence≥0.7 → bias.alert(warn).

Loss Aversion: lossHoldRatio 1.6, slWidenRate 0.25 → lossAversion≥0.7.

Risk Seeking: wide spread + taker oranı 0.4, addsAgainstMAE 0.3 → riskSeeking≈0.6.

EMA: yeni raw düşse bile önceki yüksek değer sebebiyle yumuşar (regresyon).

Histerezis: küçük oynamalarda yayın yok; büyük değişimde yayın var.

Idempotency: aynı windowId+operatorId ile ikinci yayın bastırılır.

11) Telemetri & SLO

bias.metrics per 60 sn: windowTrades, overconfidence, lossAversion, riskSeeking, confidence, updates.

P99 hesaplama süresi < 5 ms (özellik çıkarımı hariç).

Günlük sapma toleransı: bir bias ağırlığında gün-içi standart sapma < 0.15 (EMA + histerezis sayesinde).

12) Entegrasyon Notları

VIVO-42 biasWeightedSignalTuner doğrudan livia.bias.weights tüketir; varyant ayarlarını conservative/base/aggressive seçimine çevirir.

LIVIA-01 (Orchestrator) ve LIVIA-02 (Guard Q&A) dil ve soru yoğunluğunu bias’a göre ayarlar (overconfidence yüksek → daha temkinli dil, ek soru).

LIVIA-04 (Confirmation Bounds) sayısal sınırları sıkılaştırabilir (örn. overconfidence≥0.7 ise maxQtyUSD’yi %20 düşür).
______________________________________________________________________________________________
LIVIA-04 · confirmationBounds.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Operatörün onaylamak üzere olduğu planı sayısal sınırlar açısından doğrulamak (slip, spread, RR, miktar, kaldıraç, maruziyet, guard/policy kısıtları). İhlalde blok veya otomatik düzeltme önerisi üret; sonucu LIVIA-01’e geri bildir. Tüm I/O JSON, Zod validasyon, Europe/Istanbul, idempotent yayın, her Out event’te audit.

1) İlkeler

Event-driven FSM: advance(state, event, cfg, now) → emissions[].

Tüm timestamp’ler ISO-8601; sayılar finite().

Idempotency: aynı checkId için ikinci kez yayın yapma (TTL: idempotencyTtlSec).

TR kısa dil (operatöre giden açıklamalar maks. 2–3 cümle).

Güvenlik: dış kaynaktan gelen context/cevaplarda HMAC/JWT doğrulaması helper üzerinden çağrı ile yapılır (implementation detail diğer modüllerde).

2) Girdiler (In) — Şema Örnekleri (Zod’a çevrilecek)
{
  "operator.decision.context": {
    "event": "operator.decision.context",
    "timestamp": "iso8601",
    "checkId": "dlg-avax-42#v1",
    "correlationId": "run-42:avax-m5",
    "symbol": "AVAXUSDT",
    "side": "long|short",
    "variant": "base|aggressive|conservative",
    "exec": "market|limit|twap|iceberg|post_only",
    "qty": 123.45,
    "mid": 9.87,
    "slBps": 45,
    "tpBps": 70,
    "slices": 1,
    "notes": "operator intent"
  },

  "policy.snapshot": {
    "event": "policy.snapshot",
    "timestamp": "iso8601",
    "variants": { "aggressive": true, "conservative": true },
    "risk": { "riskPerTradePct": 0.5, "totalRiskPct": 1.2, "maxLeverage": 5 },
    "limits": {
      "maxSlipBps": 15,
      "maxSpreadBps": 80,
      "minRR": 1.2,
      "maxQtyUSD": 25000,
      "maxSymbolExposurePct": 1.0,
      "maxClusterExposurePct": 1.5
    }
  },

  "market.refs": {
    "event": "market.refs",
    "timestamp": "iso8601",
    "symbol": "AVAXUSDT",
    "mid": 9.87,
    "spreadBps": 85
  },

  "latency_slip.guard.directive": {
    "event": "latency_slip.guard.directive",
    "timestamp": "iso8601",
    "mode": "normal|slowdown|block_aggressive|halt_entry",
    "expiresAt": "iso8601",
    "reasonCodes": ["slip_p95>15bps"]
  },

  "sentry.guard.directive": {
    "event": "sentry.guard.directive",
    "timestamp": "iso8601",
    "mode": "normal|degraded|streams_panic|halt_entry",
    "expiresAt": "iso8601"
  },

  "cost.forecast.update": {
    "event": "cost.forecast.update",
    "timestamp": "iso8601",
    "symbol": "AVAXUSDT",
    "expectedSlipBps": 18,
    "feeBps": { "taker": 5, "maker": 1.5 }
  },

  "portfolio.exposure": {
    "event": "portfolio.exposure",
    "timestamp": "iso8601",
    "equityUSD": 50000,
    "bySymbol": { "AVAXUSDT": { "notionalUSD": 12000, "cluster": "Layer1" } },
    "byCluster": { "Layer1": { "notionalUSD": 35000 } },
    "totalNotionalUSD": 80000
  }
}


Not: portfolio.exposure yoksa exposure kontrolleri uyarı seviyesinde geçilir (blok değil), confidence düşürülür.

3) Çıktılar (Out) — Şema Örnekleri
{
  "confirmation.bounds.check": {
    "event": "confirmation.bounds.check",
    "timestamp": "iso8601",
    "checkId": "dlg-avax-42#v1",
    "correlationId": "run-42:avax-m5",
    "symbol": "AVAXUSDT",
    "ok": false,
    "severity": "soft|hard",
    "violations": [
      { "code": "spread_gt_max", "got": 85, "limit": 80 },
      { "code": "min_rr_not_met", "got": 1.56, "limit": 1.60 }
    ],
    "derived": {
      "qtyUSD": 1219.72,
      "rr": 1.56,
      "leverageEst": 1.6,
      "expectedSlipBps": 18
    },
    "audit": { "eventId": "...", "producedBy": "livia-04", "producedAt": "iso8601" }
  },

  "confirmation.fix.suggestion": {
    "event": "confirmation.fix.suggestion",
    "timestamp": "iso8601",
    "checkId": "dlg-avax-42#v1",
    "recommendation": {
      "action": "revise",
      "params": {
        "exec": "limit",
        "qtyFactor": 0.75,
        "slTightenBps": 5,
        "tpWidenBps": 5,
        "slices": 3
      }
    },
    "reasonCodes": ["spread_wide_use_limit", "improve_rr", "slowdown_use_slices"],
    "audit": { "eventId": "...", "producedBy": "livia-04", "producedAt": "iso8601" }
  },

  "bounds.alert": {
    "event": "bounds.alert",
    "timestamp": "iso8601",
    "level": "info|warn|error",
    "message": "guard=halt_entry → girişler kilitli",
    "context": { "symbol": "AVAXUSDT", "checkId": "dlg-avax-42#v1" }
  },

  "bounds.metrics": {
    "event": "bounds.metrics",
    "timestamp": "iso8601",
    "checked": 12,
    "okRate": 0.67,
    "autoReviseRate": 0.25,
    "blockRate": 0.08,
    "topViolations": { "spread_gt_max": 4, "expected_slip_gt_max": 3, "min_rr_not_met": 3 }
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale: "tr-TR", tz: "Europe/Istanbul" },

  // Dinamik sıkılaştırma (guard/QA/variant etkisi)
  tighten: {
    onHighVolPct: 0.85,           // highVol → limitlerin %85’i
    onDegradedPct: 0.85,          // sentry=degraded
    onBlockAggressivePct: 0.75,   // guard=block_aggressive
    aggressiveRelaxPct: 1.10      // aggressive seçildiyse (policy izin) minRR *1.10, diğer limitler *0.95 uygulanmaz! (daha zor: RR↑)
  },

  // Hard vs Soft ihlal ayrımı
  hardCodes: ["guard_halt_entry", "expected_slip_gt_max_x2", "symbol_exposure_gt_cap_x2", "leverage_gt_max"],

  // Düzeltme öneri matrisi (violation → fix)
  fixes: {
    spread_gt_max:         { exec: "limit", postOnly: true },
    expected_slip_gt_max:  { exec: "limit", qtyFactor: 0.75, slices: 3 },
    min_rr_not_met:        { slTightenBps: 5, tpWidenBps: 5 },
    qty_usd_gt_max:        { qtyFactor: 0.5 },
    symbol_exposure_gt_cap:{ qtyFactor: 0.5 },
    cluster_exposure_gt_cap:{ qtyFactor: 0.5 },
    guard_block_aggressive:{ exec: "limit", variant: "conservative" }
  },

  // Varsayılan sınırlar (policy yoksa fallback)
  limitsDefaults: {
    maxSlipBps: 15,
    maxSpreadBps: 80,
    minRR: 1.2,
    maxQtyUSD: 25000,
    maxLeverage: 5,
    maxSymbolExposurePct: 1.0,
    maxClusterExposurePct: 1.5
  },

  riskModel: { // tahmini kaldıraç ve notional hesabı
    equityFallbackUSD: 25000
  },

  idempotencyTtlSec: 300
}

5) Hesaplamalar (türetilen metrikler)

qtyUSD = qty * mid

RR (risk/reward) = tpBps / slBps (ör. 70/45 ≈ 1.56)

expectedSlipBps = cost.forecast.update.expectedSlipBps varsa onu, yoksa:

exec=="market" → min(maxSlipBps*1.2, spreadBps*0.5 + 8) (basit tahmin)

exec=="limit|post_only" → min( max(2, spreadBps*0.2), maxSlipBps )

exec=="twap|iceberg" → max(3, spreadBps*0.3)

leverageEst ≈ (totalNotionalUSD + planNotionalUSD) / equityUSD

planNotionalUSD ≈ qtyUSD (futures’de çarpan yok varsayımı; borsaya göre adapter düzeltir)

equityUSD yoksa riskModel.equityFallbackUSD kullan ve bounds.alert(info,"equity_fallback")

Exposure sonrası:

symbolExposurePctAfter = (bySymbol[symbol].notionalUSD + qtyUSD) / equityUSD * 100

clusterExposurePctAfter = (byCluster[cluster].notionalUSD + qtyUSD) / equityUSD * 100

Dinamik limitler: guard/qa/variant’a göre limits değerlerine tighten çarpanları uygula:

spreadMaxEff = maxSpreadBps * factor, slipMaxEff = maxSlipBps * factor, minRREff = minRR * (variant=="aggressive" ? aggressiveRelaxPct : 1)

6) Karar Tablosu (özet)

Guard Kısıtları

sentry.mode=="halt_entry" → hard guard_halt_entry → ok=false (blok).

latency_slip.guard=="block_aggressive" ve variant=="aggressive" → soft guard_block_aggressive → revise: variant="conservative" | exec="limit".

Piyasa Koşulları

spreadBps > spreadMaxEff → ihlal spread_gt_max (soft).

expectedSlipBps > slipMaxEff → expected_slip_gt_max (soft). Eğer expectedSlipBps ≥ 2*slipMaxEff → hard expected_slip_gt_max_x2.

Plan Kalitesi

RR < minRREff → min_rr_not_met (soft; düzeltme öner).

exec=="twap" && slices<3 → twap_slices_too_low (soft; slices=3 öner).

exec=="post_only" && spreadBps < 5 → bilgi amaçlı uyarı (gereksiz post_only).

Miktar / Risk

qtyUSD > maxQtyUSD → qty_usd_gt_max (soft; qty↓).

leverageEst > maxLeverage → hard leverage_gt_max (blok).

Maruziyet

symbolExposurePctAfter > maxSymbolExposurePct → symbol_exposure_gt_cap (soft; qty↓). > 2x cap → hard.

clusterExposurePctAfter > maxClusterExposurePct → cluster_exposure_gt_cap (soft).

Hard → doğrudan ok=false (blok).
Soft → ok=false + confirmation.fix.suggestion(revise); operatör onaylarsa LIVIA-01 yeni promptu gösterebilir.

7) FSM — advance(state, event, cfg, now)

IDLE
operator.decision.context → bağlamı topla, policy/market/guard/cost/exposure son snapshot’ları isteğe bağla → EVALUATE.

EVALUATE
Dinamik limitleri uygula → metrikleri hesapla → ihlal listesini oluştur → hard varsa: bounds.check(ok=false, severity="hard") + bounds.alert(error, reason) → IDLE.
hard yok, soft varsa: bounds.check(ok=false, severity="soft") + fix.suggestion(revise) → IDLE.
ihlal yok: bounds.check(ok=true) → IDLE.

Idempotency
checkId tekrarından kaçın (TTL içinde aynı sonucu yayınlama).

8) Kenar Durumlar

policy.variants.aggressive=false + variant=="aggressive" → otomatik revise: variant="conservative" (soft ihlal).

market.refs gecikmiş/veri yok → bounds.alert(warn,"stale_market"); spread/slip kontrolleri geçici atlanır.

cost.forecast yok → slip hesabı heuristikten (yukarıda).

equityUSD veya exposure yok → hard değil; yalnızca uyarılar ve confidence düşürülür.

exec="iceberg" ve slices<2 → slices=2 öner (görünürlük/dolum kalitesi).

tpBps çok yüksek (örn. > 500) → bilgi amaçlı rr_outlier uyarısı (blok değil).

9) Event Bus

In: operator.decision.context, policy.snapshot, market.refs, latency_slip.guard.directive, sentry.guard.directive, cost.forecast.update, portfolio.exposure

Out: confirmation.bounds.check, confirmation.fix.suggestion?, bounds.alert, bounds.metrics

10) Dosya Yapısı (öneri)
services/livia/confirmationBounds.ts          // FSM + karar tablosu
services/livia/lib/boundsCalc.ts              // rr, slip, leverage, exposure hesapları
services/livia/lib/boundsFixer.ts             // violation→revise öneri üretici
services/livia/state/boundsStore.ts           // last snapshots + idempotency index
services/livia/__tests__/confirmationBounds.test.ts
cfg/livia.bounds.yaml                         // limit override + tighten katsayıları

11) Test İskeleti (Jest/Vitest)

Guard Hard: sentry.halt_entry → ok=false, severity=hard, alert(error).

Spread/Slip Soft: spread 85>80 ve expectedSlip 18>15 → ok=false soft + fix: exec=limit, qty×0.75, slices=3.

RR Soft: RR 1.1 < minRR 1.2 → fix: slTighten + tpWiden.

Qty Cap: qtyUSD 30k > 25k → qty×0.5.

Leverage Hard: leverage>max → blok.

Symbol Cap Soft: cap %1.0, after %1.2 → qty×0.5; 2x cap → hard.

Tighten Dinamiği: highVol → limitler %85’e sıkı; aynı plan normalde geçer, highVol’da soft fail.

Idempotency: aynı checkId ile ikinci yayın yok.

Missing Exposure: exposure yok → ok ama bounds.alert(info,"exposure_missing").

12) Telemetri & SLO

bounds.metrics per 30 sn: checked, okRate, autoReviseRate, blockRate, topViolations{}.

P99 değerlendirme süresi < 3 ms (snapshot merge + hesaplar).

Otomatik revizyonların ≥ %70’i operatör tarafından kabul görmeli (LIVIA-01’de izlenir).

13) Örnek Akış (Sayısal)

Girdi: variant=base, exec=market, qty=123.45, mid=9.87, sl=45bps, tp=70bps;
spread=85bps, expectedSlip=18bps, policy maxSpread=80, maxSlip=15, minRR=1.2; guard=slowdown.

Türev: qtyUSD≈1219.7, RR≈1.56 (ok), slip/spread aşıyor (soft).

Çıktı:

bounds.check(ok=false, severity="soft", violations:["spread_gt_max","expected_slip_gt_max"])

fix.suggestion(revise: exec="limit", qty×0.75, slices=3)

LIVIA-01 yeni promptu bu önerilerle günceller; operatör onaylarsa plan uygulanır.
______________________________________________________________________________________________
LIVIA-05 · actionApprovalGateway.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Operatör/otomat kararlarını tek kapıdan geçirmek. Riskli eylemler için dual-control / quorum, RBAC (rol yetkisi), TTL, gerekçelendirme, bypass (acil durum) ve geri alma (revoke/rollback) mantığı uygular. Sonuçları imzalı şekilde yayınlar. LIVIA-01/02/04’ten ve SENTRY/SG/POLICY’den gelen sinyalleri dikkate alır.

1) İlkeler

Event-driven I/O (JSON), ISO-8601, Europe/Istanbul.

Zod ile tüm giriş/çıkış doğrulama; .strict().

Idempotency: approvalKey bazlı; TTL içinde aynı isteğe ikinci sonuç üretilmez.

Audit: Her Out event’e {eventId, producedBy, producedAt} ekle.

Güvenlik: İmza doğrulama (HMAC/JWT), RBAC kontrolü, allowlist (örn. endpoint failover hedefleri).

TR dilinde kısa ve net açıklamalar (operatör logları için).

2) Eylem Tipleri & Onay Profilleri (şablon)

Aşağıdaki tabloyu config’ten yükleyin; ihtiyaç olursa güncellenebilir.

action (scope)	örnek payload	profil
halt_entry (global/symbol)	`{scope:"global"	"symbol", symbol?}`
failover (endpoint)	{to:"exA-sec-1"}	dual-control(2/2) + allowlist
aggressive_overrides	{enable:true, ttlSec:600}	single + reason≥20ch, TTL 10m
risk_limit_change	{path:"limits.maxSlipBps", from:15, to:18}	quorum(2/3) + scheduled
manual_close_all	{reason:"panic"}	dual-control(2/2)
policy_deploy_canary	{version:"v42", percent:10}	single (policy role)

Emergency bypass: risk.incident.emergency_stop aktifse halt_entry(global) tek onayla geçebilir (log + yüksek seviye alert).

3) Girdiler (In) — Şemalar (Zod’a çevrilecek)
{
  "operator.decision.final": {
    "event":"operator.decision.final",
    "timestamp":"iso8601",
    "promptId":"dlg-avax-42",
    "decisionId":"opt-1|opt-2|custom",
    "accepted": true,
    "rationale":"qty -%25",
    "ttlSec": 120,
    "context": { "action":"failover", "payload":{"to":"exA-sec-1"}, "approvalKey":"run-42#failover#exA-sec-1" },
    "auth": { "userId":"op-007", "roles":["trader","ops"], "sig":"hex" }
  },

  "guard.question.result": {
    "event":"guard.question.result",
    "timestamp":"iso8601",
    "qId":"q-avax-42-1",
    "promptId":"dlg-avax-42",
    "ok": true,
    "recommendation": { "action":"proceed|revise|block", "params":{} }
  },

  "confirmation.bounds.check": {
    "event":"confirmation.bounds.check",
    "timestamp":"iso8601",
    "checkId":"dlg-avax-42#v1",
    "symbol":"AVAXUSDT",
    "ok": true,
    "severity":"soft|hard",
    "violations":[]
  },

  "manual.approval.request": {
    "event":"manual.approval.request",
    "timestamp":"iso8601",
    "approvalKey":"risk#limits.maxSlipBps#to=18",
    "action":"risk_limit_change",
    "payload":{"path":"limits.maxSlipBps","from":15,"to":18},
    "requestedBy":{"userId":"sys-policy","roles":["policy"],"sig":"hex"},
    "reason":"slip p95 artışı"
  },

  "policy.snapshot": {
    "event":"policy.snapshot",
    "timestamp":"iso8601",
    "roles": { "trader": ["aggressive_overrides"], "ops":["halt_entry","failover","manual_close_all"], "policy":["risk_limit_change","policy_deploy_canary"] },
    "approvalProfiles": {
      "halt_entry": { "type":"dual", "quorum":2, "of":2, "ttlSec":300 },
      "failover": { "type":"dual", "quorum":2, "of":2, "ttlSec":300, "allowlist":["exA-pri-1","exA-sec-1","exA-sec-2"] },
      "aggressive_overrides": { "type":"single", "reasonMinChars":20, "ttlSec":600 },
      "risk_limit_change": { "type":"quorum", "quorum":2, "of":3, "roles":["policy","ops"], "schedule":"allow|require", "ttlSec":600 }
    }
  },

  "sentry.guard.directive": {
    "event":"sentry.guard.directive",
    "timestamp":"iso8601",
    "mode":"normal|degraded|streams_panic|halt_entry",
    "expiresAt":"iso8601"
  },

  "risk.incident.emergency_stop": {
    "event":"risk.incident.emergency_stop",
    "timestamp":"iso8601",
    "active": true,
    "reason":"liquidity collapse"
  }
}

4) Çıktılar (Out) — Şemalar
{
  "action.approved": {
    "event":"action.approved",
    "timestamp":"iso8601",
    "approvalKey":"run-42#failover#exA-sec-1",
    "action":"failover",
    "payload":{"to":"exA-sec-1"},
    "ttlSec":180,
    "by":[{"userId":"op-007","roles":["ops"],"ts":"iso8601"},{"userId":"op-009","roles":["ops"],"ts":"iso8601"}],
    "chain":{"required":"dual(2/2)","collected":2},
    "reason":"Sentry degraded; latency spike",
    "audit":{"eventId":"...","producedBy":"livia-05","producedAt":"iso8601"}
  },

  "action.rejected": {
    "event":"action.rejected",
    "timestamp":"iso8601",
    "approvalKey":"risk#limits.maxSlipBps#to=18",
    "action":"risk_limit_change",
    "reasons":["rbac_forbidden","insufficient_quorum"],
    "by":[{"userId":"op-011","roles":["policy"],"ts":"iso8601"}],
    "audit":{"eventId":"...","producedBy":"livia-05","producedAt":"iso8601"}
  },

  "approval.pending": {
    "event":"approval.pending",
    "timestamp":"iso8601",
    "approvalKey":"risk#limits.maxSlipBps#to=18",
    "action":"risk_limit_change",
    "needed":{"quorum":2,"of":3},
    "received":[{"userId":"op-011","roles":["policy"],"ts":"iso8601"}],
    "expiresAt":"iso8601"
  },

  "approval.revoked": {
    "event":"approval.revoked",
    "timestamp":"iso8601",
    "approvalKey":"run-42#failover#exA-sec-1",
    "reason":"ttl_expired|manual_revoke|superseded",
    "rollback":{"event":"endpoint.switch.rollback","params":{"to":"exA-pri-1"}}
  },

  "approval.metrics": {
    "event":"approval.metrics",
    "timestamp":"iso8601",
    "pending":1,
    "approved":12,
    "rejected":3,
    "revoked":1,
    "avgLeadTimeSec":42,
    "byAction":{"failover":5,"halt_entry":4,"risk_limit_change":2}
  },

  "approval.alert": {
    "event":"approval.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"failover target allowlist dışı",
    "context":{"approvalKey":"run-42#failover#exA-unknown","target":"exX-foo"}
  }
}

5) Konfig (varsayılanlar)
{
  i18n: { locale: "tr-TR", tz: "Europe/Istanbul" },

  // RR: rol tablosu ve profil şablonları policy.snapshot'tan yüklenir; burada defaults
  defaults: {
    profiles: {
      dual: { quorum: 2, of: 2, ttlSec: 300 },
      single: { ttlSec: 600, reasonMinChars: 20 },
      quorum: { quorum: 2, of: 3, ttlSec: 600 }
    },
    allowlist: { failover: [] }
  },

  // Ek kurallar
  rules: {
    requireFreshBounds: ["aggressive_overrides"],  // bounds.ok=true olmadan onay verme
    forbidWhenSentry: { "halt_entry": [], "failover": [] }, // örnek: sentry=halt_entry iken failover'a izin ver (boş liste = izin var)
    minReasonChars: 20
  },

  // Idempotency & TTL
  idempotencyTtlSec: 600,
  pendingTtlSec: 600,      // quorum bekleme süresi
  revokeOnTtlExpire: true,

  // Security
  security: { verifySignature: true, requireRole: true }
}

6) FSM — advance(state, event, cfg, now) → emissions[]

Durumlar

IDLE

REQUESTED (yeni onay talebi alındı / tek onay geldi)

PENDING (quorum bekleniyor)

APPROVED

REJECTED

REVOKED (ttl bitti / manuel iptal)

EXPIRED (idempotency TTL geçti; yeni tur)

Akış

İstek Al (ENTRY)
Kaynak: operator.decision.final(accepted=true) veya manual.approval.request.

approvalKey zorunlu. Aynısından varsa ve TTL içinde → yut (idempotency).

RBAC: auth.roles içinde eylem için yetki var mı? Yoksa action.rejected(rbac_forbidden).

Profil: policy.snapshot.approvalProfiles[action] seç; yoksa defaults.

Guard/Bounds: rules.requireFreshBounds kapsamındaysa son confirmation.bounds.check.ok==true olmalı; değilse rejected(bounds_not_ok).

Allowlist (failover): hedef to allowlist’te mi? Değilse approval.alert(error) + rejected(allowlist_violation).

Zincir Kur (CHAIN)

Profil single: tek onay yeter; APPROVED.

Profil dual/quorum: ilk onay → approval.pending (listede kaydet, expiresAt).

Aynı approvalKey için farklı kullanıcıdan gelen imzalı onaylar toplanır. Aynı kullanıcı ikinci kez onay veremez.

Quorum Tamamlanınca

action.approved yayınla (ttlSec profilden veya istekten).

Uygulama katmanı için açık ve net: action + payload + ttlSec.

Zamanlayıcı: TTL dolunca auto revoke (istenirse).

Reddetme

Gerekçe yetersiz (<minReasonChars), RBAC yok, bounds not ok, allowlist ihlali, quorum sağlanamadı (timeout) → action.rejected.

pendingTtlSec dolarsa: otomatik rejected(insufficient_quorum).

Acil Durum Bypass

risk.incident.emergency_stop.active==true ve action=="halt_entry" + scope global → tek onayla APPROVED.

Olayı yüksek seviye approval.alert(warn,"emergency_bypass") ile logla.

Revoke/Rollback

ttl doldu → approval.revoked(ttl_expired) + opsiyonel rollback olayı (örn. endpoint.switch.rollback).

manual_revoke destekle: aynı approvalKey ile manual.approval.request{action:"revoke"}.

7) Kurallar (özet karar tablosu)

RBAC: hasRole(user.roles, action) değilse → REJECT.

Bounds: action ∈ requireFreshBounds ve bounds.ok!=true → REJECT.

Allowlist: action=="failover" ve payload.to ∉ allowlist → REJECT.

Guard Etkisi: sentry.mode=="halt_entry" iken halt_entry talebi → APPROVE (uyumlu).

Reason: aggressive_overrides.enable=true ve len(reason)<minReasonChars → REJECT.

Quorum: Gereken quorum/of sağlanınca → APPROVE, aksi PENDING/timeout→REJECT.

8) Güvenlik

authVerify: sig doğrula; saat kayması ±120s.

RBAC kaynakları: policy.snapshot.roles + local cache.

Audit trail: tüm kararlar hash-zinciri ile bağlansın (prevEventIdHash).

Replay Koruması: approvalKey + userId + ts kombinasyonunu nonce olarak sakla.

9) Idempotency & Yarış Koşulları

approvalKey tekil. Aynı anda gelen onaylar optimistic lock ile toplanır (memory + atomic update).

Çift publish’i engelle: idemIndex.set(approvalKey, expiresAt); Out event üretmeden önce kontrol et.

10) Event Bus

In: operator.decision.final, manual.approval.request, policy.snapshot, sentry.guard.directive, confirmation.bounds.check, risk.incident.emergency_stop

Out: approval.pending, action.approved, action.rejected, approval.revoked, approval.metrics, approval.alert

11) Dosya Yapısı (öneri)
services/livia/actionApprovalGateway.ts        // FSM + karar tablosu
services/livia/lib/rbac.ts                     // rol kontrolü
services/livia/lib/chainBuilder.ts             // quorum/dual zinciri
services/livia/lib/allowlist.ts                // hedef doğrulama (failover)
services/livia/state/approvalStore.ts          // pending set, idem index, audit chain
services/livia/__tests__/actionApprovalGateway.test.ts
cfg/livia.approvals.yaml                       // profiller, allowlist, minReason

12) Test İskeleti (Jest/Vitest)

Dual (Failover): iki farklı ops kullanıcısı → action.approved(ttlSec=300).

Allowlist Reddi: hedef listede değil → action.rejected(allowlist_violation).

Aggressive Overrides (Single): 10 karakter gerekçe → rejected(reason_too_short); 30 karakter → approved.

Risk Limit Change (Quorum 2/3): tek policy onayı → approval.pending; ikinci onay gelince → approved; timeout → rejected(insufficient_quorum).

Bounds Şartı: bounds.ok=false → rejected(bounds_not_ok).

Emergency Bypass: emergency_stop.active=true + halt_entry(global) → tek onayla approved + approval.alert(warn,"emergency_bypass").

Idempotency: aynı approvalKey ikinci kez → yayın yok.

Revoke TTL: ttl dolunca approval.revoked(ttl_expired) + rollback olayı yayınlanır.

13) Telemetri & SLO

approval.metrics per 30 sn: pending, approved, rejected, revoked, avgLeadTimeSec, byAction{}.

P99 karar işleme süresi < 5 ms (IO hariç).

insufficient_quorum oranı < %10 (operasyonel hedef).

14) Örnek Akışlar
A) Failover (dual-control)

operator.decision.final(accepted, action="failover", to="exA-sec-1") → RBAC ok, allowlist ok.

approval.pending(quorum 2/2) yayınlanır.

İkinci ops onayı gelir → action.approved(ttlSec=180); SG-04 bu sinyalle switch planını uygular.

TTL dolarsa veya geri alınırsa → approval.revoked(ttl_expired) + endpoint.switch.rollback.

B) Risk limit change (quorum 2/3)

manual.approval.request (policy) → approval.pending(need 2/3); açıklama ≥20 karakter.

İkinci onay ops’tan gelir → action.approved; PolicyCoordinator değişikliği uygular (canary %10).

Üçüncü onay gelirse audit’e eklenir (quorum zaten sağlanmış).

C) Aggressive override (single + reason)

operator.decision.final(accepted, action="aggressive_overrides", enable=true, reason="…≥20ch…") → bounds.ok true ise action.approved(ttl=10m).

Sentry block_aggressive olursa bu onay saygı duyar ancak composer guard tarafından zaten kısıtlanır (uyarı çıkar: “guard overrides behavior”).

15) Entegrasyon Notları

LIVIA-01/02/04: Onay öncesi diyalog, sorular ve sınır kontrolleri burada ön koşul kabul edilir; sonuç action.approved|rejected olarak döner.

SENTRY/SG: action="failover" onaylandığında SG-04’e uygulanabilir sinyal (endpoint.switch.plan) çıkarılmalıdır (bu modül sadece kapıdır; uygulama başka servistedir).

POLICY: risk_limit_change/policy_deploy_canary onayları PolicyCoordinator tarafından uygulanır.

E2E: Orchestrator onay akışını sim modda test edebilir; approval.metrics ve approval.alert E2E rapora girer.
______________________________________________________________________________________________
LIVIA-06 · operatorUIBridge.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Operatör UI’sı (web/desktop) ile gerçek zamanlı köprü kurmak. operator.prompt.out / operator.question.out / approval.pending gibi olayları güvenli bir kanaldan UI’ya ilet, at-most-once teslimat sağlayacak şekilde ACK topla, yanıtları operator.response.in / operator.answer.in / manual.approval.request biçiminde geri yayınla. WS→SSE otomatik düşüş (fallback), rate-limit, backpressure, yeniden gönderim ve offline replay içersin.

1) Mimari & İlkeler

Transport: WebSocket (öncelikli) → başarısızlıkta SSE (fallback).

Güvenlik: İstemci isteklerinde X-Signature: HMAC-SHA256 (secret = BRIDGE_HMAC), ayrıca zaman damgası X-Ts (drift ±120s). Sunucu → İstemci push’larında da HMAC ekle.

Teslimat: At-most-once semantiği: her UI push’unda deliveryId + monoton seq; UI ACK gönderir. ACK gelmeyenler retry edilir (exponential backoff).

Idempotency: UI’dan gelen yanıtlar ackKey = userId#promptId#decisionId#ts ile dedupe edilir.

PII: Metin alanları piiRedactor filtresinden geçsin; sınıflandırma etiketi ve expiresAt eklensin.

Dil: TR; kısa/görsel odaklı. UI tarafı seçenekleri ve süresi (TTL) net görsün.

Saat dilimi: Europe/Istanbul, ISO-8601.

Gözlemlenebilirlik: ui.bridge.metrics (per 30 sn), ui.bridge.alert.

2) Girdiler (In) — Zod şemalarına dönüştürülecek örnekler
{
  "operator.prompt.out": {
    "event":"operator.prompt.out",
    "timestamp":"iso8601",
    "promptId":"dlg-avax-42",
    "title":"AVAX — Base/TWAP önerisi",
    "body":"• Varyant: Base→Conservative • Qty≈123.45 • Guard: slowdown",
    "options":[{"id":"opt-1","label":"Uygula"},{"id":"opt-2","label":"Miktarı %25 azalt"},{"id":"opt-3","label":"İptal"}],
    "context":{"symbol":"AVAXUSDT","variant":"base","exec":"twap","qty":123.45},
    "expiresAt":"iso8601",
    "audit":{"eventId":"...","producedBy":"livia-01","producedAt":"iso8601"}
  },

  "operator.question.out": {
    "event":"operator.question.out",
    "timestamp":"iso8601",
    "qId":"q-avax-42-1",
    "promptId":"dlg-avax-42",
    "title":"Yüksek slip riski",
    "text":"Slip p95 ~18 bps. Toleransını onaylıyor musun?",
    "kind":"confirm|numerical|choice",
    "expected":"yes|no|value|option",
    "constraints":{"min":0,"max":20,"step":1,"unit":"bps"},
    "options":[{"id":"ok","label":"Evet"},{"id":"no","label":"Hayır"}],
    "ttlSec":90,
    "context":{"symbol":"AVAXUSDT","mode":"slowdown","spreadBps":85}
  },

  "approval.pending": {
    "event":"approval.pending",
    "timestamp":"iso8601",
    "approvalKey":"run-42#failover#exA-sec-1",
    "action":"failover",
    "needed":{"quorum":2,"of":2},
    "received":[{"userId":"op-007","roles":["ops"],"ts":"iso8601"}],
    "expiresAt":"iso8601"
  }
}

3) Çıkışlar (Out) — Zod şemalarına dönüştürülecek örnekler
{
  "operator.response.in": {
    "event":"operator.response.in",
    "timestamp":"iso8601",
    "promptId":"dlg-avax-42",
    "decisionId":"opt-2|opt-1|opt-3|custom",
    "payload":{"note":"qty -%25 + limit"},
    "auth":{"userId":"op-007","sig":"hex"}
  },

  "operator.answer.in": {
    "event":"operator.answer.in",
    "timestamp":"iso8601",
    "qId":"q-avax-42-1",
    "answer":"yes|no|value|option",
    "value":18,
    "unit":"bps",
    "auth":{"userId":"op-007","sig":"hex"}
  },

  "manual.approval.request": {
    "event":"manual.approval.request",
    "timestamp":"iso8601",
    "approvalKey":"risk#limits.maxSlipBps#to=18",
    "action":"risk_limit_change",
    "payload":{"path":"limits.maxSlipBps","from":15,"to":18},
    "requestedBy":{"userId":"op-011","roles":["policy"],"sig":"hex"},
    "reason":"slip p95 artışı"
  }
}

4) UI Push Zarfı (server→client)

Tüm UI’ya giden mesajlar tek standart zarf içinde gönderilsin; içerik payload alanında orijinal event.

{
  "event":"ui.push",
  "timestamp":"iso8601",
  "deliveryId":"dlg-avax-42#000123",      // tekil
  "seq":123,                               // bağlantı başına monoton artan
  "kind":"prompt|question|approval|alert",
  "payload":{ ... orijinal event ... },
  "expiresAt":"iso8601",
  "sig":"hex"                              // server-side HMAC
}


ACK (client→server)

{
  "event":"ui.ack.in",
  "timestamp":"iso8601",
  "deliveryId":"dlg-avax-42#000123",
  "status":"received|rendered|acted",
  "latencyMs": 120,
  "auth":{"userId":"op-007","sig":"hex"}
}

5) İletişim Uçları

WS: wss://bridge/v1/ws (header: X-UserId, X-Ts, X-Signature)

Handshake: sunucu welcome{sessionId, seqStart, heartbeatSec} yayınlar.

Heartbeat: ping (server→client, 15s) / pong (client→server).

SSE: GET /v1/sse?userId=...&ts=...&sig=...

Event formatı: id:<deliveryId>\nevent: ui.push\ndata:<json>\n\n

POST Inbound:

/v1/response → operator.response.in

/v1/answer → operator.answer.in

/v1/ack → ui.ack.in
(Tümü HMAC zorunlu; body hash’i HMAC’e dahil.)

HMAC: sig = HMAC_SHA256(BRIDGE_HMAC, userId + "\n" + ts + "\n" + bodySha256)
Saat kayması: |now - ts| ≤ 120 sn değilse reject.

6) Rate-Limit & Backpressure

Kullanıcı başı: 60 mesaj/dk (server→client).

Inbound (client→server): 30 olay/dk, 5 yazı/sn burst.

Kuyruk sınırı: bağlantı başına 100 bekleyen ui.push.

Limit aşılırsa drop policy: oldest + ui.bridge.alert(warn,"client_slow").

Retry Politikası: ACK gelmezse 0.5s → 1s → 2s → 5s (maks 4 deneme); sonra dead-letter (diskte data/ui.dlq/).

7) Offline Replay & Senkronizasyon

Yeniden bağlanma: istemci X-Last-Seq ile gelir → sunucu gap’i replay(up to 200 items or 15m) yapar.

Eski expiresAt geçmiş prompt/question replay edilmez; yerine ui.push(kind="alert", "...expired").

8) Konfig (varsayılanlar)
{
  ws: { port: 7400, heartbeatSec: 15, connIdleSec: 900, maxConns: 200 },
  sse: { enabled: true, cacheSec: 5 },
  rate: { perUserPerMin: 60, inboundPerMin: 30, inboundBurstPerSec: 5 },
  backpressure: { maxPendingPerConn: 100, dropPolicy: "oldest" },
  retry: { attempts: 4, scheduleMs: [500, 1000, 2000, 5000] },
  security: { hmacHeader: "X-Signature", tsHeader: "X-Ts", maxDriftSec: 120 },
  delivery: { idPrefix: "ui", idemTtlSec: 600, replayMaxItems: 200, replayMaxMin: 15 },
  pii: { policyVersion: 1, redactorEnabled: true },
  i18n: { locale: "tr-TR", tz: "Europe/Istanbul" }
}

9) FSM — advance(sessionState, event, cfg, now) → emissions[]

Durumlar
DISCONNECTED → CONNECTING → CONNECTED → DELIVERING → AWAIT_ACK → IDLE → (RETRYING | FALLBACK_SSE) → DISCONNECTED

Geçişler (özet)

CONNECTED: operator.prompt.out|operator.question.out|approval.pending → ui.push üret, seq++, deliveryId ata → AWAIT_ACK.

ACK geldi (received|rendered|acted) → pending’den düş; operator.*.in yakalanırsa route et.

ACK timeout → RETRYING (backoff) → başarılı olmazsa DLQ + ui.bridge.alert(error,"ack_timeout").

WS hatası → deneme sayısı ≥3 ve 2 dk içinde ise FALLBACK_SSE.

SSE açık + client Last-Seq gönderdi → REPLAY → IDLE.

10) Dosya Yapısı (öneri)
services/livia/operatorUIBridge.ts            // FSM + router
services/livia/lib/transport/wsServer.ts      // WS server + heartbeat + sessions
services/livia/lib/transport/sseServer.ts     // SSE fallback
services/livia/lib/security/hmac.ts           // HMAC verify/sign + ts drift
services/livia/lib/delivery/queue.ts          // per-conn queue + retry + DLQ
services/livia/lib/delivery/idempotency.ts    // ack/response dedupe
services/livia/state/sessionStore.ts          // connections, lastSeq, presence
services/livia/lib/pii/redact.ts              // email/phone/IP mask + expiresAt
services/livia/lib/serialize/envelope.ts      // ui.push zarf formatı
services/livia/__tests__/operatorUIBridge.test.ts
cfg/livia.uiBridge.yaml

11) Test İskeleti (Jest/Vitest)

HMAC: sahte imza → 401 + ui.bridge.alert(error,"auth_failed").

ACK & Retry: ACK yok → 4 deneme → DLQ düşer; ACK geldiğinde tekrar yok (at-most-once).

Rate-Limit: 90/dk push denemesi → ~60 teslim + ui.bridge.alert(warn,"rate_limited").

Backpressure: client yavaş → 100’den sonra oldest düşer, alert üretir.

Reconnect + Replay: Last-Seq=100 ile bağlan → 101..max replay edilir; süresi geçenler atlanır.

Fallback: 3 WS hatası/120 sn → SSE’ye düşer, teslimat devam eder.

PII: metinde email/telefon → redacted çıktıyla gönderilir, classification/expiresAt set edilir.

Idempotency Inbound: aynı ackKey iki kez → ilki kabul, ikincisi yutulur.

12) Kenar Durumlar

expiresAt < now içeren prompt/question push’lanmaz; yerine expired uyarısı.

Multiple devices: aynı userId 2 bağlantı → politika: “leader only” (son bağlanan lider); eskisine ui.bridge.alert(info,"superseded").

Quiet hours (23:30–07:30) → yalnız kritik olaylar push; diğerleri queued (bridge.prefs ile uyum).

approval.pending UI’da onay butonu açsın; buton tıklaması manual.approval.requesta map edilir (RBAC kontrolü ayrı modülde).

Büyük payload (>64 KB) → linkRef ile dosyaya yaz (data/ui.blobs/…), push içinde kısa özet + linkRef gönder.

13) Telemetri & Alert

ui.bridge.metrics (per 30 sn):

{
  "event":"ui.bridge.metrics",
  "timestamp":"iso8601",
  "activeConns":12,
  "pendingPush":37,
  "ackMedianMs":420,
  "retryRate":0.07,
  "dlqSize":2,
  "fallbackSSE":3
}


ui.bridge.alert(level, message, context):

warn: client_slow, rate_limited, replay_trimmed

error: auth_failed, ack_timeout, transport_down

14) Örnek Akış

operator.prompt.out(dlg-avax-42, TTL=90s) gelir → ui.push(kind="prompt") seq=101, deliveryId=dlg-avax-42#000101.

UI ACK(received) → 1 sn sonra operatör opt-2 tıklar → POST /response → operator.response.in(decisionId="opt-2").

Ardından operator.question.out(q-... slip) push → UI numerik 18 girer → operator.answer.in(value=18) gider.

WS düşer → 3 deneme sonra SSE fallback; Last-Seq=102 ile replay yapılır.

Gün sonunda ui.bridge.metrics ve olası ui.bridge.alertler dashboard’da görünür.

15) Performans & SLO

Push → ACK p95 < 1500 ms (WS); SSE’de p95 < 2500 ms.

Dropless teslim (ACK alınan iletiler için) ≥ %99.9.

DLQ 0 hedefi; istisnai durumlarda operatör uyarısı.

16) Güvenlik Notları

Tüm inbound’larda HMAC zorunlu; ts drift kontrolü.

userId → RBAC eşlemesi LIVIA-05 zincirinde yapılır; burada sadece kimlik doğrulama + oran sınırı.

PII alanları maskelenir; classification ve expiresAt meta’sı eklenir (SEC-01 politikasıyla uyum).
______________________________________________________________________________________________
LIVIA-07 · knowledgeRouter.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Operatörün “Neden böyle oldu?/Politika ne diyor?/Oyun kitabı ne öneriyor?” tipi sorularını doğru belge ve pasaja yönlendirmek. Politika, oyun kitabı (playbook), SSS/FAQ ve senkronize KB (LIVIA-30) içinden RAG yönlendirme yap; gerekirse çoklu pasaj ve özet dön. Sonuçları LIVIA-01/08/09 gibi modüllerin kullanacağı biçimde yayınla.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest.

Event-driven JSON I/O, tüm giriş/çıkışlar Zod .strict() ile doğrulanır.

TZ: Europe/Istanbul, ISO-8601 timestamp.

Gizlilik: classification etiketi, PII maskeleme (LIVIA-21 ile uyum).

Güvenlik: RBAC (policy/pb/faq erişim hakları), kaynak allowlist.

İdempotency: routeKey = hash(queryNorm+ctx+policyVersion); TTL içinde tekrar yayın yok.

Telemetri: knowledge.route.metrics, Uyarı: knowledge.route.alert.

Dil: TR öncelik; EN sorgu gelirse i18n (LIVIA-13) ile normalize.

2) Bilgi Tabanı Şeması (kaynak dokümanlar)

Bu modül ingest etmez; belgeler LIVIA-30 knowledgeSyncIngestor.ts ile gelir. Burada okuma/arama yapılır.

Doküman:

{
  docId: "policy/limits.yaml@v42",
  source: "policy|playbook|faq|kb",
  title: "Limits v42",
  version: "v42",
  lang: "tr|en",
  tags: ["limits","slip","spread"],
  owners: ["policy-team"],
  visibility: ["ops","trader","policy"],
  effective: { from:"2025-08-01", to:null },
  chunks: [
    { chunkId:"c1", text:"Max slip 15bps ...", headings:["Limits","Slip"], meta:{path:"limits.maxSlipBps"} },
    { chunkId:"c2", text:"Max spread 80bps ...", headings:["Limits","Spread"], meta:{path:"limits.maxSpreadBps"} }
  ],
  checksum: "sha256:..."
}


Dizin (index) snapshot: kb.index.snapshot{ ts, stats, vectorReady:boolean }

3) Girdiler (In) — Zod’a çevrilecek şema örnekleri
{
  "knowledge.query": {
    "event": "knowledge.query",
    "timestamp": "iso8601",
    "q": "Neden agresif varyant kapalı?",
    "need": "policy|playbook|faq|auto",
    "lang": "tr|en|null",
    "context": {
      "symbol": "AVAXUSDT",
      "guardMode": "slowdown|block_aggressive|halt_entry|normal",
      "policyVersion": "v42",
      "tags": ["aggressive","limits","guard"]
    },
    "prefs": {
      "maxPassages": 2,
      "maxCharsPerPassage": 650,
      "citations": true
    },
    "auth": { "userId": "op-007", "roles": ["ops","trader"], "sig": "hex" }
  },

  "kb.index.snapshot": {
    "event":"kb.index.snapshot",
    "timestamp":"iso8601",
    "vectorReady": true,
    "stats": { "docs": 142, "chunks": 8120 }
  },

  "policy.snapshot": {
    "event":"policy.snapshot",
    "timestamp":"iso8601",
    "versionId":"v42",
    "effective": { "limits": { "maxSlipBps": 18, "maxSpreadBps": 80 }, "variants": { "aggressive": false } }
  }
}

4) Çıktılar (Out) — Şemalar
{
  "knowledge.route.select": {
    "event": "knowledge.route.select",
    "timestamp": "iso8601",
    "routeKey": "krun-42#v42#a1b2",
    "ok": true,
    "query": { "qNorm": "agresif varyant neden kapalı", "lang": "tr" },
    "top": [
      {
        "docId": "policy/variants@v42",
        "source": "policy",
        "title": "Variants v42",
        "score": 0.87,
        "passages": [
          {
            "chunkId": "c7",
            "excerpt": "Agresif varyant, latency/slip guard 'block_aggressive' iken devre dışı kalır...",
            "headings": ["Variants","Aggressive"],
            "meta": { "path": "variants.aggressive", "policyVersion": "v42" },
            "cit": { "href": "app://kb/policy/variants@v42#c7", "start": 0, "end": 160 }
          }
        ]
      },
      {
        "docId": "playbook/guard-response@pb-12",
        "source": "playbook",
        "title": "Guard Response Playbook",
        "score": 0.74,
        "passages": [
          {
            "chunkId": "c12",
            "excerpt": "Block_aggressive modunda öneri: conservative varyant + limit/twap ile giriş...",
            "headings": ["Guard","Block Aggressive"],
            "cit": { "href": "app://kb/playbook/guard-response@pb-12#c12" }
          }
        ]
      }
    ],
    "summary": "Politika v42'ye göre agresif varyant guard=block_aggressive iken kapalıdır. Oyun kitabı conservative+limit/twap önerir.",
    "audit": { "eventId": "...", "producedBy": "livia-07", "producedAt": "iso8601" }
  },

  "knowledge.route.nohit": {
    "event": "knowledge.route.nohit",
    "timestamp": "iso8601",
    "routeKey": "krun-42#v42#a1b2",
    "reason": "low_score|not_allowed|empty_query|index_not_ready",
    "hint": "Sorguyu netleştir: 'max slip kaç bps?'" 
  },

  "knowledge.route.alert": {
    "event":"knowledge.route.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"rbac_forbidden",
    "context":{"docId":"policy/limits@v42","userId":"op-007"}
  },

  "knowledge.route.metrics": {
    "event":"knowledge.route.metrics",
    "timestamp":"iso8601",
    "queries": 21,
    "nohitRate": 0.14,
    "avgRouteMs": 18,
    "bySource": { "policy": 0.61, "playbook": 0.29, "faq": 0.1 }
  }
}

5) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul", fallbackLang:"tr" },

  retrieval: {
    // aday toplama
    candidateK: 24,
    filters: { bySource: ["policy","playbook","faq","kb"], byLang:["tr","en"] },
    tagBoost: { aggressive: 0.15, guard: 0.12, slip: 0.10, spread: 0.08 },

    // hibrit arama
    dense: { enabled:true, dim:768, topK:24, index:"kb_vectors" },
    sparse:{ enabled:true, bm25TopK:30, k1:1.2, b:0.75 },

    // skor birleştirme (0..1)
    fuse: { alphaDense:0.6, betaSparse:0.4, titleBoost:0.05, pathBoost:0.05 },

    // yeniden sıralama
    rerank: { enabled:true, topK:10, features:["queryPassageCos","tagOverlap","policyExactPathHit"] },

    // eşik & sınırlar
    selectThreshold: 0.62,
    maxDocs: 2,
    maxPassagesPerDoc: 2
  },

  security: {
    rbac: { policy:["policy","ops","trader"], playbook:["ops","trader"], faq:["ops","trader","policy"], kb:["ops","trader","policy"] },
    piiMask: true,
    allowlistSources: ["policy","playbook","faq","kb"]
  },

  cache: { ttlSec: 600, maxEntries: 1000 },

  idempotencyTtlSec: 600
}

6) Boru Hattı (Pipeline) — Algoritma

Dil & Normalizasyon

lang yoksa i18n ile tespit et (LIVIA-13).

Sorguyu normalize et: küçük harf, noktalama temizliği, TR stopword.

context.tags → semantik genişletme sözlüğü uygula (ör. “aggressive” ↔ “saldırgan varyant”).

Aday Toplama (Recall)

Kaynak/rol filtresi (RBAC, allowlistSources).

Tag/versiyon/başlık eşleşmesi ile hızlı ön-seçim (metaveri filtresi).

Hibrit arama:

Dense: sorgu embedding → ANN (topK).

Sparse: BM25 (topK).

Adayları birleştir, tekrarları at.

Skor Birleştirme

score = alpha*Dense + beta*BM25 + titleBoost*(titleHit) + pathBoost*(policyPathHit); [0..1] clamp.

Rerank (Precision)

En iyi topK için özellikler: cosine, tagOverlap (Jaccard), policyExactPathHit (1/0), recencyBoost (effective.from yakınlığı).

Basit lineer model: rerank = 0.55*cos + 0.20*tag + 0.15*path + 0.10*recency; finalScore = max(score, rerank).

Seçim & Pasaj Kesimi

finalScore ≥ selectThreshold olan en çok maxDocs doküman.

Her dokümandan en çok maxPassagesPerDoc chunk; maxCharsPerPassage ile özet/kısalt.

PII maskesi uygula (email/telefon/IP → mask/hash).

cit.href üret (app://kb/<docId>#<chunkId>).

Sentez (opsiyonel)

need:"auto" ve birden fazla kaynaktan gelen tutarlı pasajlar varsa kısa özet (summary alanı) üret.

Güvenlik & RBAC

Kullanıcının rolü dokümanın visibility içinde değilse o dokümanı çıkarma; knowledge.route.alert(info,"rbac_forbidden").

Önbellek & İdempotency

routeKey ile sonuçları cache et; TTL içinde aynı sorgu+bağlam gelirse cache’den dön (yine event üret, audit yeni).

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE
knowledge.query geldi → VALIDATE_AUTH.

VALIDATE_AUTH
RBAC & kaynak kontrol; yetkisiz → knowledge.route.alert(error,"rbac_forbidden") + nohit(not_allowed).
Yetkili → RETRIEVE.

RETRIEVE
Index hazır mı (kb.index.snapshot.vectorReady)? Değilse sadece BM25; hiçbiri yoksa nohit(index_not_ready).
Adaylar → RERANK.

RERANK
Nihai skor ve kesim → SELECT.

SELECT
Pasaj kes/özet → knowledge.route.select yayınla; IDLE.

8) Kenar Durumlar

Boş/çok kısa sorgu (<3 kelime) → nohit(empty_query), ipucu döndür.

Çok fazla eşleşme → üst sınırı koru, “daha spesifik ara” ipucu ekle.

Versiyon uyuşmazlığı (policyVersion ≠ doc.version) → yine de gösterebilirsin ancak summary içine “Eski sürüm uyarısı” notu ekle.

Dil farkı (EN sorgu ama TR içerik) → otomatik TR→EN kısa çeviri ek alanı (i18n.text) ile döndür (LIVIA-13).

PII algılanırsa maskeler; maskeleme başarısızsa o pasajı at (knowledge.route.alert(warn,"pii_redact_failed")).

9) Telemetri
{
  "knowledge.route.metrics": {
    "event":"knowledge.route.metrics",
    "timestamp":"iso8601",
    "queries": 34,
    "nohitRate": 0.12,
    "avgRouteMs": 22,
    "denseUsed": true,
    "rerankUsed": true,
    "cacheHitRate": 0.37,
    "topTags": { "aggressive": 11, "guard": 9, "slip": 7 }
  }
}

10) Dosya Yapısı (öneri)
services/livia/knowledgeRouter.ts            // FSM + pipeline
services/livia/lib/normalize.ts              // dil/stopword/lemmatize
services/livia/lib/hybridSearch.ts           // dense+sparse birleştirme
services/livia/lib/rerank.ts                 // feature skorlama
services/livia/lib/passageCutter.ts          // excerpt & citation
services/livia/lib/rbac.ts                   // görünürlük/rol kontrolü
services/livia/state/krStore.ts              // cache, idem index, lastIndexSnap
services/livia/__tests__/knowledgeRouter.test.ts
cfg/livia.knowledge.yaml                     // retrieval/security/cache ayarları

11) Test İskeleti (Jest/Vitest)

RBAC: role dışı dokümanlar filtrelenir; alert üretilir.

Hybrid: dense kapalıyken sadece BM25; dense açıkken skor birleşimi doğru.

Rerank: path hit + tag overlap artınca finalScore ↑.

Threshold: finalScore<0.62 → nohit(low_score).

Multi-doc: 2 doküman, 1’er pasaj seçilir; özet üretilir.

PII: email geçen pasaj maskelenir.

Cache: aynı routeKey → cache hit, süre < önceki.

Version Mismatch: policyVersion≠doc.version → summary’de uyarı.

12) Örnek Akış (kısa)

knowledge.query{ q:"Neden agresif kapalı?", need:auto, ctx.guardMode:block_aggressive, policyVersion:v42 }

Adaylar: policy/variants@v42 (score=.81), playbook/guard-response@pb-12 (.68)

Rerank sonrası final: .87 ve .74; iki pasaj kesildi, PII yok.

knowledge.route.select + kısa summary yayınlandı.

knowledge.route.metrics güncellendi.

13) SLO

P95 route süresi < 50 ms (index bellekte varsayımı).

No-hit oranı < %15 (günlük, TR/EN karması).

Yanlış RBAC sızıntısı = 0 (politik dokümanlarda).
______________________________________________________________________________________________
LIVIA-08 · policyExplainer.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: “Neden bu karar/policy/guard tetiklendi?”, “Neden plan geçmedi?”, “Ne değişirse geçer?” sorularına kısa, denetlenebilir ve alıntılı açıklama üretmek.
Girdi olarak guard/policy/bounds/market sinyallerini alır; kontrastif açıklama (gerçek neden ↔ karşı-durum) çıkarır; ilgili belge pasajlarına (path/citation) ve son değer/limitlere atıf yapar. Sonuçlar UI kartı olarak gösterilebilir ve audit için saklanır.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest.

Event-driven JSON I/O; tüm payloadlar Zod .strict().

Zaman: ISO-8601, Europe/Istanbul.

İdempotency: explainKey = hash(kind + sourceId + snapshotTs); TTL içinde tekrarı bastır.

Gizlilik: classification:"SENSITIVE_LOW"; PII maskeleme (LIVIA-21).

Dil: TR kısa, 5 maddeyi geçmeyen bullet tarzı (UI’da ≤ 500 karakter).

Telemetri: policy.explain.metrics; Uyarı: policy.explain.alert.

2) Girdiler (In) — Zod şemaları (örnek)
{
  "sentry.guard.directive": {
    "event":"sentry.guard.directive",
    "timestamp":"iso8601",
    "mode":"normal|degraded|streams_panic|halt_entry",
    "expiresAt":"iso8601",
    "reasonCodes":["packet_gap>2s","feed_stale>5s"]
  },

  "latency_slip.guard.directive": {
    "event":"latency_slip.guard.directive",
    "timestamp":"iso8601",
    "mode":"normal|slowdown|block_aggressive|halt_entry",
    "expiresAt":"iso8601",
    "reasonCodes":["slip_p95>15bps","lat_p95>800ms"]
  },

  "policy.snapshot": {
    "event":"policy.snapshot",
    "timestamp":"iso8601",
    "versionId":"v42",
    "effective":{
      "limits":{"maxSlipBps":18,"maxSpreadBps":80,"minRR":1.2,"maxQtyUSD":25000},
      "variants":{"aggressive":false,"conservative":true}
    },
    "checksum":"sha256:..."
  },

  "confirmation.bounds.check": {
    "event":"confirmation.bounds.check",
    "timestamp":"iso8601",
    "checkId":"dlg-avax-42#v1",
    "symbol":"AVAXUSDT",
    "ok":false,
    "severity":"soft|hard",
    "violations":[
      {"code":"expected_slip_gt_max","got":18,"limit":15},
      {"code":"spread_gt_max","got":85,"limit":80}
    ],
    "derived":{"rr":1.56,"qtyUSD":1219.7,"leverageEst":1.6}
  },

  "market.refs": {
    "event":"market.refs",
    "timestamp":"iso8601",
    "symbol":"AVAXUSDT",
    "mid":9.87,
    "spreadBps":85
  },

  "cost.forecast.update": {
    "event":"cost.forecast.update",
    "timestamp":"iso8601",
    "symbol":"AVAXUSDT",
    "expectedSlipBps":18,
    "feeBps":{"taker":5,"maker":1.5}
  },

  "knowledge.route.select": {
    "event":"knowledge.route.select",
    "timestamp":"iso8601",
    "routeKey":"krun-42#v42#a1b2",
    "summary":"…",
    "top":[{"docId":"policy/variants@v42","passages":[{"meta":{"path":"variants.aggressive"},"cit":{"href":"app://kb/...#c7"}}]}]
  }
}


Not: knowledge.route.select opsiyonel; varsa citations zenginleşir.

3) Çıktılar (Out) — Şemalar
{
  "policy.explain": {
    "event":"policy.explain",
    "timestamp":"iso8601",
    "explainKey":"px#dlg-avax-42#v42",
    "kind":"guard|bounds|variant|policy_change",
    "title":"Neden reddedildi? — Slip ve spread limitleri aşıldı",
    "bullets":[
      "Slip p95 ≈ 18 bps, policy limiti 15 bps (v42/limits.maxSlipBps).",
      "Spread ≈ 85 bps, limit 80 bps; MARKET yerine LIMIT/TWAP önerilir.",
      "Guard=slowdown: agresif girişler kısıtlı; conservative + parçalı emir daha güvenli.",
      "RR=1.56 (≥1.2) → sorun değil; asıl red sebebi maliyet/likidite."
    ],
    "whatIf":[
      "Yöntem LIMIT olsaydı ve qty −%25, beklenen slip ≤ 15 bps → geçebilirdi.",
      "Spread ≤ 80 bps olduğunda MARKET/TAKER tekrar değerlendirilebilir."
    ],
    "citations":[
      {"path":"limits.maxSlipBps","version":"v42","href":"app://kb/policy/limits@v42#c1"},
      {"path":"limits.maxSpreadBps","version":"v42","href":"app://kb/policy/limits@v42#c2"},
      {"path":"variants.aggressive","version":"v42","href":"app://kb/policy/variants@v42#c7"}
    ],
    "context":{
      "symbol":"AVAXUSDT","guardMode":"slowdown","policyVersion":"v42",
      "violations":["expected_slip_gt_max","spread_gt_max"]
    },
    "audit":{"eventId":"...","producedBy":"livia-08","producedAt":"iso8601"}
  },

  "policy.explain.card": {
    "event":"policy.explain.card",
    "timestamp":"iso8601",
    "title":"Plan neden geçmedi?",
    "body":"Slip/Spread limitleri aşıldı. LIMIT + qty −%25 ile yeniden deneyin.",
    "links":[{"label":"Policy v42 — Limits","href":"app://kb/policy/limits@v42"}],
    "severity":"warn",
    "ttlSec":180
  },

  "policy.explain.metrics": {
    "event":"policy.explain.metrics",
    "timestamp":"iso8601",
    "explains":12,
    "byKind":{"bounds":7,"guard":3,"variant":2},
    "avgComposeMs":6,
    "withCitationsRate":0.92
  },

  "policy.explain.alert": {
    "event":"policy.explain.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"missing_policy_snapshot",
    "context":{"expectedVersion":"v42"}
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  style: {
    maxBullets: 5,
    includeNumbers: true,         // bps/limit/rr sayıları görünsün
    includeWhatIf: true,          // kontrastif 1-2 öneri
    includeCitations: true,
    cardMaxChars: 280
  },

  mapping: {
    // violation/guard → mesaj şablonları
    violations: {
      expected_slip_gt_max: "Slip p95 ≈ ${got} bps, policy limiti ${limit} bps.",
      expected_slip_gt_max_x2: "Slip ≈ ${got} bps, limitin 2 katı (${limit}).",
      spread_gt_max: "Spread ≈ ${got} bps, limit ${limit} bps; MARKET yerine LIMIT/TWAP önerilir.",
      min_rr_not_met: "RR ≈ ${got} (< ${limit}); SL sıkılaştır veya TP genişlet.",
      qty_usd_gt_max: "Miktar ≈ ${gotUSD}$, üst sınır ${limitUSD}$.",
      leverage_gt_max: "Tahmini kaldıraç ≈ ${lev}, üst sınır ${maxLev}."
    },
    guards: {
      slowdown: "Guard=slowdown: agresif girişler kısıtlı; conservative + parçalı emir daha güvenli.",
      block_aggressive: "Guard=block_aggressive: agresif varyant geçici olarak kapalı.",
      halt_entry: "Guard=halt_entry: yeni girişlere izin yok."
    }
  },

  whatIfRules: [
    // koşul → öneri
    { when: "expected_slip_gt_max", suggest: "exec='limit', qty×0.75, slices=3 → slip ≤ ${limit} bps olabilir." },
    { when: "spread_gt_max",        suggest: "spread ≤ ${limit} bps olduğunda MARKET tekrar denenebilir." },
    { when: "min_rr_not_met",       suggest: "SL −5 bps & TP +5 bps ile RR eşiğini geç." }
  ],

  idempotencyTtlSec: 600
}

5) Açıklama Üretim Boru Hattı (Pipeline)

Kontekst Topla

Son confirmation.bounds.check, guard.directive(ler), policy.snapshot, market.refs, cost.forecast.

Eğer policy.snapshot yoksa alert + kısıtlı açıklama.

Neden Kodlarını Çözümle

violations[].code → mapping.violations.

Guard modu varsa mapping.guards[mode] ek madde.

Sayısal Kanıtları Ekle

got/limit bps, RR, qtyUSD, leverageEst.

Varsa feeBps, beklenen işlem maliyeti (slip+fee) ≈ bps olarak eklenebilir.

Kontrastif (“What-If”) Oluştur

whatIfRules ile ihlale uygun 1–2 öneri (exec değişimi, qty azaltma, slices artırma, SL/TP ayarı).

Mümkünse nicel: “qty −%25 → expectedSlip ~ ≤ 15 bps”.

Alıntılar/Citations

policy.snapshot.versionId ve path (ör. limits.maxSlipBps) ile citations[].

Ek olarak knowledge.route.select.top[*].passages[*].cit varsa listeye ekle.

Kartlaştırma

UI için kısa kart: başlık + 1 cümlelik gövde + 1 bağlantı.

policy.explain.card opsiyoneldir; operatorUIBridge üzerinden gider.

İdempotency & Yayın

explainKey ile tekrarı önle (aynı check/guard için).

policy.explain, policy.explain.card?, policy.explain.metrics yayınla.

6) FSM — advance(state, event, cfg, now) → emissions[]

IDLE
Herhangi bir bounds.check ok=false veya bir guard.directive(mode≠normal) geldiğinde → COMPOSE.

COMPOSE
Bağlamla açıklama derle; sayı/şablon/what-if/citations üret.
Eksik kritik veri → WARN alert + kısıtlı açıklama.

EMIT
policy.explain(…)+card?+metrics → IDLE.

7) Kenar Durumlar

Eski Policy: policyVersion ≠ explain.context.policyVersion → “Eski sürüm” notu.

Çoklu İhlal: En fazla 3 madde göster; önem sırası: hard > cost(slippage/spread) > RR > qty/leverage.

PII: metinde PII algılanırsa maskele; mask başarısızsa card üretme, sadece policy.explain yayınla.

Stale Market: market.refs.ts güncel değilse “piyasa verisi gecikmiş” maddesi ekle.

Aggressive Kapalı: variants.aggressive=false iken “agresif neden kapalı?” sorusuna kısa madde: “Policy v42 aggressive=false; guard varsa ayrıca kısıtlar.”

8) UI’ya Gösterilecek Metin Şablonları (TR)

Başlık Örnekleri

Plan neden geçmedi? — Slip/Spread limitleri

Guard devrede — Agresif girişler kısıtlı

Madde Örnekleri

Slip p95 ≈ ${got} bps, limit ${limit}.

Spread ≈ ${got} bps (> ${limit}); LIMIT/TWAP önerilir.

RR ≈ ${rr} (eşik ${minRR}) — sorun yok.

What-If Örnekleri

LIMIT + qty −%25 + slices=3 ile tekrar deneyin.

Spread ≤ ${limit} bps olduğunda MARKET uygun olabilir.

9) Dosya Yapısı (öneri)
services/livia/policyExplainer.ts            // FSM + composer
services/livia/lib/explainCompose.ts         // şablon motoru + mapping
services/livia/lib/whatIfGenerator.ts        // karşı-durum üretici
services/livia/lib/citations.ts              // policy path → href
services/livia/state/explainStore.ts         // idem index, last snapshots
services/livia/__tests__/policyExplainer.test.ts
cfg/livia.policyExplainer.yaml               // style/mapping/whatIf ayarları

10) Test İskeleti (Jest/Vitest)

Slip & Spread: expected_slip=18>15, spread=85>80 → 2 madde + 1 what-if + citations.

Guard Slowdown: mode=slowdown → guard maddesi eklenir.

RR OK: rr≥minRR → “sorun değil” maddesi; red nedeni maliyet.

Hard Ihlal: leverage_gt_max → başlık “hard fail”, what-if yerine “blok” notu.

Eski Policy: version mismatch → “Eski sürüm” uyarısı.

Missing Policy: snapshot yok → policy.explain.alert("missing_policy_snapshot") ve sınırlı açıklama.

Idempotency: aynı explainKey ile tekrar üretim yok.

PII: PII geçen metin → maskeleme çalışır.

11) Örnek Akış (kısa)

confirmation.bounds.check(ok=false; violations=expected_slip_gt_max, spread_gt_max)

Son policy: v42; guard: slowdown; market spread 85 bps; slip forecast 18 bps.

policy.explain üret: 4 madde + 2 what-if + 3 citation.

policy.explain.card “Plan neden geçmedi?” başlığıyla UI’ya gider.

policy.explain.metrics metrikleri günceller.

12) SLO

P95 compose süresi < 10 ms (hazır snapshotlar varsayımı).

Citations içeren açıklama oranı ≥ %80.

Kart gövdesi ≤ 280 karakter; madde sayısı ≤ 5.
_____________________________________________________________________________________________
LIVIA-09 · decisionRationaleWriter.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Verilen/çekilen kararlar için denetlenebilir kısa gerekçe üretmek ve zincirlemek.
Kaynaklar: Orchestrator promptu, Guard Q&A sonuçları, Bounds kontrolleri, Policy açıklayıcı, Onay kapısı, Bias/Telemetri.
Çıktı: “kim, neyi, neden, hangi koşullarda” özetini tek kart ve audit-ready JSON olarak yayınla.
Standart: Node18+ / TypeScript / Zod .strict() / ISO-8601 / TZ=Europe/Istanbul / idempotent + audit + metrics.

1) İlkeler

Event-driven; tek girişle çok bağlam toplayıp tek gerekçe üret.

Kısa & sayısal: 280–400 karakter gövde; mümkünse bps/qty/RR/guard modu rakamları olsun.

Kaynak atfı: sources[] ve citations[] (policy path/route link).

İmzalı zincir: prevEventIdHash ile audit chain.

PII: LIVIA-21 (piiRedactor) ile maske.

İdempotency: decisionKey = hash(promptId + decisionId + finalPlan.digest); TTL içinde tekrar yayın yok.

2) Girdiler (In) — Zod şema örnekleri
{
  "operator.prompt.out": {
    "event":"operator.prompt.out",
    "timestamp":"iso8601",
    "promptId":"dlg-avax-42",
    "title":"AVAX — Base/TWAP önerisi",
    "context":{"symbol":"AVAXUSDT","variant":"base","exec":"twap","qty":123.45,"riskUnitUSD":250}
  },

  "guard.question.result": {
    "event":"guard.question.result",
    "timestamp":"iso8601",
    "promptId":"dlg-avax-42",
    "ok": true,
      "reasons":["slip_tolerance_ok"],
      "recommendation":{"action":"revise","params":{"exec":"limit","qtyFactor":0.75}}
  },

  "confirmation.bounds.check": {
    "event":"confirmation.bounds.check",
    "timestamp":"iso8601",
    "checkId":"dlg-avax-42#v1",
    "symbol":"AVAXUSDT",
    "ok": false,
    "severity":"soft",
    "violations":[{"code":"expected_slip_gt_max","got":18,"limit":15}],
    "derived":{"rr":1.56,"qtyUSD":1219.7}
  },

  "policy.explain": {
    "event":"policy.explain",
    "timestamp":"iso8601",
    "explainKey":"px#dlg-avax-42#v42",
    "kind":"bounds",
    "bullets":[ "Slip p95 ≈ 18 bps, limit 15 bps.", "LIMIT+qty −%25 ile geçer." ],
    "citations":[{"path":"limits.maxSlipBps","version":"v42","href":"app://kb/policy/limits@v42#c1"}]
  },

  "operator.response.in": {
    "event":"operator.response.in",
    "timestamp":"iso8601",
    "promptId":"dlg-avax-42",
    "decisionId":"opt-2",
    "payload":{"note":"limit +2bps uygundur"},
    "auth":{"userId":"op-007","roles":["trader"],"sig":"hex"}
  },

  "operator.decision.final": {
    "event":"operator.decision.final",
    "timestamp":"iso8601",
    "promptId":"dlg-avax-42",
    "decisionId":"opt-2",
    "accepted": true,
    "rationale":"qty -%25",
    "ttlSec": 120,
    "context":{"action":"commit_plan","symbol":"AVAXUSDT","variant":"base","exec":"limit","qty":92.59}
  },

  "action.approved": {
    "event":"action.approved",
    "timestamp":"iso8601",
    "approvalKey":"run-42#commit#dlg-avax-42",
    "action":"commit_plan",
    "payload":{"symbol":"AVAXUSDT","exec":"limit","qty":92.59},
    "by":[{"userId":"op-007","roles":["trader"],"ts":"iso8601"}]
  },

  "livia.bias.weights": {
    "event":"livia.bias.weights",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "overconfidence":0.41,"lossAversion":0.63,"riskSeeking":0.38,"confidence0to1":0.72
  }
}


Not: Tümü opsiyonel değil. Asgari: operator.decision.final zorunlu; bağlam zenginliği arttıkça gerekçe kalitesi artar.

3) Çıktılar (Out) — Şemalar
{
  "decision.rationale": {
    "event":"decision.rationale",
    "timestamp":"iso8601",
    "decisionKey":"dr#dlg-avax-42#opt-2#3d0a",
    "promptId":"dlg-avax-42",
    "decisionId":"opt-2",
    "accepted": true,
    "summary":"PLAN ONAY: LIMIT + qty −%25. Slip p95 18>15 bps — LIMIT ve parçalama ile maliyet düşürme; RR≈1.56 uygun.",
    "details":{
      "finalPlan":{"symbol":"AVAXUSDT","variant":"base→conservative?","exec":"limit","qty":92.59,"rr":1.56},
      "why":[
        "Bounds: expected_slip_gt_max (18>15 bps)",
        "GQE: revise → exec=limit, qty×0.75",
        "Policy v42: limits.maxSlipBps=15"
      ],
      "notes":["limit +2bps uygundur"]
    },
    "sources":[
      {"ref":"guard.question.result","id":"q-avax-42-1"},
      {"ref":"confirmation.bounds.check","id":"dlg-avax-42#v1"},
      {"ref":"policy.explain","id":"px#dlg-avax-42#v42"},
      {"ref":"action.approved","id":"run-42#commit#dlg-avax-42"}
    ],
    "citations":[{"path":"limits.maxSlipBps","version":"v42","href":"app://kb/policy/limits@v42#c1"}],
    "biasContext":{"overconfidence":0.41,"lossAversion":0.63,"riskSeeking":0.38,"confidence":0.72},
    "audit":{"eventId":"...","prevEventIdHash":"...","producedBy":"livia-09","producedAt":"iso8601"}
  },

  "decision.rationale.card": {
    "event":"decision.rationale.card",
    "timestamp":"iso8601",
    "title":"Neden LIMIT + miktar −%25?",
    "body":"Slip 18>15 bps. LIMIT + parçalama ile maliyet azaltıldı; RR≈1.56 uygun.",
    "links":[{"label":"Policy v42 – Limits","href":"app://kb/policy/limits@v42"}],
    "ttlSec":180,
    "severity":"info|warn|error"
  },

  "decision.rationale.metrics": {
    "event":"decision.rationale.metrics",
    "timestamp":"iso8601",
    "emitted": 21,
    "avgComposeMs": 5,
    "withCitationsRate": 0.88,
    "byOutcome":{"accepted":16,"rejected":3,"fallback":2}
  },

  "decision.rationale.alert": {
    "event":"decision.rationale.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"missing_required_context",
    "context":{"missing":["operator.decision.final"]}
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale: "tr-TR", tz: "Europe/Istanbul" },

  style: {
    maxSummaryChars: 400,
    maxCardChars: 280,
    bulletsMax: 3,
    includeNumbers: true,
    includeBiasContext: true,      // bias özetini ekle (kısa)
    redactPII: true
  },

  mapping: {
    // violation/guard → kısa cümle şablonları
    violations: {
      expected_slip_gt_max: "Slip p95 ${got}>${limit} bps.",
      spread_gt_max: "Spread ${got}>${limit} bps.",
      min_rr_not_met: "RR ${got}<${limit}."
    },
    guards: {
      slowdown: "Guard=slowdown: agresif kısıtları etkin.",
      block_aggressive: "Guard=block_aggressive: agresif kapalı.",
      halt_entry: "Guard=halt_entry: giriş yok."
    },
    outcomes: {
      accepted: "PLAN ONAY",
      rejected: "PLAN RED",
      fallback: "PLAN FALLBACK"
    }
  },

  chain: { includePrevHash: true },

  idempotencyTtlSec: 900
}

5) Kompozisyon Mantığı (Pipeline)

Bağlam Topla

operator.decision.final (zorunlu) → outcome, final plan (variant/exec/qty/sl/tp/rr).

Son operator.prompt.out (başlık, öneri), guard.question.result (revise/block/proceed), confirmation.bounds.check (ihlaller), policy.explain (bullets+citations), action.approved|rejected (onay durumu), livia.bias.weights (kısa bağlam).

Özet Üret

mapping.outcomes[outcome] + en fazla 2 ihlal cümlesi + 1 çözüm cümlesi.

Sayılar: slip/spread/rr/qty varsa dahil et (eşik/karşılaştırmalı).

Detay Bölümü

finalPlan: sembol, varyant (base→conservative gibi dönüşüm belirlenirse), exec, qty, rr (varsa).

why[]: (önem sırası) hard violations > cost (slip/spread) > policy > guard > gqe recommendation.

Operatör notu varsa maks 1 satır ekle.

Kaynak & Alıntı

sources[] (event kimlikleri), citations[] (policy path/route link).

Yoksa metin yine üret, ama withCitationsRate metriği düşer.

PII & Uzunluk

Maskeyi uygula → style.maxSummaryChars ve maxCardChars truncate (cümle sınırında kes).

İdempotency & Zincir

decisionKey hesapla; TTL içinde tekrar yut.

prevEventIdHash ekle (son decision.rationale hash’i).

6) FSM — advance(state, event, cfg, now) → emissions[]

IDLE
operator.decision.final geldi → COLLECT.

COLLECT
Son 60 sn içindeki ilgili olayları topla (prompt, guard, bounds, policy, approval, bias). Eksik kritik → WARN alert + minimal gerekçe. → COMPOSE

COMPOSE
Özet/Detay/Sources/Citations oluştur, PII mask, uzunluk kısalt. → EMIT

EMIT
decision.rationale + opsiyonel decision.rationale.card + decision.rationale.metrics yayınla. → IDLE

7) Kenar Durumlar

Timeout Fallback: operator.decision.final.accepted=true ama prompt yanıtı gelmedi → outcome “fallback”; özet “timeout→conservative/limit/qty−%25” gibi.

Reject: accepted=false → ihlaller/guard ana sebep; “ne değişirse geçer” kısa öneri.

Contradiction: bounds.ok=true ama policy.explain.kind=bounds → “stale data” notu ekle.

Aggressive Kapalı: policy.variants.aggressive=false + aggressive seçilmişse → “policy kapalıydı” madde.

Approval Missing: action.approved yok ama commit_plan gerekiyorsa → “pending approval” notu.

Bias not present: bias yoksa biasContext alanını atla.

8) UI Şablonları (TR)

Başlık:

Neden LIMIT + miktar −%25?

Plan reddi — RR/Slip sınırı

Gövde (≤280c):

Slip 18>15 bps. LIMIT + parçalama; RR≈1.56 uygun.

RR 1.1<1.2. SL −5 bps & TP +5 bps ile yeniden deneyin.

9) Dosya Yapısı (öneri)
services/livia/decisionRationaleWriter.ts          // FSM + orchestrasyon
services/livia/lib/rationaleCompose.ts             // özet/detay/sayı şablonları
services/livia/lib/sourceCollector.ts              // yakın olayları topla/normalize
services/livia/lib/hashChain.ts                    // prevEventIdHash
services/livia/state/rationaleStore.ts             // idem index + last hashes
services/livia/__tests__/decisionRationaleWriter.test.ts
cfg/livia.rationale.yaml                           // style/mapping/ttl ayarları

10) Test İskeleti (Jest/Vitest)

Accept + Revise: bounds slip ihlali + GQE revise → özet “LIMIT + qty −%25”, citations içerir.

Reject (RR): min_rr_not_met → öneri “SL −5 & TP +5”.

Fallback: prompt timeout → “fallback conservative/limit” metni.

Approval Link: commit_plan + action.approved var → sources içinde görünür.

Idempotency: aynı decisionKey → ikinci yayın yok.

PII: operatör notunda email/telefon → maskelenir.

Contradiction: stale policy/bounds → “stale data” notu.

Bias: biasContext varsa kısa satır eklenir, yoksa atlanır.

11) Örnek Akış (kısa)

operator.decision.final(accepted=true, exec=limit, qty×0.75) geldi.

60 sn içinde: bounds.check(expected_slip_gt_max), policy.explain(slippage), gqe.result(revise).

Kompozisyon → decision.rationale + decision.rationale.card çıktı; citations eklendi.

uiBridge kartı gösterdi; metrics arttı.

12) SLO

P95 compose < 10 ms.

withCitationsRate ≥ %80.

Idempotent collision < %0.1 (decisionKey iyi seçilmişse).

Özet ≤ 400c / Kart ≤ 280c ihlal oranı ≈ 0.
______________________________________________________________________________________________
LIVIA-10 · sessionMemory.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Diyalogda geçen kısa-vade karar slotlarını (sembol, varyant, yürütme tercihi, slip toleransı vb.) güvenli biçimde tutmak, güncellemek, TTL ile uçurmak ve sorgulanınca geri vermek. Kapsamlar: operatorId → (global | symbol | promptId). Tüm I/O event-driven JSON, Zod validasyon, idempotent, audit ve metrics standartlı.

1) Standartlar

Dil/Yığın: Node 18+, TypeScript, pnpm, Jest/Vitest.

Zaman: ISO-8601; Europe/Istanbul.

Şema: Zod .strict(), tüm sayılar finite().

Güvenlik: Inbound auth {userId, roles, sig} doğrulaması; RBAC: sadece kendi hafızasını yaz/oku.

Gizlilik: classification:"SENSITIVE_LOW"; PII alanları (serbest not) maskele (LIVIA-21 ile).

İdempotency: Aynı eventId|sourceHash tekrarında ikinci yazım yok (TTL içinde).

Telemetri: session.memory.metrics; Uyarı: session.memory.alert.

2) Hafıza Modeli (slot setleri)

Slot adları ve tipleri (örn.)

type Slots = {
  symbol?: string;                  // "AVAXUSDT"
  variant?: "base"|"aggressive"|"conservative";
  execPref?: "market"|"limit"|"twap"|"iceberg"|"post_only";
  slipTolBps?: number;              // 0..50
  spreadTolBps?: number;            // 0..200
  qtyPref?: number;                 // son onaylanan miktar (lot)
  qtyFactor?: number;               // 0.25..1.5 (gqe revise önerisi)
  rrMin?: number;                   // min risk/reward (örn. 1.2)
  slices?: number;                  // twap/iceberg parça sayısı
  notes?: string;                   // kısa not (PII mask)
};


Kapsam (scope)

scope="dialog" → promptId’e bağlı hızlı değişkenler (TTL kısa).

scope="symbol" → aynı sembol için alışkanlıklar.

scope="global" → operatörün genel tercihleri.

Kaynak önceliği (merge priority, yüksek → düşük):
operator.response.in > operator.answer.in > guard.question.result.recommendation > confirmation.bounds.check.derived > operator.decision.context.

3) Girdiler (In) — Zod şemaları (örnekler)
{
  "operator.decision.context": {
    "event":"operator.decision.context",
    "timestamp":"iso8601",
    "promptId":"dlg-avax-42",
    "symbol":"AVAXUSDT",
    "variant":"base",
    "exec":"twap",
    "qty":123.45,
    "slBps":45,"tpBps":70
  },

  "operator.response.in": {
    "event":"operator.response.in",
    "timestamp":"iso8601",
    "promptId":"dlg-avax-42",
    "decisionId":"opt-2|custom",
    "payload":{"note":"limit +2bps", "exec":"limit", "qtyFactor":0.75},
    "auth":{"userId":"op-007","roles":["trader"],"sig":"hex"}
  },

  "operator.answer.in": {
    "event":"operator.answer.in",
    "timestamp":"iso8601",
    "qId":"q-avax-42-1",
    "answer":"value|yes|no|option",
    "value":18,
    "unit":"bps|null",
    "auth":{"userId":"op-007","sig":"hex"}
  },

  "guard.question.result": {
    "event":"guard.question.result",
    "timestamp":"iso8601",
    "promptId":"dlg-avax-42",
    "recommendation":{"action":"revise","params":{"exec":"limit","qtyFactor":0.75,"slices":3}}
  },

  "confirmation.bounds.check": {
    "event":"confirmation.bounds.check",
    "timestamp":"iso8601",
    "checkId":"dlg-avax-42#v1",
    "symbol":"AVAXUSDT",
    "ok":true,
    "derived":{"rr":1.56}
  },

  "session.memory.upsert": {
    "event":"session.memory.upsert",
    "timestamp":"iso8601",
    "scope":"global|symbol|dialog",
    "promptId":"dlg-avax-42",
    "symbol":"AVAXUSDT",
    "slots":{"slipTolBps":15,"execPref":"limit"},
    "auth":{"userId":"op-007","sig":"hex"}
  },

  "session.memory.get": {
    "event":"session.memory.get",
    "timestamp":"iso8601",
    "scope":"auto|global|symbol|dialog",
    "promptId":"dlg-avax-42",
    "symbol":"AVAXUSDT",
    "keys":["symbol","variant","execPref","slipTolBps"],
    "auth":{"userId":"op-007","sig":"hex"}
  },

  "session.memory.clear": {
    "event":"session.memory.clear",
    "timestamp":"iso8601",
    "scope":"dialog|symbol|global",
    "promptId":"dlg-avax-42",
    "symbol":"AVAXUSDT",
    "keys":["notes"],
    "auth":{"userId":"op-007","sig":"hex"}
  }
}

4) Çıktılar (Out) — Şemalar
{
  "session.memory.updated": {
    "event":"session.memory.updated",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "scope":"dialog|symbol|global",
    "promptId":"dlg-avax-42",
    "symbol":"AVAXUSDT",
    "slots":{"execPref":"limit","slipTolBps":18,"qtyFactor":0.75,"slices":3},
    "ttlSec":1800,
    "audit":{"eventId":"...","producedBy":"livia-10","producedAt":"iso8601"}
  },

  "session.memory.snapshot": {
    "event":"session.memory.snapshot",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "scopes": {
      "dialog":{"promptId":"dlg-avax-42","slots":{"symbol":"AVAXUSDT","execPref":"limit"}},
      "symbol":{"AVAXUSDT":{"slots":{"variant":"conservative","slipTolBps":15}}},
      "global":{"slots":{"rrMin":1.2}}
    },
    "expiresAt":"iso8601"
  },

  "session.memory.queryResult": {
    "event":"session.memory.queryResult",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "scopeUsed":"dialog→symbol→global",   // çözüm sırası
    "slots":{"symbol":"AVAXUSDT","variant":"conservative","execPref":"limit","slipTolBps":15}
  },

  "session.memory.alert": {
    "event":"session.memory.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"rbac_forbidden|invalid_slot|ttl_expired|idem_duplicate",
    "context":{"scope":"global","key":"notes"}
  },

  "session.memory.metrics": {
    "event":"session.memory.metrics",
    "timestamp":"iso8601",
    "upserts":32,"gets":44,"clears":5,
    "hitRate":0.78,"gcEvictions":6,"avgLatencyMs":1.8
  }
}

5) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  ttl: {
    dialogSec: 1800,   // 30 dk
    symbolSec: 86400,  // 24 saat
    globalSec: 604800  // 7 gün
  },

  limits: {
    maxSymbolsPerUser: 50,
    maxNotesLen: 240,
    maxSlotsPerScope: 20
  },

  merge: {
    // yüksek → düşük öncelik (yukarıda)
    priority: ["operator.response.in","operator.answer.in","guard.question.result","confirmation.bounds.check","operator.decision.context"],
    lastWriteWins: true,
    clamp: {
      slipTolBps: [0,50],
      spreadTolBps: [0,200],
      qtyFactor: [0.25,1.5],
      rrMin: [1.0,5.0],
      slices: [1,12]
    }
  },

  security: {
    verifySignature: true,
    rbac: { read:["trader","ops","policy"], write:["trader","ops"] }
  },

  storage: {
    kind: "inMemoryWithSnapshot",   // memory + periyodik JSON snapshot
    snapshotEverySec: 300,
    path: "data/sessionMemory.json"
  },

  idempotencyTtlSec: 600
}

6) Boru Hattı (Upsert/Get/Clear) — Algoritma
A) Upsert (kaydet/güncelle)

Kaynak normalizasyonu: Etkin alanları slotlara eşle (örn. operator.answer.in.value → slipTolBps).

Clamp & tip kontrolü: merge.clamp sınırlarını uygula, tip uyumsuzsa alert(invalid_slot).

Kapsam seçimi:

session.memory.upsert.scope varsa onu kullan.

Yoksa heuristik: promptId varsa → dialog; yalnız symbol geliyorsa → symbol; aksi → global.

Idempotency: Aynı sourceHash (eventId/sha256 body) tekrarına yazma.

Merge: merge.priority sırasına göre gelen değerler üstte, mevcutla birleştir; lastWriteWins aynı seviyede üstteki.

PII: notes maskelenir ve limits.maxNotesLen’e kesilir.

Expire ayarla: scope TTL’ine göre expiresAt güncelle.

Emit: session.memory.updated.

B) Get (sorgu)

RBAC & auth doğrulaması.

scope="auto" ise çözüm sırası: dialog(promptId) → symbol(symbol) → global.

İlgili slotlar TTL’e göre geçerliyse topla; yoksa bir alt kapsama düş.

Emit: session.memory.queryResult + istenirse tüm resmi session.memory.snapshot.

C) Clear (sil)

RBAC & auth.

Belirtilen keys[] veya tümü; notes gibi PII alanlar öncelikli silinir.

Emit: session.memory.updated (boşaltılmış alanlarla) + alert(info,"cleared").

D) GC (çöp toplayıcı)

Periyodik: süresi biten entry’leri sil; metrics.gcEvictions++.

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE
operator.* | guard.* | confirmation.* | session.memory.* geldikçe ROUTE.

ROUTE
Event türüne göre UPSERT / GET / CLEAR dalları.

UPSERT
Slot çıkar → merge → TTL → memory.updated.

GET
Çözüm sırası → memory.queryResult (ve/veya snapshot).

CLEAR
Silme → memory.updated.

Dönüş: IDLE.

8) Slot Eşleme Kuralları (örnek tablo)
Kaynak Olay	Slot	Dönüşüm/Not
operator.decision.context.exec	execPref	doğrudan
operator.decision.context.symbol	symbol	doğrudan
operator.response.in.payload.exec	execPref	override
operator.response.in.payload.qtyFactor	qtyFactor	clamp 0.25..1.5
operator.answer.in (unit=bps)	slipTolBps	value→int
guard.question.result.params.slices	slices	min 1
confirmation.bounds.check.derived.rr	rrMin	floor(1.d)

Geliştirilebilir: spreadTolBps, post_only, iceberg.slices vb.

9) Kenar Durumlar

Çakışan sembol: dialog slotunda symbol değişirse eski dialog entry expire edilir.

Aşırı sembol sayısı: limits.maxSymbolsPerUser aşıldı → en eski symbol scope kayıtları atılır (alert(warn,"symbol_evicted")).

Boş/Geçersiz slot: değer NaN|∞|out-of-range → güncelleme reddi + alert(warn,"invalid_slot").

Stale dialog: promptId yoksa dialog scope’a yazma.

RBAC: policy rolü write edemez (sadece read).

Clock drift: timestamp çok eski/gelecek → yine kabul (hafıza), audit’e not düş.

10) Telemetri
{
  "session.memory.metrics": {
    "event":"session.memory.metrics",
    "timestamp":"iso8601",
    "upserts": 32,
    "gets": 44,
    "clears": 5,
    "hitRate": 0.78,
    "gcEvictions": 6,
    "avgLatencyMs": 1.8,
    "byScope": {"dialog":18,"symbol":15,"global":3}
  }
}

11) Dosya Yapısı (öneri)
services/livia/sessionMemory.ts               // FSM + router
services/livia/lib/slotExtract.ts             // event→slot eşleyici
services/livia/lib/mergeRules.ts              // öncelik/clamp/lastWriteWins
services/livia/lib/authRbac.ts                // auth + RBAC
services/livia/lib/piiMask.ts                 // notes maskeleme
services/livia/state/sessionStore.ts          // in-memory + snapshot + TTL index
services/livia/__tests__/sessionMemory.test.ts
cfg/livia.sessionMemory.yaml                  // ttl/limits/merge/security/storage

12) Test İskeleti (Jest/Vitest)

Upsert Merge Önceliği: context.exec=twap → sonra response.exec=limit → sonuç execPref=limit.

Answer→Slot: answer.value=18 (bps) → slipTolBps=18 (clamp & int).

GQE Revise: qtyFactor=0.75,slices=3 kaydolur; TTL dolunca silinir.

Get Auto Scope: dialog yoksa symbol→global çözümü çalışır.

Clear: notes silinince updated + alert(info).

GC: süre dolan dialog kayıtları temizlenir; gcEvictions artar.

RBAC: policy rolü upsert edemez (403).

Idempotency: aynı sourceHash ikinci kez yazılmaz.

Limits: notes uzunluğu >240 → kesilir ve PII maskesi uygulanır.

13) Örnek Akış (kısa)

operator.decision.context(symbol=AVAX, exec=twap) → dialog slot: symbol, execPref=twap.

operator.answer.in(value=18 bps) → slipTolBps=18.

guard.question.result(revise: exec=limit, qtyFactor=0.75, slices=3) → override.

operator.response.in(payload.exec=limit) → final execPref=limit.

session.memory.get(scope=auto, symbol=AVAX) → execPref=limit, slipTolBps=18, qtyFactor=0.75.

30 dk sonra dialog TTL biter; symbol scope kayıtları kalır.

14) SLO

P95 upsert/get < 2 ms (in-memory).

Hit rate ≥ %70 (auto scope çözümünde).

GC drift < ±5 s (snapshot/GC döngüsü).
______________________________________________________________________________________________
LIVIA-11 · operatorNoteTaker.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Diyalog/işlem sırasında oluşan sinyallerden insan okunur seans notları ve eylem maddeleri (action items) üretmek; bunları Markdown dosyalarına (session ve daily) güvenli şekilde yazmak, gerekirse kısa özet üretmek ve UI’ya kart olarak yollamak. Tüm I/O event-driven JSON, Zod validasyon, Europe/Istanbul, idempotent + audit + metrics standartlı.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest.

Zod .strict() ile tüm In/Out şemaları.

Zaman: ISO-8601, TZ=Europe/Istanbul.

Gizlilik: classification:"SENSITIVE_LOW"; PII maskeleme (LIVIA-21) → dosyaya maskeli yaz.

İdempotency: her not satırı için noteKey = sha256(normalize(line)+sessionId); TTL içinde yineleneni yazma.

Telemetri: notes.metrics; uyarılar: notes.alert.

Dosya güvenliği: atomic write (temp→rename), process-wide lock; satır formatı Append-only.

2) Girdiler (In) — Zod şema örnekleri
{
  "decision.rationale": {
    "event":"decision.rationale",
    "timestamp":"iso8601",
    "promptId":"dlg-avax-42",
    "decisionId":"opt-2",
    "accepted":true,
    "summary":"PLAN ONAY: LIMIT + qty −%25…",
    "details":{"finalPlan":{"symbol":"AVAXUSDT","exec":"limit","qty":92.59,"rr":1.56},"why":["expected_slip_gt_max"]},
    "biasContext":{"overconfidence":0.41},
    "audit":{"eventId":"..."}
  },

  "policy.explain": {
    "event":"policy.explain",
    "timestamp":"iso8601",
    "kind":"bounds|guard|variant|policy_change",
    "title":"Neden reddedildi? — Slip...",
    "bullets":["Slip p95 18>15 bps","LIMIT önerisi"],
    "citations":[{"path":"limits.maxSlipBps","version":"v42"}],
    "context":{"symbol":"AVAXUSDT","guardMode":"slowdown"}
  },

  "approval.pending": {
    "event":"approval.pending",
    "timestamp":"iso8601",
    "approvalKey":"run-42#failover#exA-sec-1",
    "action":"failover",
    "needed":{"quorum":2,"of":2}
  },

  "action.approved": {
    "event":"action.approved",
    "timestamp":"iso8601",
    "action":"commit_plan",
    "payload":{"symbol":"AVAXUSDT","exec":"limit","qty":92.59},
    "by":[{"userId":"op-007","roles":["trader"]}]
  },

  "incident.started": {
    "event":"incident.started",
    "timestamp":"iso8601",
    "id":"inc-2025-09-13-1",
    "severity":"high",
    "title":"Slip spike on SG02",
    "tags":["slip","latency"]
  },

  "incident.closed": {
    "event":"incident.closed",
    "timestamp":"iso8601",
    "id":"inc-2025-09-13-1",
    "resolution":"policy rollback v42→v41",
    "durationMin":37
  },

  "telemetry.anomaly.signal": {
    "event":"telemetry.anomaly.signal",
    "timestamp":"iso8601",
    "series":"order.slip.p95",
    "kind":"spike",
    "severity":"high"
  },

  "operator.note.add": {
    "event":"operator.note.add",
    "timestamp":"iso8601",
    "sessionId":"sess-avax-42",
    "text":"Limit +2 bps uygundur, TWAP yerine 3 slice limit deneyelim.",
    "auth":{"userId":"op-007","sig":"hex"}
  }
}


Not: Girdiler opsiyoneldir; en az bir kaynak geldiğinde seans defterine uygun satır üret.

3) Çıktılar (Out) — Şemalar
{
  "operator.notes.append": {
    "event":"operator.notes.append",
    "timestamp":"iso8601",
    "sessionId":"sess-avax-42",
    "lines":[
      {
        "ts":"iso8601",
        "kind":"decision",
        "text":"PLAN ONAY: AVAX LIMIT + qty −%25; RR≈1.56. Gerekçe: slip 18>15 bps → LIMIT.",
        "tags":["decision","avax","limit","slip"],
        "source":"decision.rationale",
        "noteKey":"sha256:..."
      },
      {
        "ts":"iso8601",
        "kind":"action",
        "text":"EYLEM: `limits.maxSlipBps` v42 gözden geçir (öneri: 18→15), sorumlu: policy-team, süre: 24s.",
        "tags":["action","policy"],
        "due":"2025-09-14T18:00:00+03:00",
        "owner":"policy-team",
        "noteKey":"sha256:..."
      }
    ],
    "audit":{"eventId":"...","producedBy":"livia-11","producedAt":"iso8601"}
  },

  "notes.session.md": {
    "event":"notes.session.md",
    "timestamp":"iso8601",
    "path":"data/notes/2025-09-13/sess-avax-42.md",
    "sizeBytes": 2480,
    "summary":"AVAX seansı: plan onayı (limit -%25), guard=slowdown; 1 eylem, 0 bekleyen onay."
  },

  "notes.daily.md": {
    "event":"notes.daily.md",
    "timestamp":"iso8601",
    "path":"data/notes/2025-09-13/Daily.md",
    "summary":"Günlük özet: 3 karar, 1 incident (37 dk), 2 onay, 3 eylem.",
    "counts":{"decision":3,"incident":1,"approval":2,"action":3}
  },

  "notes.card": {
    "event":"notes.card",
    "timestamp":"iso8601",
    "title":"Seans notu güncellendi (AVAX)",
    "body":"Limit + qty −%25 onaylandı. 1 eylem: slip limiti gözden geçir (24s).",
    "severity":"info",
    "ttlSec":180
  },

  "notes.alert": {
    "event":"notes.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"write_failed|pii_redact_failed|idem_duplicate|lock_timeout",
    "context":{"path":"data/notes/...md"}
  },

  "notes.metrics": {
    "event":"notes.metrics",
    "timestamp":"iso8601",
    "appends":14,"sessions":3,"dailyRollups":1,
    "avgAppendMs":2.7,"writeErrors":0,"dedupeRate":0.18
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul", dateFmt:"YYYY-MM-DD HH:mm" },

  storage: {
    rootDir: "data/notes",
    sessionFilePattern: "{YYYY-MM-DD}/sess-{symbol}-{hash(promptId)}.md",
    dailyFilePattern:  "{YYYY-MM-DD}/Daily.md",
    atomicWrite: true,
    lockTimeoutMs: 3000
  },

  compose: {
    maxLineLen: 160,
    includeBiasMini: true,     // biasContext varsa "bias: OC=0.41" gibi kısa ek
    includeCitations: true,    // policy path/versiyon kısa notu
    tagRules: {                // otomatik etiketler
      decision: ["decision","limit","twap","qty","rr"],
      incident: ["incident","slip","latency","rollback"],
      approval: ["approval","quorum","failover"],
      action: ["action","owner","due"]
    }
  },

  actionHeuristics: {
    // satır/metadan eylem çıkarımı
    fromPolicyExplain: [
      { ifContains:["LIMIT önerisi"], then:"UYGULAMA: planı LIMIT ile yeniden değerlendir", owner:"ops", dueHours:4 }
    ],
    fromDecision: [
      { ifContains:["RR<"], then:"SL/TP parametreleri tekrar ayarla", owner:"trader", dueHours:2 }
    ],
    fromIncident: [
      { always:true, then:"Postmortem taslağını başlat", owner:"ops", dueHours:12 }
    ]
  },

  pii: {
    enabled: true,
    fields:["text"],
    maskWith:"***"
  },

  rollup: {
    sessionToDaily: true,
    dailyRunAt: "18:05",     // Europe/Istanbul
    emptyDayNote: "Olay yok / normal operasyon."
  },

  idempotencyTtlSec: 900
}

5) Çıkarma & Kompozisyon (Pipeline)

Kaynak Toplama

Son 90 sn içindeki ilgili olayları memory’de tut (rationale, policy.explain, approval., incident., anomaly).

sessionId çöz: promptId varsa sess-{symbol}-{hash(promptId)}; yoksa sess-generic-{date}.

Satır Üretimi (line builders)

decision.rationale → decision: sembol, exec, qty, RR, ana gerekçe; bias mini (OC=0.41 gibi) opsiyonel.

policy.explain → info/action: ihlal/guard özetini info; whatIf/öneri varsa action maddesi çıkar.

approval.pending/approved/rejected → approval: “Failover 2/2 bekleniyor/Onaylandı/Reddedildi (neden…)”.

incident.started/closed → incident: başlık, şiddet, süre/çözüm.

anomaly.signal → info: “Slip p95 spike (high)”.

Eylem (Action) Çıkarımı

actionHeuristics kurallarını sırayla uygula; due = now + dueHours.

Sahip (owner) belirlenemiyorsa owner:"ops".

Satır Normalizasyonu

TR kısa; compose.maxLineLen üstünü cümle sınırında kes.

PII maskesi uygula.

tags[] otomatik üret (symbol, exec, rr, slip vs.).

noteKey hesapla; idem kontrol.

Yazım

Session .md dosyasına append (atomic).

Gerekirse daily rollup kuyruğuna işaret bırak (scheduler saati gelince çalışır).

Kart

Önemli satırlarda (decision, action, incident) notes.card üret; operatorUIBridge’e gidecek.

6) Markdown Formatı

Session dosyası (sess-avax-42.md) örnek:

---
sessionId: sess-avax-42
symbol: AVAXUSDT
startedAt: 2025-09-13T15:42:10+03:00
tags: [avax, trading]
---

### 15:43 PLAN
PLAN ONAY: AVAX LIMIT + qty −%25; RR≈1.56. Gerekçe: slip 18>15 bps → LIMIT. {tags: decision, avax, limit, slip}

### 15:44 POLICY
Slip p95 18>15 bps; LIMIT önerisi. (v42/limits.maxSlipBps) {tags: info, policy}

### 15:45 ACTION
`limits.maxSlipBps` v42 gözden geçir; sorumlu: policy-team; son tarih: 2025-09-14 18:00. {tags: action, policy}


Daily dosyası (YYYY-MM-DD/Daily.md) başlıkları:

Kararlar, Onaylar, Olaylar, Eylemler, Notlar; toplam sayılar ve kısa özet.

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE
Her In olayında COLLECT.

COLLECT
Olayı normalize et, PII mask, satır adayları oluştur → APPEND.

APPEND
Lock al → session.md’ye append → operator.notes.append + notes.session.md (path + kısa özet) → lock bırak.
Eğer günlük saatine yaklaşıldıysa → ROLLUP.

ROLLUP
Günlük dosyasını üret/güncelle → notes.daily.md.
Dönüş: IDLE.

8) Kenar Durumlar

İdempotent çakışma: aynı noteKey ikinci kez → yut + notes.alert(info,"idem_duplicate").

Lock Timeout: 3 sn’de lock alınamazsa retry (3 kez, jitter); başarısız → write_failed.

PII mask hatası: maskeleme başarısız → satırı yazma, alert üret.

Büyük dosya (>1MB/gün): otomatik segment (Daily_part2.md) ve index ekle.

Eksik context (symbol/promptId yok): sess-generic-{date} altında yaz, tags minimal.

Saat taşması (UTC/Istanbul farkı): dosya yolu local date ile hesaplanır.

9) Telemetri
{
  "notes.metrics": {
    "event":"notes.metrics",
    "timestamp":"iso8601",
    "appends": 14,
    "sessions": 3,
    "dailyRollups": 1,
    "avgAppendMs": 2.7,
    "writeErrors": 0,
    "dedupeRate": 0.18,
    "byKind": {"decision":6,"action":3,"approval":2,"incident":1,"info":2}
  }
}

10) Dosya Yapısı (öneri)
services/livia/operatorNoteTaker.ts           // FSM + orchestrasyon
services/livia/lib/noteBuilders.ts            // event→satır üreticileri
services/livia/lib/actionExtractor.ts         // heuristik eylem çıkarımı
services/livia/lib/piiMask.ts                 // LIVIA-21 entegrasyon
services/livia/lib/mdWriter.ts                // atomic append + lock
services/livia/lib/rollup.ts                  // günlük özet üretimi
services/livia/state/notesStore.ts            // idem index + dosya index
services/livia/__tests__/operatorNoteTaker.test.ts
cfg/livia.notes.yaml                           // storage/compose/heuristics

11) Test İskeleti (Jest/Vitest)

Decision→Satır: rationale’dan doğru TR kısa satır, tags & qty/RR dahil.

Explain→Action: what-if içeren explain’den eylem çıkarımı + due hesap.

Approval Flow: pending→approved iki satır ve kart üretimi.

Incident Lifecycle: started→closed satırları ve günlük özet artışı.

PII Mask: e-posta/telefon içeren operator.note.add satırında maske.

Atomic Write: eşzamanlı 3 append → tekil, bozulmamış dosya.

Idempotency: aynı rationale tekrar geldiğinde ikinci yazım yok.

Rollup: gün sonu çalışınca Daily.md oluşur, counts doğru.

Large File Segment: >1MB olduğunda segment & index.

12) Örnek Akış (kısa)

decision.rationale (accepted, LIMIT, qty×0.75) → session.md’ye “PLAN ONAY…” satırı yazılır + notes.card.

Ardından policy.explain (LIMIT önerisi) → info + action satırları; eylem sahibi policy-team, due 24s.

approval.pending → “Failover 2/2 bekleniyor”; action.approved → “Onaylandı” satırı.

incident.started ve sonra incident.closed → incident satırları; gün sonunda Daily.md güncellenir.

13) SLO

Append P95 < 5 ms (disk cache varsayımı).

Write error oranı < %0.5.

Dedupe (idem) ≥ %10 (aynı olay spam’inde).

Daily rollup saatinden sonra ≤ 30 sn içinde hazır.
_____________________________________________________________________________________________
LIVIA-12 · promptTemplateRegistry.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Soru/öneri/rapor/karteşli tüm metin şablonlarını sürümlü ve çok dilli bir kayıt defterinde tutmak; doğrulamak, önizlemek, getirmek, silmek/deprecate etmek ve kataloglamak. Şablon değişimleri audit-ready; değişkenler tipli (Zod), i18n eşitliği zorunlu, compliance filtreli. Diğer modüller (LIVIA-01/06/07/08/09/25/31) buradan tüketir.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest.

Event-driven JSON I/O, tüm payloadlar Zod .strict().

TZ: Europe/Istanbul; timestamp ISO-8601.

İdempotency: tplKey = id + kind + version + locale; aynı içerik checksum ile dedupe.

Güvenlik: HMAC/JWT doğrulama; RBAC (yazma: policy/ops, okuma: tüm tüketiciler).

Gizlilik/Compliance: PII sızıntısına ve yasaklı terimlere karşı iç denetim (LIVIA-20/21 ile uyumlu).

Dil: TR/EN paralel; değişken kümesi tüm dillerde aynı olmak zorunda.

2) Şablon Modeli

TemplateHeader

{
  id: string,                      // benzersiz kısa ad (kebab-case)
  kind: "prompt"|"question"|"report"|"card"|"explain"|"rationale",
  version: "semver",               // "1.2.0"
  locale: "tr-TR"|"en-US",
  tags?: string[],                 // "guard","slip","approval"…
  owners: string[],                // ekip/kişiler
  visibility: string[],            // "ops","trader","policy"
  deprecated?: boolean
}


TemplateBody

{
  engine: "handlebars"|"mustache",
  body: string,                    // metin gövdesi
  variables: Array<{
    name: string,                  // {{name}}
    type: "string"|"number"|"int"|"boolean"|"enum"|"json",
    required: boolean,
    enumValues?: string[],
    default?: any,
    description?: string
  }>,
  constraints?: {
    maxChars?: number,             // örn. card ≤ 280
    forbid?: string[],             // yasak kelimeler
    require?: string[]             // zorunlu kelimeler
  },
  examples?: Array<{ input:any, preview?:string }>
}


TemplateRecord = Header + Body + metadata

{
  header: TemplateHeader,
  body: TemplateBody,
  checksum: "sha256:…",
  createdBy: { userId:string, ts:string },
  updatedBy?: { userId:string, ts:string },
  lineage?: { previous?: string }, // "1.1.0"
}

3) Girdiler (In) — Zod şemaları (örnekler)
{
  "template.upsert": {
    "event":"template.upsert",
    "timestamp":"iso8601",
    "template": {
      "header": {
        "id":"entry-limit-revise",
        "kind":"prompt",
        "version":"1.0.0",
        "locale":"tr-TR",
        "tags":["entry","limit","revise"],
        "owners":["ops"],
        "visibility":["trader","ops"]
      },
      "body": {
        "engine":"handlebars",
        "body":"{{symbol}} — LIMIT giriş: qty {{qty}} (×{{qtyFactor}}), SL {{slBps}} bps, TP {{tpBps}} bps. Onaylar mısın?",
        "variables":[
          {"name":"symbol","type":"string","required":true},
          {"name":"qty","type":"number","required":true},
          {"name":"qtyFactor","type":"number","required":false,"default":1.0},
          {"name":"slBps","type":"int","required":true},
          {"name":"tpBps","type":"int","required":true}
        ],
        "constraints":{"maxChars":280}
      }
    },
    "auth":{"userId":"op-011","roles":["ops"],"sig":"hex"}
  },

  "template.delete": {
    "event":"template.delete",
    "timestamp":"iso8601",
    "id":"entry-limit-revise",
    "version":"1.0.0",
    "locale":"tr-TR",
    "mode":"soft|hard",    // soft=deprecated, hard=kalıcı sil
    "auth":{"userId":"op-011","roles":["ops"],"sig":"hex"}
  },

  "template.get": {
    "event":"template.get",
    "timestamp":"iso8601",
    "id":"entry-limit-revise",
    "version":"1.0.0|latest",
    "locale":"tr-TR|auto",
    "auth":{"userId":"op-007","roles":["trader"],"sig":"hex"}
  },

  "template.render.request": {
    "event":"template.render.request",
    "timestamp":"iso8601",
    "id":"entry-limit-revise",
    "version":"1.0.0|latest",
    "locale":"tr-TR|en-US|auto",
    "input":{"symbol":"AVAXUSDT","qty":92.59,"qtyFactor":0.75,"slBps":45,"tpBps":70},
    "validateOnly": false,
    "auth":{"userId":"op-007","roles":["trader"],"sig":"hex"}
  },

  "i18n.switch.notice": {
    "event":"i18n.switch.notice",
    "timestamp":"iso8601",
    "prefer":"tr-TR|en-US",
    "userId":"op-007"
  }
}

4) Çıktılar (Out) — Şemalar
{
  "template.upsert.ok": {
    "event":"template.upsert.ok",
    "timestamp":"iso8601",
    "tplKey":"entry-limit-revise#1.0.0#tr-TR",
    "checksum":"sha256:…",
    "warnings":["en-US karşılığı eksik — parity uyarısı"],
    "audit":{"eventId":"...","producedBy":"livia-12","producedAt":"iso8601"}
  },

  "template.delete.ok": {
    "event":"template.delete.ok",
    "timestamp":"iso8601",
    "tplKey":"entry-limit-revise#1.0.0#tr-TR",
    "mode":"soft"
  },

  "template.get.result": {
    "event":"template.get.result",
    "timestamp":"iso8601",
    "template":{ /* TemplateRecord */ },
    "resolvedLocale":"tr-TR",
    "fallback": false
  },

  "template.render.preview": {
    "event":"template.render.preview",
    "timestamp":"iso8601",
    "tplKey":"entry-limit-revise#1.0.0#tr-TR",
    "ok": true,
    "preview":"AVAXUSDT — LIMIT giriş: qty 92.59 (×0.75), SL 45 bps, TP 70 bps. Onaylar mısın?",
    "length":117,
    "violations":[],                        // compliance/lint ihlalleri
    "audit":{"eventId":"...","producedBy":"livia-12","producedAt":"iso8601"}
  },

  "template.catalog": {
    "event":"template.catalog",
    "timestamp":"iso8601",
    "items":[
      {"id":"entry-limit-revise","versions":["1.0.0","1.1.0"],"locales":["tr-TR","en-US"],"kind":"prompt","deprecated":false}
    ]
  },

  "template.alert": {
    "event":"template.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"rbac_forbidden|lint_failed|parity_missing|undeclared_variable|forbidden_token|max_chars_exceeded|idem_duplicate",
    "context":{"tplKey":"entry-limit-revise#1.0.0#tr-TR","var":"qtyFactor"}
  },

  "template.metrics": {
    "event":"template.metrics",
    "timestamp":"iso8601",
    "upserts":12,"deletes":2,"gets":41,"renders":33,
    "avgValidateMs":2.1,"avgRenderMs":1.7,
    "violationsRate":0.06
  }
}

5) Konfig (varsayılanlar)
{
  i18n: {
    defaultLocale: "tr-TR",
    supported: ["tr-TR","en-US"],
    requireParity: true           // aynı id+version için tüm diller bulunmalı
  },

  storage: {
    kind: "fs",                   // fs | memory | kv
    root: "data/templates",
    layout: "{kind}/{id}/{version}/{locale}.tmpl.json", // TemplateRecord JSON
    indexFile: "data/templates/index.json",
    snapshotEverySec: 300
  },

  rules: {
    engines: ["handlebars","mustache"],
    maxCharsByKind: { card: 280, prompt: 800, question: 500, report: 20000, explain: 800, rationale: 800 },
    forbidTokens: ["API_KEY", "password", "seed phrase"],
    mustHaveVarsInAllLocales: true,
    allowUnusedVars: false,
    allowUndeclaredVars: false
  },

  rbac: {
    read: ["trader","ops","policy"],
    write: ["ops","policy"]
  },

  compliance: {
    runPIIFilter: true,
    runForbiddenScan: true
  },

  idempotencyTtlSec: 900
}

6) Doğrulama & Lint Boru Hattı (Upsert/Render)

Auth & RBAC → yazma yetkisi yoksa reject (template.alert: rbac_forbidden).

Şema Kontrolü → Header/Body/Variables tip doğrulama (Zod).

Engine Kontrolü → engine ∈ rules.engines.

Değişken Paritesi → {{var}} taraması:

Gövdedeki tüm placeholder’lar variables[] içinde olmalı (undeclared → hata).

variables[]’da olup gövdede hiç kullanılmayan var → uyarı (allowUnusedVars? false ise hata).

Aynı id+version için tüm locale’larda aynı değişken kümesi (parity); eksikse parity_missing.

Kısıtlar → constraints.maxChars varsa ve örnek render ı aşarsa uyarı; rules.maxCharsByKind ile de sınırla.

Compliance → yasaklı anahtarlar, PII belirteçleri (iban/email/telefon) içeriyor mu? → hata/uyarı.

Checksum & Idempotency → aynı içerik checksum’ı varsa dupe; sadece audit yayınla.

Örnek Render (preview) → examples[0].input varsa çalıştır ve template.render.preview üret (validateOnly: true ise sadece denetim).

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE

template.upsert → UPSERT_VALIDATE

template.delete → DELETE

template.get → GET

template.render.request → RENDER

UPSERT_VALIDATE

Lint + parity + compliance → UPSERT_WRITE veya alert(error).

UPSERT_WRITE

Kayıt yaz, index güncelle, template.upsert.ok + template.catalog + metrics.

DELETE

mode=soft → deprecated:true işaretle; hard → dosyayı kaldır. template.delete.ok.

GET

version=latest → index’ten en yüksek semver; locale=auto → i18n tercihine göre fallback.

template.get.result.

RENDER

Şablonu al, input’u variables tiplerine göre doğrula, render et → uzunluk/forbidden yeniden kontrol → template.render.preview.

Her aşamada audit alanı eklenir.

8) Kenar Durumlar

Semver Çakışması: var olan version ile farklı gövde → alert(error,"version_conflict"); yeni sürüm üretmeyi öner (örn. 1.0.1).

Locale Otomatik Düşüş: locale=auto ve kullanıcının i18n.switch.notice.prefer yoksa defaultLocale.

Büyük Şablon (report) → dosya boyutu > 1 MB ise compress (gz) + indeks bayrağı.

AB Test Etiketleri (LIVIA-25): tags içinde ab:A|B|C varsa registry “assign-only” metadata ekler, render değişmez.

Geriye Dönük Uyumsuzluk: variables[].type değiştiyse major versiyon zorunlu.

Silinmiş Locale: parity modda bir locale silinirse kalan locale’lar deprecated bayrağına alınır (katalogda görünür ama “eksik”).

9) Telemetri
{
  "template.metrics": {
    "event":"template.metrics",
    "timestamp":"iso8601",
    "upserts": 12,
    "deletes": 2,
    "gets": 41,
    "renders": 33,
    "avgValidateMs": 2.1,
    "avgRenderMs": 1.7,
    "violationsRate": 0.06,
    "byKind": {"prompt":18,"question":9,"card":4,"report":2}
  }
}

10) Dosya Yapısı (öneri)
services/livia/promptTemplateRegistry.ts       // FSM + API
services/livia/lib/tplValidate.ts              // şema + parity + compliance
services/livia/lib/tplRender.ts                // handlebars/mustache render
services/livia/lib/semver.ts                   // semver karşılaştırma
services/livia/lib/indexer.ts                  // catalog index oku/yaz
services/livia/state/tplStore.ts               // idem index + snapshots
services/livia/__tests__/promptTemplateRegistry.test.ts
cfg/livia.templates.yaml                       // rules/rbac/i18n/storage

11) Test İskeleti (Jest/Vitest)

Upsert Happy Path: geçerli TR şablon + örnek render → upsert.ok + render.preview.ok.

Parity Missing: TR var, EN yok → alert(warn,"parity_missing"), yine de kayıt (konfig’e göre).

Undeclared Var: gövdede {{foo}} ama listede yok → lint_failed.

Unused Var: listede var gövdede yok → lint_failed (allowUnused=false).

Max Chars: card gövdesi 300c → max_chars_exceeded uyarısı.

Compliance: yasak kelime içeriyorsa → forbidden_token.

Render Type Errors: qtyFactor:"str" → tip uyuşmazlığı; render.preview.ok=false.

Semver Latest: get(version=latest) doğru sürümü getirir.

Delete Soft/Hard: soft → deprecated, hard → diskten kalkar; katalog güncellenir.

Idempotency: aynı içerikle tekrar upsert → idem_duplicate alert, kayıt değişmez.

12) Örnek Akış (kısa)

template.upsert(entry-limit-revise v1.0.0 tr-TR) → lint/compliance OK → yaz → upsert.ok.

template.upsert(entry-limit-revise v1.0.0 en-US) → parity tamamlandı.

template.render.request(id, latest, auto, input…) → render.preview döner; length/ihlal yok.

template.get(latest, auto) → kullanıcı dili EN ise EN gelir; yoksa TR fallback.

Sonra template.delete(mode=soft) → katalogda deprecated görünür.

13) SLO

P95 validate < 5 ms, P95 render < 5 ms.

Parity açığı ≤ %2 (günlük).

Lint hatasız oran ≥ %94 (ürün disiplin hedefi).
_________________________________________________________________________________________
LIVIA-13 · i18nSwitch.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Operatör etkileşimlerinde TR⇄EN dil tespiti, çeviri, sayı/tarih/birim biçimleme ve glossary (kritik terim koruması) sağlamak.
Tüm modüller için ortak bir i18n ara katmanı gibi çalışır: operatorUIBridge, knowledgeRouter, policyExplainer, decisionRationaleWriter, promptTemplateRegistry, translationQA (LIVIA-26) ile entegre olur.
Hedef: doğru dilde kısa, terim-doğru, sayısal olarak biçimlenmiş metinler üretmek; PII sızıntısını maskeleyip audit/metrics yayınlamak.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest.

Event-driven JSON I/O; tüm In/Out Zod .strict() ile doğrulanır.

Zaman/TZ: ISO-8601, Europe/Istanbul.

Güvenlik: HMAC/JWT doğrulama; RBAC: okuma herkese, yazma ops|policy.

Gizlilik: PII maskeleme (LIVIA-21 ile) – yalnız hedef dilde maske yerleşimi.

İdempotency: i18nKey = hash(origText + targetLang + ctx); TTL içinde tekrar yayın yok.

Dil: Varsayılan TR; kullanıcı tercihi veya içerik tespitiyle EN’e geç.

2) Girdiler (In) — Zod’a çevrilecek şema örnekleri
{
  "operator.response.in": {
    "event":"operator.response.in",
    "timestamp":"iso8601",
    "promptId":"dlg-avax-42",
    "payload":{"note":"limit +2bps uygundur"},
    "auth":{"userId":"op-007","roles":["trader"],"sig":"hex"}
  },

  "operator.answer.in": {
    "event":"operator.answer.in",
    "timestamp":"iso8601",
    "qId":"q-avax-42-1",
    "answer":"value",
    "value":18,
    "unit":"bps|null",
    "auth":{"userId":"op-007","sig":"hex"}
  },

  "template.render.request": {
    "event":"template.render.request",
    "timestamp":"iso8601",
    "id":"entry-limit-revise",
    "version":"latest",
    "locale":"auto",
    "input":{"symbol":"AVAXUSDT","qty":92.59,"qtyFactor":0.75,"slBps":45,"tpBps":70}
  },

  "knowledge.route.select": {
    "event":"knowledge.route.select",
    "timestamp":"iso8601",
    "summary":"Aggressive variant is disabled under block_aggressive guard.",
    "top":[{"docId":"policy/variants@v42","source":"policy","passages":[{"excerpt":"..."}]}]
  },

  "policy.explain": {
    "event":"policy.explain",
    "timestamp":"iso8601",
    "title":"Why rejected? — Slip / Spread",
    "bullets":["Slip p95 ≈ 18 bps, limit 15 bps","Use LIMIT/TWAP"],
    "context":{"symbol":"AVAXUSDT"}
  },

  "i18n.switch.notice": {
    "event":"i18n.switch.notice",
    "timestamp":"iso8601",
    "prefer":"tr-TR|en-US",
    "userId":"op-007"
  },

  "i18n.qa.report": {
    "event":"i18n.qa.report",
    "timestamp":"iso8601",
    "ok":true,
    "issues":[],
    "sourceKey":"i18n#dlg-avax-42#en-US"
  }
}


Not: Kaynak olaylar çok çeşitlidir; i18n bu metinleri tespit → normalize → gerekirse çevir → biçimle akışıyla ele alır.

3) Çıktılar (Out)
{
  "i18n.choice": {
    "event":"i18n.choice",
    "timestamp":"iso8601",
    "userId":"op-007",
    "detected":"tr-TR|en-US",
    "reason":"user_preference|content_prob>thresh|session_default",
    "confidence":0.94
  },

  "i18n.text": {
    "event":"i18n.text",
    "timestamp":"iso8601",
    "sourceKey":"i18n#dlg-avax-42#en-US",
    "orig":{"lang":"tr-TR","text":"Slip p95 ≈ 18 bps, limit 15 bps. LIMIT önerilir."},
    "tr":{"text":"Slip p95 ≈ 18 bps, limit 15 bps. LIMIT önerilir."},
    "en":{"text":"Slip p95 ≈ 18 bps, limit is 15 bps. LIMIT is recommended."},
    "glossaryKept":["halt_entry","failover","slippage","spread","bps"],
    "format":{"numbers":"localized","dates":"Europe/Istanbul"},
    "audit":{"eventId":"...","producedBy":"livia-13","producedAt":"iso8601"}
  },

  "i18n.qa.request": {
    "event":"i18n.qa.request",
    "timestamp":"iso8601",
    "sourceKey":"i18n#dlg-avax-42#en-US",
    "glossary":["halt_entry","failover","slippage","spread","bps"],
    "tolerance":"low"
  },

  "i18n.alert": {
    "event":"i18n.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"lang_undetected|glossary_violation|pii_redact_failed|max_len_exceeded|idem_duplicate",
    "context":{"text":"...", "target":"en-US"}
  },

  "i18n.metrics": {
    "event":"i18n.metrics",
    "timestamp":"iso8601",
    "detections":42,
    "translations":31,
    "cacheHitRate":0.38,
    "avgDetectMs":1.2,
    "avgTranslateMs":3.9,
    "glossaryViolRate":0.02
  }
}

4) Konfig (varsayılanlar)
{
  i18n: {
    defaultLocale: "tr-TR",
    supported: ["tr-TR","en-US"],
    detect: {
      minChars: 6,
      codeSwitchBoost: true,         // cümle içi EN terim → EN olasılığını artır
      threshold: 0.75                // dil olasılığı eşiği
    },
    formatting: {
      tr: { number: "tr-TR", currency: "TRY", date: "dd.MM.yyyy HH:mm" },
      en: { number: "en-US", currency: "USD", date: "yyyy-MM-dd HH:mm" }
    },
    glossary: {
      protected: ["halt_entry","failover","slippage","spread","bps","TWAP","LIMIT","MARKET","post_only"],
      map: { "kaldıraç":"leverage", "kayan_maliyet":"slippage" } // EN hedefte
    },
    qa: { enabled: true, tolerance: "low" }   // LIVIA-26 ile
  },

  pii: { enabled: true, maskWith: "***" },

  translator: {
    provider: "pluggable",            // "pluggable" arayüzü: local|cloud
    maxChars: 2000,
    preserveMarkdown: true,           // `**bold**`, `code`, links
    timeoutMs: 1500,
    retry: { max: 2, backoffMs: [200, 500] }
  },

  cache: { ttlSec: 900, maxEntries: 2000 },

  rbac: { consume:["trader","ops","policy"], configure:["ops","policy"] },

  idempotencyTtlSec: 900
}

5) İşlevsel Kapsam (Pipeline)

Algıla (Detect)

Giriş metnini detect.minChars altındaysa kullanıcı tercihi (i18n.switch.notice) esas alınır.

Aksi halde dil tespiti (TR/EN); codeSwitchBoost aktifken halt_entry/failover/bps gibi terimler EN olasılığını artırır.

Sonuç i18n.choice olarak yayınlanır (confidence ile).

Normalize & PII

Whitespace/emoji korunur, çift boşluk tekilleştirilir.

PII varsa (email/telefon/IBAN) hedef dil öncesi maskele (LIVIA-21); hata → i18n.alert(pii_redact_failed).

Glossary Hazırlığı

glossary.protected terimlerini dokunulmaz işaretle: çeviride olduğu gibi kalmalıdır.

Terimlerin büyük/küçük ve kod stil varyantlarını da kapsa (e.g., HALT_ENTRY, Failover).

Çeviri (opsiyonel)

Hedef dil, i18n.choice.detected veya consumer isteği (örn. template.render.request.locale=auto).

translator.provider arayüzü:

translate({text, sourceLang, targetLang, glossary, preserveMarkdown}): { text, kept: string[], violations: string[] }


Çeviri sonrası markdown, kod blokları, linkler korunur.

Biçimleme (Formatting)

Metin içinde sayı, para, tarih ve bps/spread gibi ölçüleri hedef dile göre biçimle:

TR: 1.234,56, EN: 1,234.56

Tarihler: Europe/Istanbul saat dilimi.

unit alanı varsa (bps, TRY, USD) yerel gösterime çevir.

QA (opsiyonel)

qa.enabled ise LIVIA-26 translationQA.ts’ye i18n.qa.request yayınla.

Gelen i18n.qa.report.ok=false ise:

Küçük ihlaller: uyarı (i18n.alert(glossary_violation)) ve metni düzelt (varsa otomatik düzeltme).

Kritik ihlaller: EN/TR ikili metin döndür (i18n.text.orig + target) ve uyarı.

Cache & Idempotency

i18nKey ile sonuçları cache et; TTL içinde tekrar istek olursa cache’den yeni audit ile çıkar.

6) FSM — advance(state, event, cfg, now) → emissions[]

IDLE
Herhangi bir metin içeren olay geldiğinde → DETECT.

DETECT
Dil tespiti; kullanıcı tercihi override edebilir. → PROCESS.

PROCESS
PII mask → glossary işaret → (gerekirse) çeviri → biçimleme.
qa.enabled ise QA_WAIT; değilse EMIT.

QA_WAIT
i18n.qa.report gelirse değerlendir; gerekirse düzelt. → EMIT (veya alert).

EMIT
i18n.text + i18n.choice + i18n.metrics yayınla. → IDLE.

7) Kenar Durumlar

Dil tespit edilemedi (confidence<threshold) → i18n.alert(lang_undetected) ve varsayılan TR.

Glossary çiğnendi (ör. “failover” → “yedek devreye alma”) → glossary_violation + düzelt.

Uzun Metin (>translator.maxChars) → parçalı çeviri (chunk) ve birleştir; sırayı koru.

Markdown bozulması → preserveMarkdown:true tekrar dene; olmadıysa kod bloklarını orijinal bırak.

Emoji/Simge → aynen koru; harf-sayısal dışı işaretler tespit skorunu saptırıyorsa normalize et.

Sayısal Biçim Çakışması (örn. 1,234 TR’de 1.234) → hedef dil lokasyonuna göre tutarlı çıktıyı zorla.

Çift Dil İstek (UI TR, kayıt EN) → i18n.text içinde her iki dil alanını da doldur.

8) Telemetri
{
  "i18n.metrics": {
    "event":"i18n.metrics",
    "timestamp":"iso8601",
    "detections": 42,
    "translations": 31,
    "cacheHitRate": 0.38,
    "avgDetectMs": 1.2,
    "avgTranslateMs": 3.9,
    "glossaryViolRate": 0.02,
    "byTarget": {"tr-TR":17, "en-US":14}
  }
}

9) Dosya Yapısı (öneri)
services/livia/i18nSwitch.ts                   // FSM + orchestrasyon
services/livia/lib/langDetect.ts               // TR/EN olasılık tahmini
services/livia/lib/translator.ts               // provider arayüzü + chunking
services/livia/lib/formatter.ts                // sayı/tarih/birim biçimleme
services/livia/lib/glossary.ts                 // terim koruma/kontrol
services/livia/state/i18nStore.ts              // cache + idem index + prefs
services/livia/__tests__/i18nSwitch.test.ts
cfg/livia.i18n.yaml                            // i18n/translator/qa/glossary ayarları

10) Test İskeleti (Jest/Vitest)

Tespit TR: “limit +2bps uygundur” → detected=tr-TR, confidence>thresh.

Tespit EN: “Please switch to LIMIT with qty −25%” → detected=en-US.

Glossary Koruma: “failover” ve “halt_entry” aynen korunur; çeviride değişmez.

Biçimleme: qty=1234.56 → TR 1.234,56, EN 1,234.56.

Markdown Koruma: **AVAX** limit → kalın stil korunur.

Chunk Çeviri: 3k karakter metin iki parçayla çevrilir, birleşmiş halde döner.

QA Entegre: i18n.qa.report(ok=false) → uyarı + otomatik düzeltme veya çift-dil dönüş.

PII Mask: email/telefon içeren metinler *** ile maskelenir.

Cache/Idem: aynı metin/dil/ctx tekrarında cache hit ve tek yayın.

Code-Switch: TR + (English term) tespitinde doğru dil kararı (terim boost).

11) Örnek Akış (kısa)

policy.explain EN içerikle geldi. i18nSwitch tespit → en-US, kullanıcı tercihi tr-TR.

Glossary: halt_entry, bps kilitlendi.

EN→TR çeviri + TR sayı/tarih biçimleme; i18n.qa.request LIVIA-26’ya gitti, ok:true döndü.

i18n.text (orig EN + TR hedef) ve i18n.choice yayınlandı; operatorUIBridge TR kart gösterdi.

i18n.metrics güncellendi.

12) SLO

P95 detect < 3 ms, P95 translate < 20 ms (chunk hariç, provider’a göre).

Glossary ihlal oranı < %3.

Markdown koruma başarısı ≥ %99.

Cache hit ≥ %30 tipik oturumda.
___________________________________________________________________________________________
LIVIA-14 · telemetryDailyDigest.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Son 24 saatin operasyon verisini toplayıp “Günlük Özet Bülten” (Markdown + opsiyonel HTML) üretmek: SLO durumu, guard/alert/incident, slip/spread maliyet resmi, PnL, onay akışı, karar/cevap hacmi, politika rollout, UI köprüsü ve anomali anlatıları. Bülteni dosyaya yaz, kısa card olarak UI’ya yolla, arşivle.
Mimari: Event-driven JSON, Zod .strict(), Europe/Istanbul, idempotent, audit, metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest.

Tüm In/Out şemaları Zod ile doğrulanır ( .strict() ).

Saat Dilimi: Europe/Istanbul.

Run zamanı: default her gün 18:00 (yerel). Kaçarsa backfill: 18:10’a kadar otomatik tetik.

İdempotency: digestKey = YYYY-MM-DD + cfg.hash(version+sections); aynı güne ikinci defa yazma (manuel force=true hariç).

Gizlilik: classification:"SENSITIVE_LOW"; PII maskesi (LIVIA-21) dosyaya maskeli yazılır.

Telemetri: digest.metrics; Uyarı: digest.alert.

2) Girdiler (In) — (Zod’a çevrilecek örnekler)
{
  "telemetry.slo.status": {
    "event":"telemetry.slo.status",
    "timestamp":"iso8601",
    "slo":"guard_success_rate|ui_ack_latency|plan_commit_success",
    "state":"ok|at_risk|breach",
    "window":"1h|24h",
    "burnPct": 12.3
  },

  "telemetry.rollup.batch": {
    "event":"telemetry.rollup.batch",
    "timestamp":"iso8601",
    "windowH":1,
    "series":[
      {"name":"order.slip.p95", "p50":9, "p95":18, "p99":27},
      {"name":"market.spread.bps", "p50":35, "p95":82}
    ]
  },

  "latency_slip.guard.directive": {
    "event":"latency_slip.guard.directive",
    "timestamp":"iso8601",
    "mode":"normal|slowdown|block_aggressive|halt_entry",
    "expiresAt":"iso8601",
    "reasonCodes":["slip_p95>15bps","lat_p95>800ms"]
  },

  "policy.metrics": {
    "event":"policy.metrics",
    "timestamp":"iso8601",
    "activeVersion":"v42",
    "stage":"active|canary",
    "percent":100,
    "updates":3,
    "rollbacks":1
  },

  "uiBridge.metrics": {
    "event":"uiBridge.metrics",
    "timestamp":"iso8601",
    "connections":12,"delivered":320,"acked":315,"retry":9,"dropped":2,"avgLatencyMs":240
  },

  "decision.rationale": {
    "event":"decision.rationale",
    "timestamp":"iso8601",
    "accepted":true|false,
    "promptId":"dlg-..",
    "summary":"...",
    "details":{"finalPlan":{"symbol":"AVAXUSDT"}}
  },

  "approval.pending":   { "event":"approval.pending",   "timestamp":"iso8601", "approvalKey":"...", "action":"..." },
  "action.approved":    { "event":"action.approved",    "timestamp":"iso8601", "action":"...", "by":[{"userId":"..."}] },
  "action.rejected":    { "event":"action.rejected",    "timestamp":"iso8601", "action":"...", "reasons":["..."] },

  "incident.started":   { "event":"incident.started",   "timestamp":"iso8601", "id":"inc-...", "severity":"low|med|high", "title":"..." },
  "incident.closed":    { "event":"incident.closed",    "timestamp":"iso8601", "id":"inc-...", "durationMin":37, "resolution":"..." },

  "anomaly.narrative":  { "event":"anomaly.narrative",  "timestamp":"iso8601", "title":"...", "bullets":["..."], "evidence":[] },

  "pnl.daily": {
    "event":"pnl.daily",
    "timestamp":"iso8601",
    "date":"YYYY-MM-DD",
    "grossUSD": 2189.7,
    "feesUSD":  -190.1,
    "netUSD":   1999.6,
    "bySymbol":[{"symbol":"AVAXUSDT","netUSD":612.4},{"symbol":"BTCUSDT","netUSD":-120.3}]
  },

  "notes.session.md": {
    "event":"notes.session.md",
    "timestamp":"iso8601",
    "path":"data/notes/2025-09-13/sess-avax-42.md",
    "summary":"..."
  }
}


Not: Girdilerin hiçbiri tek başına zorunlu değil; en azından telemetry ve/veya pnl.daily beklenir. Eksikler raporda boş/0 olarak gösterilir.

3) Çıktılar (Out)
{
  "digest.daily.ready": {
    "event":"digest.daily.ready",
    "timestamp":"iso8601",
    "digestKey":"2025-09-13",
    "format":"md|html",
    "path":"data/digest/2025-09-13/Daily.md",
    "sections":[
      "Öne Çıkanlar","SLO & Guard","Slip/Spread","Karar & Onay",
      "Olaylar & Anomaliler","Politika Dağıtımı","UI Köprüsü","PnL Özeti","Notlar"
    ],
    "highlights":[
      "SLO: guard_success_rate=ok; burn 8.1%",
      "Guard: slowdown 2 kez, block_aggressive 1 kez",
      "PnL(net): $1,999.6 (Top: AVAXUSDT $612.4)"
    ],
    "audit":{"eventId":"...","producedBy":"livia-14","producedAt":"iso8601"}
  },

  "digest.card": {
    "event":"digest.card",
    "timestamp":"iso8601",
    "title":"Günlük Özet Hazır (2025-09-13)",
    "body":"SLO: OK | PnL(net): $1,999.6 | Incidents: 1 (37 dk) | Guard: slowdown×2",
    "severity":"info",
    "ttlSec":600,
    "links":[{"label":"Aç","href":"app://digest/2025-09-13"}]
  },

  "digest.archive.index": {
    "event":"digest.archive.index",
    "timestamp":"iso8601",
    "paths":["data/digest/2025-09-12/Daily.md","data/digest/2025-09-13/Daily.md"],
    "count": 2
  },

  "digest.alert": {
    "event":"digest.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"missing_core_signals|late_run|write_failed|idem_duplicate",
    "context":{"date":"2025-09-13","missing":["pnl.daily","policy.metrics"]}
  },

  "digest.metrics": {
    "event":"digest.metrics",
    "timestamp":"iso8601",
    "runs": 1,
    "avgComposeMs": 12,
    "lateRun": false,
    "sectionsMs":{"highlights":2,"slo":1,"slip":1,"decisions":2,"incidents":2,"policy":1,"ui":1,"pnl":1,"notes":1}
  }
}

4) Konfig (varsayılanlar)
{
  schedule: {
    runAt: "18:00",               // Europe/Istanbul
    lookbackHours: 24,
    graceMin: 10,                 // kaçarsa 18:10'a kadar backfill
    allowManual: true
  },

  sections: {
    highlights: true,
    slo: true,
    slipSpread: true,
    decisionsApprovals: true,
    incidentsAnomalies: true,
    policyRollout: true,
    uiBridge: true,
    pnl: true,
    notes: true
  },

  thresholds: {
    slipP95WarnBps: 15,
    spreadP95WarnBps: 80,
    sloBurnWarnPct: 20,
    uiAckP95WarnMs: 1500
  },

  format: {
    outDir: "data/digest",
    md: { headingPrefix: "#", maxLine: 120 },
    html: { enabled: true, templatePath: "templates/digest.html" },
    currency: "USD",
    topN: { symbols: 5, incidents: 5, decisions: 5 }
  },

  charts: {                        // ASCII mini-sparkline; HTML’de inline SVG
    ascii: true,
    svg: true,
    width: 20
  },

  retention: {
    days: 90,                      // eski digest temizliği
    keepHtml: true
  },

  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  idempotencyTtlSec: 86400
}

5) Bülten Kompozisyonu (Pipeline)

Zaman Penceresi

lookbackHours=24 (18:00→18:00). DST günlerinde yerel saate göre dilimle.

Topla & Özetle (in-memory store’dan)

SLO: son 24h telemetry.slo.status → son durum (ok/at_risk/breach) + burnPct p95.

Guard: latency_slip.guard.directive → mod başına sayım (slowdown/block/halt).

Slip/Spread: telemetry.rollup.batch → order.slip.p95, market.spread.bps 24h p50/p95; eşik üstüyse ⚠️ etiketi.

Karar & Onay: decision.rationale (accepted/rejected sayıları, en çok geçen sembol), approval.* (pending/approved/rejected).

Olay & Anomali: incident.* (adet, toplam süre, en yüksek seviye), anomaly.narrative (ilk 3 başlık/bullet).

Politika: policy.metrics (aktif sürüm, canary/rollback sayıları).

UI Köprüsü: uiBridge.metrics (ack p95, drop oranı, retry sayısı).

PnL: pnl.daily.netUSD + en iyi/kötü 3 sembol; eğer yoksa “—”.

Notlar: notes.session.md ve notes.daily.md özetleri (varsa adet).

Vurucu “Öne Çıkanlar”

3–5 satır: (a) SLO state, (b) Guard sayımları, (c) PnL net, (d) politika olayı (rollback/canary), (e) kritik incident.

Mini Grafikler

Slip p95 24h → ASCII sparkline (md) + SVG (html).

UI ack latency → aynı.

Şablonlandırma

Markdown iskeletini üret; HTML açıksa aynı içeriği template’e göm.

İdempotency & Yazım

digestKey kontrol → MD/HTML dosyaları outDir/YYYY-MM-DD/.

Atomic write (tmp→rename), arşiv index güncelle.

Yayın

digest.daily.ready + kısa digest.card (UI).

digest.metrics güncelle.

6) Markdown Taslağı (üretilmesi gereken yapı)
# Günlük Özet — 2025-09-13 (Europe/Istanbul)

## Öne Çıkanlar
- SLO: guard_success_rate = **OK**, burn p95 = **8.1%**
- Guard: slowdown ×2, block_aggressive ×1
- PnL (net): **$1,999.6** — En iyi: AVAXUSDT $612.4 | En kötü: BTCUSDT −$120.3

## SLO & Guard
- plan_commit_success: OK | burn p95: 4.2%
- ui_ack_latency: OK | p95: 1.24s
- Guard modları (24h): normal 21h, slowdown 2h, block_aggressive 1h

## Slip / Spread
- Slip p95: **18 bps** (eşik 15 bps) ⚠️
- Spread p95: **82 bps** (eşik 80 bps) ⚠️
`▁▃▅█▆▅▃▂`  (slip p95 24h)

## Karar & Onay
- Kararlar: 32 accepted / 7 rejected
- Onaylar: 3 pending → 3 approved / 0 rejected

## Olaylar & Anomaliler
- Incidents: 1 (toplam 37 dk) — çözüm: policy rollback v42→v41
- Anomaliler (ilk 3): slip spike; feed stale; ui drop blip

## Politika Dağıtımı
- Aktif: v42 (active %100) | son 24h: 1 rollback

## UI Köprüsü
- Ack p95: 1.2s | retry: 9 | drop: 2 (0.6%)

## PnL Özeti
- Net: **$1,999.6** (fees: −$190.1)
- En iyi 3: AVAXUSDT $612.4, ETHUSDT $410.2, SOLUSDT $210.0
- En kötü 3: BTCUSDT −$120.3, … 

## Notlar
- 3 seans dosyası, Günlük özet yazıldı.

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE
cron(18:00) veya digest.run.request{date?,force?} → COLLECT.

COLLECT
Window içindeki olaylar store’dan okunur; eksik çekirdek sinyal varsa digest.alert(warn,"missing_core_signals"). → COMPOSE.

COMPOSE
Bölüm özetleri + grafikleri kur; MD/HTML oluştur. → WRITE.

WRITE
Atomic yaz; arşiv indexini güncelle. → EMIT.

EMIT
digest.daily.ready + digest.card + digest.metrics. → IDLE.

8) Kenar Durumlar

Late run (18:10 sonrası): lateRun=true işaretle, başlığa “(gecikmeli)” notu ekle.

PnL yok: PnL bölümü “veri yok — muhasebe bekleniyor” metniyle çıkar.

Aşırı veri: listeler topN ile kesilir, “+N daha” notu eklenir.

SLO çakışan pencereler: son window="24h" > 1h. Yoksa 1h agregasyonlarının medyanını kullan.

DST geçişi: 23/25 saatlik günlerde yerel takvim günü esas alınır; window saat kadar değil gün başı-sonu.

İdempotent çakışma: aynı güne ikinci yazım → idem_duplicate alert; force=true ise _r2.md olarak sürümle.

PII: tüm serbest metinler maskelenir.

9) Telemetri
{
  "digest.metrics": {
    "event":"digest.metrics",
    "timestamp":"iso8601",
    "runs": 1,
    "avgComposeMs": 12,
    "lateRun": false,
    "sectionSizes":{"md": 2800, "html": 5600},
    "alerts":0
  }
}

10) Dosya Yapısı (öneri)
services/livia/telemetryDailyDigest.ts         // FSM + scheduler
services/livia/lib/digestCollect.ts            // window veri toplayıcı
services/livia/lib/digestCompose.ts            // bölüm derleyici + şablon
services/livia/lib/asciiSpark.ts               // mini sparkline üretici
services/livia/lib/htmlRenderer.ts             // md→html template
services/livia/lib/timeWindow.ts               // DST güvenli pencere
services/livia/state/digestStore.ts            // idem, cache, arşiv index
services/livia/__tests__/telemetryDailyDigest.test.ts
cfg/livia.digest.yaml                          // schedule/sections/thresholds/format
templates/digest.html                          // HTML iskeleti

11) Test İskeleti (Jest/Vitest)

Normal Gün: tüm sinyaller mevcut → MD/HTML üretilir, highlights dolu.

Late Run: saat 18:12 → lateRun=true, başlıkta not.

PnL Yok: PnL bölümü boş mesajla görünür.

Eşik Aşımı: slip p95>15 → ⚠️ işareti eklenir.

TopN Kesimi: >5 incident → listede 5 + “+N daha”.

Idempotency: aynı gün ikinci çalıştırma → idem_duplicate.

DST Günü: 23/25 saat simülasyonu → doğru gün etiketleri.

Atomic Write: aynı anda 2 yazım denemesinde dosya bozulmaz.

Backfill: 18:08 tetik → çalışır; 18:20 tetik → lateRun alert.

12) Örnek Akış (kısa)

18:00 cron → COLLECT son 24h; slip/spread/SLO/guard/approval/incident/policy/ui/pnl toplandı.

COMPOSE → highlights + bölümler + sparkline.

WRITE → data/digest/2025-09-13/Daily.md ve Daily.html.

EMIT → digest.daily.ready + digest.card.

Arşiv index güncellendi; retention 90 gün üstünü sildi.

13) SLO

P95 compose < 50 ms (önbellek ısınmışken).

Geç kalma oranı < %2.

Boş bülten (tüm veriler yok) üretme oranı ≈ 0; en az highlights+SLO bölümü dolu olmalı.
__________________________________________________________________________________________
LIVIA-14 · telemetryDailyDigest.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Son 24 saatin operasyon sinyallerinden günlük özet bülten üretmek (SLO, guard olayları, slip/spread, PnL, onaylar, incident’lar, önemli notlar/eylemler). Çıktı Markdown ve opsiyonel HTML dosyasıdır; kısa UI kartı ve chat mesajı da üret. Tüm I/O: event-driven JSON, Zod .strict(), Europe/Istanbul, idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest.

Zaman: ISO-8601, TZ=Europe/Istanbul. Rapor penceresi: [dün 18:00 → bugün 18:00] varsayılan.

Gizlilik: PII mask (LIVIA-21). Bültene PII dahil etme.

Güvenlik: RBAC (ops|trader|policy okuyabilir), imzalı yayın.

İdempotency: digestKey = YYYY-MM-DD#window#format; aynı pencerede ikinci üretime izin yok (TTL 48h).

Telemetri: digest.metrics, uyarılar digest.alert.

2) Girdiler (In) — örnek şemalar (Zod’a çevir)
{
  "telemetry.slo.status": {
    "event":"telemetry.slo.status",
    "timestamp":"iso8601",
    "slo":"guard_success_rate|ui_ack_p95|bounds_pass_rate|abandon_rate",
    "state":"ok|at_risk|breach",
    "window":"1h|24h",
    "value":0.984,
    "target":0.98,
    "burnPct":7.2
  },

  "telemetry.rollup.batch": {
    "event":"telemetry.rollup.batch",
    "timestamp":"iso8601",
    "window":"5m",
    "series":[
      {"name":"order.slip.p95", "avg":14.8, "max":27.2},
      {"name":"market.spread.p95", "avg":62, "max":118}
    ]
  },

  "telemetry.anomaly.signal": {
    "event":"telemetry.anomaly.signal",
    "timestamp":"iso8601",
    "series":"order.slip.p95",
    "kind":"spike|drift|flatline|gap",
    "severity":"low|medium|high",
    "at":"iso8601"
  },

  "sentry.guard.directive": {
    "event":"sentry.guard.directive",
    "timestamp":"iso8601",
    "mode":"normal|degraded|streams_panic|halt_entry",
    "expiresAt":"iso8601",
    "reasonCodes":["feed_stale>5s"]
  },

  "latency_slip.guard.directive": {
    "event":"latency_slip.guard.directive",
    "timestamp":"iso8601",
    "mode":"normal|slowdown|block_aggressive|halt_entry",
    "expiresAt":"iso8601",
    "reasonCodes":["slip_p95>15bps"]
  },

  "pnl.daily": {
    "event":"pnl.daily",
    "timestamp":"iso8601",
    "date":"YYYY-MM-DD",
    "totalUSD":1234.56,
    "bySymbol":[{"symbol":"AVAXUSDT","pnlUSD":420.1},{"symbol":"BTCUSDT","pnlUSD":-55.2}]
  },

  "approval.metrics": {
    "event":"approval.metrics",
    "timestamp":"iso8601",
    "pending":2,"approved":7,"rejected":1,
    "slaBreach":0
  },

  "incident.started": {
    "event":"incident.started",
    "timestamp":"iso8601",
    "id":"inc-2025-09-13-1",
    "severity":"high",
    "title":"Slip spike on SG02",
    "tags":["slip","latency"]
  },

  "incident.closed": {
    "event":"incident.closed",
    "timestamp":"iso8601",
    "id":"inc-2025-09-13-1",
    "resolution":"policy rollback v42→v41",
    "durationMin":37
  },

  "operator.notes.append": {
    "event":"operator.notes.append",
    "timestamp":"iso8601",
    "sessionId":"sess-avax-42",
    "lines":[{"kind":"action","text":"limits.maxSlipBps gözden geçir (24s).","due":"iso8601"}]
  },

  "notes.daily.md": {
    "event":"notes.daily.md",
    "timestamp":"iso8601",
    "path":"data/notes/2025-09-13/Daily.md",
    "summary":"..."
  },

  "policy.snapshot": {
    "event":"policy.snapshot",
    "timestamp":"iso8601",
    "versionId":"v42",
    "stage":"active|canary",
    "percent":100
  }
}

3) Çıktılar (Out)
{
  "digest.daily.ready": {
    "event":"digest.daily.ready",
    "timestamp":"iso8601",
    "digestKey":"2025-09-13#18:00-md",
    "format":"md|html",
    "path":"data/digest/2025-09-13/Daily.md",
    "summary":"SLO: 3/4 OK, 1 at_risk. Guards: slowdown(2) → normal. PnL: +$1,234. Incident: 1 (37 dk). Açık onay: 2.",
    "links":[{"label":"HTML","href":"data/digest/2025-09-13/Daily.html"}],
    "audit":{"eventId":"...","producedBy":"livia-14","producedAt":"iso8601"}
  },

  "digest.card": {
    "event":"digest.card",
    "timestamp":"iso8601",
    "title":"Günlük Özet Hazır",
    "body":"SLO 3/4 OK, PnL +$1,234, incident 1 (37 dk). 2 bekleyen onay.",
    "severity":"info",
    "ttlSec":600
  },

  "digest.chat": {
    "event":"digest.chat",
    "timestamp":"iso8601",
    "channel":"ops|trader|policy",
    "text":"Özet: SLO 3/4 OK, guard slowdown→normal, PnL +$1,234, 1 incident (37 dk), 2 bekleyen onay.",
    "threadKey":"daily#2025-09-13"
  },

  "digest.alert": {
    "event":"digest.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"window_insufficient_data|write_failed|idem_duplicate",
    "context":{"window":"2025-09-12T18:00 → 2025-09-13T18:00"}
  },

  "digest.metrics": {
    "event":"digest.metrics",
    "timestamp":"iso8601",
    "windowsBuilt": 1,
    "avgComposeMs": 7.4,
    "markdownBytes": 3580,
    "htmlBytes": 5170,
    "incidents": 1,
    "guards": {"slowdown":2,"block_aggressive":0,"halt_entry":0},
    "approvals":{"pending":2,"approved":7,"rejected":1}
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  schedule: {
    runAt: "18:00",            // her gün
    windowHours: 24,           // geriye dönük
    alignToLocalDay: true
  },

  sections: {
    include: ["slo","guards","anomalies","markets","pnl","approvals","incidents","actions","notes"],
    maxTopSymbols: 8,
    maxAnomalies: 5,
    maxActions: 10
  },

  scoring: {
    anomalyWeights: { spike:1.0, drift:0.6, flatline:0.4, gap:0.8 },
    guardSeverity: { halt_entry:1.0, block_aggressive:0.7, slowdown:0.4, degraded:0.6 }
  },

  output: {
    outDir: "data/digest/{YYYY-MM-DD}",
    mdName: "Daily.md",
    htmlName: "Daily.html",
    html: { enable:true, cssPreset:"minimal" }
  },

  distribution: {
    uiCard: true,
    chat: { enable:true, channels:["ops","trader","policy"] }
  },

  privacy: { piiMask:true },

  idempotencyTtlSec: 172800
}

5) Kompozisyon — Markdown/HTML yapı

Başlık & Özet

# Günlük Özet — {YYYY-MM-DD} (TZ: Europe/Istanbul)
Aktif Policy: {versionId} ({stage}/{percent}%)
Özet: SLO {ok}/{total} OK, Guards: {summary}, PnL: {sign}{usd}, Incident: {n} ({topSeverity}), Açık onay: {pending}


Bölümler

SLO

Tablo: slo | durum | değer | hedef | burn%.

“at_risk/breach” olanları kalın ve ⚠️ işaretle.

Guard Olayları

Zaman çizelgesi: 09:12 slowdown, 10:25 normal.

“halt_entry” varsa en üste uyarı kutusu.

Anomaliler

En yüksek skorlu ilk {maxAnomalies}: order.slip.p95 spike @ 14:32 (max 27.2 bps).

Piyasa/Operasyon Metrikleri (opsiyonel “markets”)

spread.p95, slip.p95 günlük ort./maks., varsa ilk 3 sembol.

PnL

Toplam ve ilk {maxTopSymbols} katkı/zarar listesi (çubuk görünüm ascii opsiyonel).

Onaylar

Bekleyen/Onaylanan/Reddedilen sayı; bekleyenler için kısa liste approvalKey, yaş (dakika).

Incident’lar

Tablo: id | severity | süre | çözüm. Büyük olaylarda postmortem linki varsa ekle.

Aksiyonlar (Notes/Action)

İlk {maxActions} açık aksiyon: sahip | başlık | due. Süresi geçmişler kırmızı nokta.

Notlar (Önemli)

3–5 satır “seans notu” özeti (PII maskli).

6) Pipeline (algoritma)

Pencere Tanımı

schedule.runAt referans, window = [prev 18:00, this 18:00]. Manuel tetikte özel aralık destekle (opsiyonel).

Topla & Normalize

Son 24h içindeki slo.status, rollup.batch, anomaly.signal, guard.directive, pnl.daily, approval.metrics, incident.*, operator.notes.append, notes.daily.md, policy.snapshot.

SLO değerlerini en son “24h” penceresinden seç; yoksa 1h rolling ortalama ile not düş: “24h yok, 1h temsilidir”.

Skor & Sıralama

Anomali skoru = weight(kind) × severityFactor(high=1, med=0.6, low=0.3) × norm(max/avg).

Guard özet cümlesi: en yüksek etkili mod/dakika.

PnL varsa toplam ve top N sembol.

Bölüm İnşası

Markdown satırlarını oluştur; PII mask uygula.

HTML aktifse basit CSS ile aynı içeriği dönüştür.

İdempotency

digestKey kontrol et; varsa idem_duplicate uyarısı ve sadece digest.daily.ready’i yeniden yayınla (yol/özet).

Yazım

outDir oluştur → Daily.md ve opsiyonel Daily.html atomic write.

Dağıtım

digest.card (UI) + digest.chat (ops|trader|policy) yayınla.

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE
Zamanlayıcı tetikledi (cron) veya manual.digest.request{from,to} geldi → COLLECT.

COLLECT
Verileri pencereye göre topla/normalize → COMPOSE.

COMPOSE
Bölümleri inşa et, md/html üret → WRITE.

WRITE
Dosyaları yaz; başarı → EMIT, hata → digest.alert(write_failed).

EMIT
digest.daily.ready + digest.card + digest.chat + digest.metrics → IDLE.

8) Kenar Durumlar

Eksik veri: hiçbir SLO yok → “window_insufficient_data” uyarısı, bültene “SLO verisi eksik” notu.

Çifte pencere: aynı gün iki kez çalıştırma → idempotency devreye girer.

Büyük dosya (>200 KB) → “lite mode”: yalnız özet + kritik tablolar, htmlBytes/markdownBytes düşer.

Saat kayması: yaz saati geçişi → pencere hesaplamasında TZ’ye göre kaydır.

PnL yok: PnL bölümü “veri yok” mesajıyla geçilir.

PII kaçışı: note satırında PII maskeleme başarısız → bu satırı dahil etme, digest.alert("pii_mask_fail").

9) Telemetri (ek)
{
  "digest.metrics": {
    "event":"digest.metrics",
    "timestamp":"iso8601",
    "windowsBuilt":1,
    "avgComposeMs":7.4,
    "markdownBytes":3580,
    "htmlBytes":5170,
    "sections":{"slo":1,"guards":1,"anomalies":1,"pnl":1,"approvals":1,"incidents":1,"actions":1,"notes":1},
    "cacheReuse":0
  }
}

10) Dosya Yapısı (öneri)
services/livia/telemetryDailyDigest.ts        // FSM + scheduler + compose
services/livia/lib/collectWindow.ts           // pencere tanımı + veri toplama
services/livia/lib/composeDigest.ts           // md/html üretimi
services/livia/lib/score.ts                   // anomaly/guard skorlayıcı
services/livia/lib/piiMask.ts                 // PII koruma
services/livia/lib/atomicFS.ts                // atomic write + lock
services/livia/state/digestStore.ts           // idem index + last windows
services/livia/__tests__/telemetryDailyDigest.test.ts
cfg/livia.digest.yaml                         // schedule/sections/output/scoring

11) Test İskeleti (Jest/Vitest)

Tam akış: pencere tanımı → md/html dosyaları yazıldı → digest.daily.ready.

İdempotency: aynı gün tekrar → ikinci yazım yok, only “ready” re-emit.

Eksik SLO: uyarı üretildi, bülten “SLO eksik” notu içerir.

Guard özet: slowdown→normal geçişi metne doğru yansır.

Anomali sıralama: spike(high) ilk sırada.

PnL bölümü: top N sembol listesi doğru.

Approvals: pending/approved/rejected sayıları doğru.

PII: note içinde e-posta/telefon masklenir.

Atomic FS: eşzamanlı yazımda dosya bozulmaz.

DST günü: pencere doğru hesaplanır.

12) Örnek Kısa Çıktı (Markdown)
# Günlük Özet — 2025-09-13 (TZ: Europe/Istanbul)
Aktif Policy: v42 (active/100%)

**Özet:** SLO 3/4 OK, Guards: slowdown(2)→normal, PnL **+$1,234**, Incident **1** (37 dk), Açık onay **2**

## SLO
- guard_success_rate: **OK** (98.4% / hedef 98%)
- ui_ack_p95: **AT RISK** (1.52s / hedef 1.5s)
- bounds_pass_rate: OK (96.1% / 95%)
- abandon_rate: OK (1.8% / 2%)

## Guard Olayları
- 09:12 **slowdown** (slip_p95>15bps) → 10:25 **normal**

## Anomaliler (Top 3)
- 14:32 order.slip.p95 **spike**, max **27.2 bps**
- 11:05 market.spread.p95 **gap**
- 17:10 order.rate **drift**

## PnL
- Toplam: **+$1,234**
- Semboller: AVAX +$420, BTC −$55, SOL +$80 …

## Onaylar
- Bekleyen: **2** | Onaylanan: 7 | Reddedilen: 1

## Incident’lar
- inc-2025-09-13-1 (**high**, 37 dk) — çözüm: policy rollback v42→v41

## Aksiyonlar
- limits.maxSlipBps gözden geçir — **due: 2025-09-14 18:00**, owner: policy-team

13) SLO

P95 compose < 15 ms (indexler bellekte).

İdempotent çakışma oranı < %0.5.

Bülten hazır olma sapması < ±30 sn (18:00 ±).

PII sızıntısı = 0.
______________________________________________________________________________________________
ChatGPT:

tamam reis — şimdi LIVIA-14 · telemetryDailyDigest.ts için tek mesajda Geniş Prompt v3 (yol-prompt) bıraktım. Bunu .txt dosyana aynen koy ve diğer yapay zekâya ver; Node.js + TypeScript servisini bu yönergelerle yazsın. Kod yazdırmıyoruz; neyi nasıl kodlayacağını net tarifliyoruz.

LIVIA-14 · telemetryDailyDigest.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Son 24 saatin operasyon özetini (SLO/guard/latency&slip, PnL, onaylar, olaylar, kritik alarmlar, karar kalitesi) derleyip Markdown/HTML “Günlük Özet Bülten” üretmek; UI kartı ve chat kanallarına kısa versiyon dağıtmak; arşivlemek.
Standart: Node18+ / TS / Zod .strict() / ISO-8601 / TZ=Europe/Istanbul / idempotent + audit + metrics.

1) Standartlar

Dil/Yığın: Node 18+, TypeScript, pnpm, Jest/Vitest.

I/O: Event-driven JSON; tüm In/Out Zod .strict().

Zaman/TZ: ISO-8601, Europe/Istanbul; “gün” sınırı İstanbul lokal takvime göre.

Gizlilik: classification:"SENSITIVE_LOW"; PII maskeleme LIVIA-21.

İdempotency: digestKey = YYYY-MM-DD + scope + format; aynı güne ikinci yayın yok (TTL içinde).

Telemetri: digest.metrics, uyarı: digest.alert.

2) Girdiler (In) — Zod şema örnekleri
{
  "telemetry.slo.status": {
    "event":"telemetry.slo.status",
    "timestamp":"iso8601",
    "slo":"guard_success_rate|decision_accept_rate|latency_p95_under_1s",
    "state":"ok|at_risk|breach",
    "window":"5m|1h|24h",
    "burnPct": 8.3
  },

  "telemetry.rollup.batch": {
    "event":"telemetry.rollup.batch",
    "timestamp":"iso8601",
    "window":"24h",
    "series":[
      {"name":"slip.p95.bps","points":[["2025-09-13T00:00:00+03:00",14],["...",18]]},
      {"name":"latency.p95.ms","points":[["...",760]]},
      {"name":"orders.executed.count","points":[["...",4213]]}
    ]
  },

  "latency_slip.guard.directive": {
    "event":"latency_slip.guard.directive",
    "timestamp":"iso8601",
    "mode":"normal|slowdown|block_aggressive|halt_entry",
    "expiresAt":"iso8601",
    "reasonCodes":["slip_p95>15bps"]
  },

  "sentry.guard.directive": {
    "event":"sentry.guard.directive",
    "timestamp":"iso8601",
    "mode":"normal|degraded|streams_panic|halt_entry",
    "reasonCodes":["feed_stale>5s"]
  },

  "pnl.daily": {
    "event":"pnl.daily",
    "timestamp":"iso8601",
    "date":"2025-09-13",
    "realizedUSD": 1240.55,
    "unrealizedUSD": -210.2,
    "feesUSD": 84.7,
    "winRate": 0.61,
    "rrMedian": 1.34
  },

  "approval.metrics": {
    "event":"approval.metrics",
    "timestamp":"iso8601",
    "pending":2,"approved":7,"rejected":1,
    "slaBreaches":1
  },

  "decision.rationale": {
    "event":"decision.rationale",
    "timestamp":"iso8601",
    "accepted":true,
    "summary":"PLAN ONAY: LIMIT + qty −%25…",
    "citations":[{"path":"limits.maxSlipBps","version":"v42"}]
  },

  "incident.started": {
    "event":"incident.started",
    "timestamp":"iso8601",
    "id":"inc-2025-09-13-1",
    "severity":"high",
    "title":"Slip spike on SG02",
    "tags":["slip","latency"]
  },

  "incident.closed": {
    "event":"incident.closed",
    "timestamp":"iso8601",
    "id":"inc-2025-09-13-1",
    "resolution":"policy rollback v42→v41",
    "durationMin": 37
  },

  "notes.daily.md": {
    "event":"notes.daily.md",
    "timestamp":"iso8601",
    "path":"data/notes/2025-09-13/Daily.md",
    "summary":"Günlük not özeti…",
    "counts":{"decision":3,"incident":1,"approval":2,"action":3}
  }
}


Not: Tümü zorunlu değil; mevcut olanlardan birleştirerek bülteni oluştur.

3) Çıktılar (Out) — Şemalar
{
  "digest.daily.ready": {
    "event":"digest.daily.ready",
    "timestamp":"iso8601",
    "date":"2025-09-13",
    "format":"md|html",
    "scope":"ops|exec|policy",
    "path":"data/digest/2025-09-13/digest.ops.md",
    "summary":"SLO: 2 at_risk (guard, latency); 1 incident (37 dk, rollback v42→v41); PnL +$1.240; onaylar 7/10.",
    "audit":{"eventId":"...","producedBy":"livia-14","producedAt":"iso8601"}
  },

  "digest.card": {
    "event":"digest.card",
    "timestamp":"iso8601",
    "title":"Günlük Özet (13 Eyl)",
    "body":"SLO: 2 risk | 1 incident (37 dk) | PnL +$1.240 | Onay 7/10.",
    "severity":"info|warn|error",
    "links":[{"label":"Detay","href":"app://digest/2025-09-13"}],
    "ttlSec": 3600
  },

  "digest.distribute": {
    "event":"digest.distribute",
    "timestamp":"iso8601",
    "channels":["uiBridge","chatBridge:ops","email:exec"],
    "ok": true,
    "failed":[] 
  },

  "digest.alert": {
    "event":"digest.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"missing_timeseries|no_data|write_failed|idem_duplicate",
    "context":{"date":"2025-09-13"}
  },

  "digest.metrics": {
    "event":"digest.metrics",
    "timestamp":"iso8601",
    "generated":1,
    "dispatched":1,
    "avgComposeMs":18,
    "sizeBytes": 4096,
    "sections":{"slo":true,"guards":true,"pnl":true,"approvals":true,"incidents":true,"decisions":true}
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul", dateFmt:"DD MMM YYYY" },

  schedule: {
    runAt: "18:10",                 // her gün 18:10'da üret (yerel saat)
    allowManualRun: true,
    catchUpMissed: true             // kapandıysa açıldığında kaçan günleri üret
  },

  scopeProfiles: {
    // aynı verinin farklı kitlelere farklı detayda sunumu
    ops:    { include:["slo","guards","pnl","approvals","incidents","decisions"], redact:false },
    exec:   { include:["slo","pnl","incidents","approvals"], compact:true, redact:true },
    policy: { include:["slo","guards","decisions","approvals","incidents"], focus:"limits/variants" }
  },

  compose: {
    charts: { sparkline:true, width:28, fillChar:"▁▂▃▄▅▆▇█" }, // ASCII sparkline
    tables: { maxRows:10, pad:1 },
    maxLen: { md: 12000, html: 20000 },
    topN:   { incidents:5, decisions:8 },
    severityRules: {
      warnIf:   { sloAtRisk>=1, guardModes:["slowdown","block_aggressive"], incidentCount>=1 },
      errorIf:  { sloBreach>=1, guardModes:["halt_entry","streams_panic"] }
    }
  },

  storage: {
    outDir: "data/digest/{YYYY-MM-DD}",
    fileNames: {
      ops:    "digest.ops.md",
      exec:   "digest.exec.md",
      policy: "digest.policy.md",
      html:   "digest.html"
    },
    atomicWrite: true
  },

  distribution: {
    channels: ["uiBridge","chatBridge:ops","email:exec"],
    retry: { max: 3, backoffMs: [1000, 2000, 5000] }
  },

  idempotencyTtlSec: 86400
}

5) İçerik Şablonu (Markdown iskeleti)
# Günlük Özet — {{DATE_TR}} (TZ: Europe/Istanbul)

**Kısa Özet:** {{SUMMARY_LINE}}

## 1) SLO & Telemetri
- Guard success rate: {{GUARD_SLO_STATE}} (burn={{BURN}}%)
- Decision accept rate: {{DAR_SLO_STATE}}
- Latency p95: {{LAT_P95}} ms — {{LAT_SPARK}}

## 2) Guard Modları (son 24s)
- Son mod: {{GUARD_LAST_MODE}} (neden: {{REASONS}})
- Geçişler: {{GUARD_TRANSITIONS}}

## 3) PnL (USD)
| Gerçekleşen | Gerçekleşmemiş | Ücret | WinRate | RR Medyan |
|---:|---:|---:|---:|---:|
| {{PNL_REAL}} | {{PNL_UNREAL}} | {{FEES}} | {{WIN_RATE}} | {{RR_MED}} |

## 4) Onay Akışı
- Bekleyen: {{APP_PENDING}} — Onaylanan: {{APP_APPROVED}} — Reddedilen: {{APP_REJECTED}} — SLA ihlali: {{APP_SLA_BREACH}}

## 5) Olaylar
{{INCIDENT_LIST}}  <!-- ilk 5, her biri: [sev] başlık (süre), çözüm -->

## 6) Karar Örnekleri
{{DECISION_SNIPPETS}} <!-- max 8 satır, kısa özetler -->

> Not: Ayrıntılar için: app://notes/{{DATE}} ve app://digest/{{DATE}}


HTML varyantı için basit <table> ve <ul> ile aynı içerik.

6) Boru Hattı (Pipeline)

Pencere Seçimi

today = localDate(TZ); aralık: [00:00:00, 23:59:59] Istanbul.

Manuel tetiklenirse date parametresi alınabilir.

Veri Toplama

telemetry.slo.status (24h pencere), son telemetry.rollup.batch (slip/lat/exec sayıları).

latency_slip.guard.directive & sentry.guard.directive geçişleri.

pnl.daily (günün PnL’i).

approval.metrics, incident.* (başla/bitir), son 8 decision.rationale özetleri.

notes.daily.md varsa kısa satır sayıları.

Normalize & İstatistik

SLO: ok/at_risk/breach say; burnPct ort/tepe.

Sparkline: rollup points → 0..1 normalize → ASCII bar.

Guard geçişleri: mod dizisi & zaman damgaları → kısa zincir.

PnL tablo hücreleri, yüzde/para biçimleme LIVIA-13 ile.

Şiddet (severity) Etiği

compose.severityRules ile info|warn|error belirle; digest.card.severity buna göre.

Şablon Doldurma

Markdown iskeleti doldur; maxLen.md aşılırsa “Karar Örnekleri” kes.

HTML gerekiyorsa basit dönüştürücü.

Yaz & Arşivle

storage.outDir altında *.md/html dosyaları atomic yaz.

digest.daily.ready (her scope için) + digest.card yayınla.

Dağıtım

distribution.channels’a göre:

uiBridge → digest.card ve link.

chatBridge:ops → kısaltılmış mesaj (ilk 3 satır).

email:exec → digest.exec.md gövdesi (veya HTML).

Başarısız kanal için retry/backoff; sonuç digest.distribute.

İdempotency

Aynı date+scope+format bir kez üret; tekrar tetikte no-op + digest.alert(info,"idem_duplicate").

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE
cron(runAt) veya digest.generate.request{date?,scope?} → COLLECT.

COLLECT
Kaynakları oku; birisi eksik/boş → digest.alert("no_data|missing_timeseries") ama mevcutla devam → COMPOSE.

COMPOSE
İstatistik/şablon doldur → dosyaları hazırla → WRITE.

WRITE
Atomic yaz → digest.daily.ready(scope=ops|exec|policy) → DISTRIBUTE.

DISTRIBUTE
Kanallara gönder → digest.distribute → IDLE.

8) Kenar Durumlar

Veri Eksik: rollup.batch yoksa sparkline bölümü “(veri yok)” placeholder; alert üret.

Çift Gün PnL: Çoklu pnl.daily(date) gelirse son event kazanır; tutarsızlıkta warn.

Uzun İçerik: maxLen aşılırsa “Karar Örnekleri” ve “Olaylar” kısaltılır; kesildi notu.

Zaman Kayması: UTC kaynaklı eventler lokal güne taşarken saat farkı kontrolü; sınırdaki olaylar dahil edilir.

Dağıtım Hatası: Kanal başarısız → retry; tüm retry’lar bitince digest.alert(error,"distribution_failed").

İdempotent Çatışma: Aynı anda iki cron → lock/lease (5 sn) ile tek yazım.

9) Telemetri
{
  "digest.metrics": {
    "event":"digest.metrics",
    "timestamp":"iso8601",
    "generated": 1,
    "dispatched": 1,
    "avgComposeMs": 18,
    "sizeBytes": 4096,
    "severity":"warn",
    "cacheHitRate": 0.0,
    "byChannel":{"uiBridge":"ok","chatBridge:ops":"ok","email:exec":"ok"}
  }
}

10) Dosya Yapısı (öneri)
services/livia/telemetryDailyDigest.ts        // FSM + orchestrasyon
services/livia/lib/digestCollect.ts           // veri toplayıcı/normalize
services/livia/lib/sparkline.ts               // ASCII sparkline üretici
services/livia/lib/digestCompose.ts           // md/html şablon doldurucu
services/livia/lib/distribute.ts              // ui/chat/email dağıtımı
services/livia/lib/locks.ts                   // cron/atomic yazım kilidi
services/livia/state/digestStore.ts           // idem index + last run info
services/livia/__tests__/telemetryDailyDigest.test.ts
cfg/livia.digest.yaml                         // schedule/compose/storage/dist

11) Test İskeleti (Jest/Vitest)

Temel Üretim: SLO+rollup+PnL+incident+approval ile digest.ops.md oluşturur; card warn.

Veri Eksik: rollup yok → sparkline “(veri yok)”, alert missing_timeseries.

Guard Error: halt_entry görüldüğünde card error.

Dağıtım Retry: chatBridge ilk iki deneme hata → üçüncüde ok; digest.distribute.failed=[].

İdempotency: aynı gün/format tekrar → no-op + idem_duplicate.

Catch-Up: dün kaçırıldı → açılışta iki gün birden üretir (schedule.catchUpMissed).

Uzun İçerik: 50 karar snippet’i → topN=8 ile kesilir, “(kısaltıldı)” notu.

Lock: çift cron → tek dosya yazılır, diğerinde lock_timeout uyarısı.

12) Örnek Akış (kısa)

Saat 18:10 → cron tetikler.

24s verileri toplanır; slip p95 18 bps, latency p95 760 ms; guard slowdown→block_aggressive geçmiş.

PnL +$1.240; 1 incident 37 dk, çözüm rollback v42→v41.

digest.ops.md | exec.md | policy.md yazılır, digest.card(warn) yayınlanır.

uiBridge & chatBridge:ops & email:exec dağıtımı tamamlanır.

13) SLO

P95 compose < 50 ms (dosya yazımı hariç).

Gün içi tekrar üretim = 0 (idempotent).

Dağıtım başarısızlık oranı < %1 (retry dahil).

Sparkline üretimi < 2 ms.
______________________________________________________________________________________________
LIVIA-15 · incidentPostmortemWriter.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Bir incident kapandığında (veya elle tetiklendiğinde) denetlenebilir bir postmortem taslağı üretmek: Özet, Etki, Zaman Çizelgesi, Tespit, Kök-Neden Hipotezleri, Düzeltici/Önleyici Aksiyonlar (CAPA), Açık Sorular, Ekler. Verileri telemetry/anomaly, guard directives, policy.explain, decision.rationale, notes, approval ve digest’ten topla; Markdown ana çıktı + opsiyonel HTML. Her şey event-driven JSON, Zod, Europe/Istanbul, idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest.

Zod .strict() ile tüm In/Out şemaları.

Zaman: ISO-8601, TZ=Europe/Istanbul.

Gizlilik: PII maskesi (LIVIA-21); dosyaya maskli yaz.

Güvenlik: RBAC — ops|policy|trader okuyabilir; yazma yalnız ops|policy.

İdempotency: pmKey = incidentId + "#" + draftVersion (vars. v1) veya sha256(window+facts); TTL 7 gün.

Audit: her Out’ta {eventId, producedBy:"livia-15", producedAt}.

İçerik Dili: TR kısa ve net; teknik terimler (TWAP, RR, halt_entry) korunur.

2) Girdiler (In) — Zod şema örnekleri
{
  "incident.started": {
    "event":"incident.started",
    "timestamp":"iso8601",
    "id":"inc-2025-09-13-1",
    "severity":"low|medium|high|critical",
    "title":"Slip spike on SG02",
    "tags":["slip","latency","sg02"],
    "detectedBy":"anomaly|operator|monitor"
  },

  "incident.closed": {
    "event":"incident.closed",
    "timestamp":"iso8601",
    "id":"inc-2025-09-13-1",
    "resolution":"policy rollback v42→v41",
    "durationMin":37,
    "notes":"guard slowdown→normal; spread düzeldi",
    "impact":{"ordersAffected":128,"usersAffected":3,"pnlImpactUSD":-210.5}
  },

  "telemetry.anomaly.signal": {
    "event":"telemetry.anomaly.signal",
    "timestamp":"iso8601",
    "series":"order.slip.p95",
    "kind":"spike|drift|gap|flatline",
    "severity":"low|medium|high",
    "at":"iso8601",
    "context":{"symbol":"AVAXUSDT","env":"prod","node":"sg02"}
  },

  "telemetry.rollup.batch": {
    "event":"telemetry.rollup.batch",
    "timestamp":"iso8601",
    "window":"1m|5m",
    "series":[{"name":"order.slip.p95","max":27.2,"avg":14.8}]
  },

  "sentry.guard.directive": {
    "event":"sentry.guard.directive",
    "timestamp":"iso8601",
    "mode":"normal|degraded|streams_panic|halt_entry",
    "expiresAt":"iso8601",
    "reasonCodes":["feed_stale>5s","packet_gap>2s"]
  },

  "latency_slip.guard.directive": {
    "event":"latency_slip.guard.directive",
    "timestamp":"iso8601",
    "mode":"normal|slowdown|block_aggressive|halt_entry",
    "expiresAt":"iso8601",
    "reasonCodes":["slip_p95>15bps"]
  },

  "policy.explain": {
    "event":"policy.explain",
    "timestamp":"iso8601",
    "kind":"guard|bounds|variant|policy_change",
    "bullets":["Slip p95 18>15 bps","LIMIT önerisi"],
    "citations":[{"path":"limits.maxSlipBps","version":"v42"}]
  },

  "decision.rationale": {
    "event":"decision.rationale",
    "timestamp":"iso8601",
    "summary":"PLAN ONAY: LIMIT + qty −%25…",
    "sources":[{"ref":"action.approved","id":"run-42#commit#dlg-avax-42"}]
  },

  "approval.metrics": {
    "event":"approval.metrics",
    "timestamp":"iso8601",
    "pending":0,"approved":2,"rejected":0
  },

  "operator.notes.append": {
    "event":"operator.notes.append",
    "timestamp":"iso8601",
    "sessionId":"sess-avax-42",
    "lines":[{"ts":"iso8601","kind":"incident","text":"SG02 slip spike başladı"}]
  },

  "digest.daily.ready": {
    "event":"digest.daily.ready",
    "timestamp":"iso8601",
    "digestKey":"2025-09-13#18:00-md",
    "summary":"… (incident 1, 37 dk)"
  },

  "postmortem.manual.request": {
    "event":"postmortem.manual.request",
    "timestamp":"iso8601",
    "incidentId":"inc-2025-09-13-1",
    "draftVersion":"v1|v2",
    "includeSections":["summary","timeline","rca","capa","openQuestions"],
    "assignee":"ops|policy-team|owner@company"
  }
}

3) Çıktılar (Out) — Şemalar
{
  "postmortem.draft.ready": {
    "event":"postmortem.draft.ready",
    "timestamp":"iso8601",
    "incidentId":"inc-2025-09-13-1",
    "draftVersion":"v1",
    "pathMd":"data/postmortems/2025-09/inc-2025-09-13-1_v1.md",
    "pathHtml":"data/postmortems/2025-09/inc-2025-09-13-1_v1.html",
    "summary":"SG02 üzerinde slip p95 spike (max 27.2 bps); guard slowdown uygulanıp politika rollback ile düzeldi. Etki: 128 order, 3 kullanıcı, ~-$210.5.",
    "audit":{"eventId":"...","producedBy":"livia-15","producedAt":"iso8601"}
  },

  "postmortem.assign": {
    "event":"postmortem.assign",
    "timestamp":"iso8601",
    "incidentId":"inc-2025-09-13-1",
    "assignee":"policy-team",
    "due":"2025-09-14T18:00:00+03:00"
  },

  "postmortem.alert": {
    "event":"postmortem.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"missing_incident|insufficient_data|write_failed|idem_duplicate|rbac_forbidden",
    "context":{"incidentId":"inc-2025-09-13-1"}
  },

  "postmortem.metrics": {
    "event":"postmortem.metrics",
    "timestamp":"iso8601",
    "drafts": 1,
    "avgComposeMs": 9.1,
    "avgTimelineItems": 6,
    "withCitationsRate": 0.82
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  output: {
    dir: "data/postmortems/{YYYY-MM}",
    html: { enable: true, cssPreset: "pm-minimal" },
    atomicWrite: true,
    lockTimeoutMs: 3000
  },

  compose: {
    minFields: ["summary","impact","timeline","rca","capa"],
    maxOpenQuestions: 6,
    timelineWindowHours: 6,    // start/close ±
    preferDailyDigestLinks: true,
    includeCitations: true
  },

  heuristics: {
    // RCA (fishbone) aday sınıflar: İnsan/Süreç/Sistem/Veri/Dış
    rcaBuckets: ["System","Data","Process","Human","External"],
    rcaRules: [
      { ifTags:["slip","latency"], bucket:"System", hint:"Execution path latency & slippage" },
      { ifReasons:["feed_stale>5s","packet_gap>2s"], bucket:"Data", hint:"Market data freshness/gaps" },
      { ifKind:"policy_change", bucket:"Process", hint:"Change management / rollout" }
    ],
    capaTemplates: [
      { when:"System", action:"Order path latency budgets tighten; add p95 guard at 800ms", owner:"ops", dueHours:24 },
      { when:"Data", action:"Market feed watchdog, auto-failover playbook update", owner:"ops", dueHours:24 },
      { when:"Process", action:"Policy rollout checklist + canary %, rollback gates", owner:"policy-team", dueHours:48 }
    ]
  },

  rbac: {
    write: ["ops","policy"],
    read: ["ops","policy","trader"]
  },

  privacy: { piiMask:true },

  idempotencyTtlSec: 604800
}

5) Markdown Şablonu (taslak yapısı)
# Postmortem — {{incidentId}} ({{severity}}) — {{dateLocal}}

**Başlık:** {{title}}
**Özet:** {{summary}}

## Etki
- Süre: {{durationMin}} dk ({{startLocal}} → {{endLocal}})
- Etkilenen emir: {{ordersAffected}}, kullanıcı: {{usersAffected}}
- PnL etkisi: {{pnlImpactUSD}}
- SLO ihlali: {{sloBreachNote}}

## Zaman Çizelgesi
{{#each timeline}}
- {{tsLocal}} — **{{kind}}**: {{text}}
{{/each}}

## Tespit & Müdahale
- Tespit: {{detectedBy}} (anomaly/monitor/operator)
- İlk müdahale: {{firstResponse}}
- Guard: {{guardModes}} (örn. slowdown 09:12→normal 10:25)
- Onay akışları: {{approvals}}

## Kök Neden Hipotezleri (RCA)
{{#each rca}}
- **{{bucket}}** — {{hypothesis}} (kanıt: {{evidence}})
{{/each}}

## Düzeltici/Önleyici Aksiyonlar (CAPA)
{{#each capa}}
- [ ] {{action}} — **Sorumlu:** {{owner}}, **Son tarih:** {{due}}
{{/each}}

## Açık Sorular
{{#each openQuestions}}
- {{this}}
{{/each}}

## Atıflar
{{#each citations}}
- {{path}} ({{version}}) — {{href}}
{{/each}}

## Ekler
- Günlük Özet: {{digestLink}}
- İlgili Notlar: {{notesRefs}}
- Telemetri: slip.p95 max={{slipMax}} bps, spread.p95 max={{spreadMax}} bps

6) Pipeline (algoritma)

Tetikleyici

incident.closed geldiğinde otomatik taslak oluştur.

postmortem.manual.request ile istenen incidentId için yeniden derle veya draftVersion artır (v2, v3 …).

Zaman Penceresi

timelineWindowHours kadar başlangıç/kapanış çevresi verileri topla (anomaly, guard, approvals, notes, rationale, explain).

Zaman Çizelgesi Derleme

Olayları kronolojik sırala; benzerleri birleştir (ör. peş peşe slowdown → tek satır aralıklı).

operator.notes.append satırlarından insan yorumu ekle (PII mask).

Örnek kalemler: anomaly spike, guard enable/disable, approval pending/approved, rollback, plan onayı/iptali, incident closed.

RCA Hipotezleri

rcaRules ile etiket/reason/kind’e göre bucket ve kısa hipotez çıkar.

Her hipotez için kanıt alanına ilgili timeline referansı veya policy.explain maddesi ekle.

CAPA Üretimi

capaTemplates → RCA bucket’a göre aksiyonlar öner; owner ve due hesapla (now + dueHours).

Açıkta kalanlar için boş “to-do” bırak (checkbox).

Özet & Etki

incident.closed.impact alanları, PnL & etkilenen emir/kullanıcı sayıları ile kısa özet.

SLO ihlali varsa telemetry.slo.status’tan not üret.

Atıflar/Citations

policy.explain.citations[] ve knowledge.route.select.top[].passages[].cit varsa ekle.

Digest ve not dosyaları için link alanlarını doldur.

Yazım & Çıktı

Markdown + opsiyonel HTML’ye dönüştür; atomic write + lock.

postmortem.draft.ready + postmortem.assign? (assignee varsa) + postmortem.metrics.

İdempotency

Aynı incidentId + draftVersion tekrar derlenmek istenirse idem duplicate → yalnızca mevcut path’leri re-emit et.

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → incident.closed | postmortem.manual.request → COLLECT

COLLECT → ilgili olayları pencereye göre topla → yeterli değilse postmortem.alert("insufficient_data") → (IDLE)

COMPOSE → timeline + rca + capa + özet → WRITE

WRITE → md/html yaz; hata → postmortem.alert("write_failed"); başarı → EMIT

EMIT → postmortem.draft.ready (+ assign?) + postmortem.metrics → IDLE

8) Kenar Durumlar

missing_incident: incident.closed yok; yalnız manual istek → alert + minimal taslak (başlık/özet/ açık sorular).

reopen: kapanmış incident tekrar açıldı → yeni draftVersion ile “Reopen” notu timeline’a eklenir.

PII leak: notes içinde PII mask başarısız → o satır timeline’dan çıkar.

çok uzun timeline: >200 satır → “lite timeline” mod; ilk 80 + son 20 + kritik olaylar.

çok az veri: anomaly/guard yok → RCA yalnız “Process/Human” hipotezleriyle başlar, CAPA yine üretilir.

RBAC: yazma yetkisi olmayan kullanıcıdan manual istek → rbac_forbidden.

clock skew: olay saatleri sıralanamazsa ts normalizasyonu (±2 dk) ve “yaklaşık saat” etiketi.

9) Telemetri
{
  "postmortem.metrics": {
    "event":"postmortem.metrics",
    "timestamp":"iso8601",
    "drafts": 1,
    "avgComposeMs": 9.1,
    "avgTimelineItems": 6,
    "withCitationsRate": 0.82,
    "bySeverity":{"high":1},
    "liteModeRate":0.0
  }
}

10) Dosya Yapısı (öneri)
services/livia/incidentPostmortemWriter.ts        // FSM + orchestrasyon
services/livia/lib/timelineBuilder.ts             // toplama + normalize + birleştirme
services/livia/lib/rcaComposer.ts                 // bucket/hipotez üretimi
services/livia/lib/capaPlanner.ts                 // CAPA öneri & due hesap
services/livia/lib/citations.ts                   // policy/route linkleri
services/livia/lib/atomicFS.ts                    // atomic write + lock
services/livia/state/postmortemStore.ts           // idem index + last drafts
services/livia/__tests__/incidentPostmortemWriter.test.ts
cfg/livia.postmortem.yaml                         // output/compose/heuristics/rbac
templates/postmortem.md                           // şablon (opsiyonel override)

11) Test İskeleti (Jest/Vitest)

Tam akış: started→anomaly→guard→approval→closed → taslak oluşur, md/html yazılır.

RCA & CAPA: slip/latency etiketi → System/Data bucket; CAPA önerileri doğru owner/due ile.

Idempotency: aynı incidentId+v1 tekrar → ikinci yazım yok, ready re-emit.

Manual v2: manual request v2 → yeni path’ler ve “v2” başlık.

PII: notes içindeki e-posta/telefon mask’lenir veya satır atlanır.

Lite timeline: 250+ olayda lite mode devreye girer.

RBAC: trader manual yazma isteği → rbac_forbidden.

Clock skew: ts normalizasyonu ile sıralama bozulmaz.

Citations: policy.explain varsa citations alanı dolar.

12) Örnek Kısa Çıktı (Markdown)
# Postmortem — inc-2025-09-13-1 (high) — 13.09.2025

**Başlık:** Slip spike on SG02  
**Özet:** SG02 üzerinde slip p95 spike (max 27.2 bps). Guard slowdown ile girişler kısıtlandı; politika rollback v42→v41 sonrası normale döndü. Etki: 128 emir, 3 kullanıcı, PnL ≈ -$210.5.

## Etki
- Süre: 37 dk (09:12 → 09:49)
- SLO: ui_ack_p95 at_risk (1.52s / hedef 1.5s)

## Zaman Çizelgesi
- 09:12 — **anomaly**: order.slip.p95 spike (max 27.2 bps)
- 09:13 — **guard**: slowdown (slip_p95>15bps)
- 09:20 — **approval**: failover 2/2 başlatıldı
- 09:32 — **decision**: LIMIT + qty −%25 planı onaylandı
- 09:40 — **policy**: rollback v42→v41
- 09:49 — **incident**: closed (spread normale döndü)

## Kök Neden Hipotezleri
- **System** — Yürütme yolunda gecikme ↑; slip guard tetik (kanıt: anomaly/guard)
- **Data** — Bölgesel feed gecikmesi (sg02 packet_gap>2s) (kanıt: sentry reason)

## CAPA
- [ ] Order path p95 800ms guard eşiği ve alarmlar — **Sorumlu:** ops — **Due:** 14.09 18:00
- [ ] Feed watchdog & auto-failover playbook — **Sorumlu:** ops — **Due:** 14.09 18:00
- [ ] Policy rollout checklist & rollback gates — **Sorumlu:** policy-team — **Due:** 15.09 18:00

## Açık Sorular
- Canary yüzdesi yeterli miydi? Rollback tetik kriterleri net mi?

## Atıflar
- limits.maxSlipBps (v42) — app://kb/policy/limits@v42#c1

13) SLO

P95 compose < 12 ms (önbellekli verilerle).

withCitationsRate ≥ %75.

Atomic write hata oranı < %0.5.

Lite timeline gereksinimi ≤ %10 (normal günlerde).
______________________________________________________________________________________________
LIVIA-16 · empathyDrivenCooldownPlanner.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç: Operatörün ve sistemin duygusal/psikolojik stres işaretlerinden yola çıkarak idempotent, audit’li ve ölçülebilir “cooldown/ara verme” planları üretmek, uygun olduğunda otomatik etkinleştirmek veya approval gateway üzerinden onaya sunmak; planı UI kartı olarak bildirmek; TTL bitiminde otomatik kaldırmak. Sinyal akışını geçici olarak kısma, sıklık/pozisyon limiti uygulama ve zamanlayıcı bazlı savunma ile VIVO/Otobilinç/LIVIA-01’e bağlanır.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest.

Event-driven JSON I/O; tüm payload’lar Zod .strict().

Zaman: ISO-8601, TZ=Europe/Istanbul; “gün” penceresi 00:00–23:59:59 (yerel).

Güvenlik: HMAC/JWT doğrulama; RBAC: okuma ops|policy|trader, yazma yalnız sistem ve policy.

Gizlilik: PII yok; operatör kimliği gerekiyorsa hash(pseudonym) ve salt (günlük dönüşümlü).

İdempotency: cooldownKey = scope + symbol? + reasonCode + windowStartISO; TTL içinde yinelenen planı yeniden yazma.

Telemetri: cooldown.metrics; uyarılar: cooldown.alert.

2) Girdiler (In) — Zod’a çevrilecek şema örnekleri
{
  "bias.awareness": {
    "event":"bias.awareness",
    "timestamp":"iso8601",
    "operatorId":"op-007",
    "scores": { "overconfidence":0.72, "loss_aversion":0.18, "risk_seeking":0.54 },
    "window":"30m",
    "source":"LIVIA-03"
  },

  "operator.stress.metrics": {
    "event":"operator.stress.metrics",
    "timestamp":"iso8601",
    "overtradingLoop": { "count1h":6, "lossPct":0.52 },
    "hesitation": { "missed":3, "rebounds":2 },
    "emotionalSurge": { "last10m":{"positions":3,"rsiVolMismatch":true} }
  },

  "trade.loss.series": {
    "event":"trade.loss.series",
    "timestamp":"iso8601",
    "sequence":[{"id":"t1","pnlUSD":-120},{"id":"t2","pnlUSD":-85},{"id":"t3","pnlUSD":-60}],
    "window":"45m"
  },

  "guard.mode": {
    "event":"guard.mode",
    "timestamp":"iso8601",
    "sentry":"normal|degraded|streams_panic|halt_entry",
    "latency_slip":"normal|slowdown|block_aggressive|halt_entry"
  },

  "dialog.metrics": {
    "event":"dialog.metrics",
    "timestamp":"iso8601",
    "prompts":41,"answers":36,"acceptRate":0.78,"p95AnswerMs":920
  },

  "policy.override.request": {
    "event":"policy.override.request",
    "timestamp":"iso8601",
    "cooldownKey":"...",
    "requestedBy":"policy|ops",
    "rationale":"acil geri dönüş"
  }
}

3) Çıktılar (Out)
{
  "cooldown.plan.proposed": {
    "event":"cooldown.plan.proposed",
    "timestamp":"iso8601",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "reasonCode":"overconfidence|fomo|loss_aversion|overtrading|emotional_surge|panic_mode",
    "policy": { "durationMin": 30, "signalRateMaxPer10m": 1, "positionLimitFactor": 0.5 },
    "ttlSec": 1800,
    "audit":{"eventId":"...","producedBy":"LIVIA-16"}
  },

  "cooldown.plan.activated": {
    "event":"cooldown.plan.activated",
    "timestamp":"iso8601",
    "cooldownKey":"...",
    "effectiveFrom":"iso8601",
    "effectiveUntil":"iso8601",
    "appliedBy":"auto|approval_gateway",
    "hash":"sha256:..."
  },

  "cooldown.card": {
    "event":"cooldown.card",
    "timestamp":"iso8601",
    "title":"Geçici Savunma — {scope}",
    "body":"Aşırı güven/FOMO riski → {durationMin} dk sinyal kısıtlaması. Gerekçe: {reason}.",
    "severity":"warn|info",
    "ttlSec":600
  },

  "cooldown.alert": {
    "event":"cooldown.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|write_failed|invalid_scope|approval_required|expired",
    "context":{"cooldownKey":"..."}
  },

  "cooldown.metrics": {
    "event":"cooldown.metrics",
    "timestamp":"iso8601",
    "proposed":1,
    "activated":1,
    "expired":0,
    "avgDecayMin":28,
    "byReason":{"overconfidence":1},
    "mdBytes":820,
    "htmlBytes":0
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  thresholds: {
    // tetikleyici eşikler
    overconfidence: ">=0.70",
    risk_seeking: ">=0.60",
    loss_series3: "<=-250 USD in 45m",
    overtrading1h: ">=5 positions & lossPct>=0.5",
    emotionalSurge10m: "positions>=3 & rsiVolMismatch=true",
    guardEscalation: ["degraded","slowdown","block_aggressive","halt_entry"]
  },

  policyMatrix: {
    // sebep→varsayılan plan
    overconfidence: { durationMin: 30, signalRateMaxPer10m: 1, positionLimitFactor: 0.6 },
    fomo:           { durationMin: 20, signalRateMaxPer10m: 1, positionLimitFactor: 0.7 },
    loss_aversion:  { durationMin: 25, signalRateMaxPer10m: 1, positionLimitFactor: 0.8 },
    overtrading:    { durationMin: 45, signalRateMaxPer10m: 0, positionLimitFactor: 0.5 },
    emotional_surge:{ durationMin: 30, signalRateMaxPer10m: 0, positionLimitFactor: 0.6 },
    panic_mode:     { durationMin: 60, signalRateMaxPer10m: 0, positionLimitFactor: 0.4 }
  },

  schedule: { // plan sonu/temizlik
    sweepEvery: "1m",
    maxActivePerScope: 3
  },

  approval: {
    requireFor: ["durationMin>=45","panic_mode"],
    gateway: "LIVIA-05"
  },

  idempotencyTtlSec: 3600
}

5) Mesaj/İçerik Taslağı

Başlık: Geçici Savunma — {scope}

Özet: {reasonLabel} riski algılandı; {durationMin} dk boyunca sinyaller kısıtlanacak.

Detay: Sinyal sıklığı max {signalRateMaxPer10m}/10dk, pozisyon limiti x{positionLimitFactor}.

Dipnot: Otomatik; {effectiveFrom}–{effectiveUntil}, itiraz için Policy.

6) Kompozisyon (Pipeline)

Toplama: Son 30–60 dakikalık bias.awareness, operator.stress.metrics, trade.loss.series, guard.mode, dialog.metrics.

Skorla: Ağırlıklı risk puanı R = f(overconfidence, risk_seeking, loss_series, overtrading, surge, guard).

Sebep seç: En yüksek risk katkısı → reasonCode (eşitlikte panic_mode öncelikli).

Politika eşleşmesi: policyMatrix[reasonCode] + guard durumuyla modifiye (halt_entry → signalRate=0).

İdempotency: cooldownKey üret; aktif çakışma varsa genişlet/merge et.

Onay: approval.requireFor eşiklerinde LIVIA-05’e approval.request gönder; aksi halde otomatik etkinleştir.

Yayın: cooldown.plan.(proposed|activated) + cooldown.card + cooldown.metrics.

Süreç Sonu: TTL dolunca expired; sweep temizliği; telemetri güncelle.

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE
(bias|stress|loss|guard|request) → EVALUATE

EVALUATE
Skor hesapla, plan taslağı → DRAFT

DRAFT
requireApproval? → AWAIT_APPROVAL | aksi → ACTIVATE

AWAIT_APPROVAL
approval.granted → ACTIVATE; rejected/timeout → IDLE (+alert)

ACTIVATE
Planı kaydet, kartı yayınla → ACTIVE

ACTIVE
ttl_expired → EXPIRE

EXPIRE
Temizle, metrik yaz → IDLE
Hata: IDLE + cooldown.alert("write_failed"|...)

8) Kenar Durumlar

Çakışan plan: Aynı scope/symbol için aktif plan → merge (süreyi uzun, limitleri sıkı olanı seç).

Guard=halt_entry: Sinyal oranı otomatik 0; plan sebebi panic_mode.

Eksik skor: Yalnız overtrading veya loss_series varsa yine plan üretilir.

Operatör yok: Symbol-scope planları operatör kimliğinden bağımsız çalışır.

Onay gecikmesi: approval.timeout → conservative auto-plan (kısa süre, sıkı limit).

9) Telemetri
{
  "cooldown.metrics": {
    "event":"cooldown.metrics",
    "timestamp":"iso8601",
    "proposed": 2,
    "activated": 1,
    "expired": 1,
    "avgDecayMin": 26,
    "byReason": {"overconfidence":1, "overtrading":1},
    "highlights": ["panic_mode:false","merged:true","approval:skipped"]
  }
}

10) Dosya Yapısı (öneri)
services/livia/empathyDrivenCooldownPlanner.ts   // FSM + composer + scheduler
services/livia/lib/cooldownPolicy.ts             // policyMatrix & eşik karar mantığı
services/livia/lib/cooldownStore.ts              // active plans + idem index
services/livia/lib/redact.ts                     // operator hash/PII temizlik
services/livia/lib/approvalBridge.ts             // LIVIA-05 entegrasyonu
services/livia/__tests__/empathyDrivenCooldownPlanner.test.ts
cfg/livia.cooldown.yaml                          // thresholds/policy/approval/schedule

11) Test İskeleti (Jest/Vitest)

Eşik/Plan: overconfidence=0.72 → 30 dk plan, rate 1/10dk, posLimit×0.6.

Overtrading: 1h=6 işlem & lossPct 0.52 → 45 dk, rate 0, posLimit×0.5.

Guard Etkisi: block_aggressive → rate min(öneri, 0) = 0.

Approval: duration≥45 → AWAIT_APPROVAL, grant sonrası ACTIVATE.

Idempotency: aynı cooldownKey ile 2. üretim yok; çakışanda merge.

Expire: TTL dolunca expired ve metrikler güncellendi.

RBAC/Auth: imza yok/yanlış → cooldown.alert(error,"auth_failed").

TR Kart: başlık/gerekçe kısa, 280 karakter altı.

12) Örnek Akış (kısa)

16:05 → bias.awareness(overconfidence=0.74) + operator.stress.metrics(overtrading1h=6, lossPct=0.5)

EVALUATE→DRAFT: reason=overtrading, plan=45 dk, rate=0, posLimit×0.5

AWAIT_APPROVAL (≥45 dk) → LIVIA-05 onayı → ACTIVATE

cooldown.card yayın, VIVO sinyal debisi kısılır, LIVIA-01 operatör akışında bilgi görünür.

13) SLO

P95 karar kompozisyonu < 50 ms (cache’li skorlar).

Yazma hatası oranı < %0.5 (atomic write + lock).

İdempotent çakışma oranı ≈ 0; merge doğruluk testleri ≥ %99.

Kart üretiminden sonra 1 sn içinde etkin plan state’i görünebilir.
______________________________________________________________________________________________
LIVIA-17 · reactiveDefenseGate.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç:
Duygusal/taktiksel tetikleyiciden hemen sonra (ör. FOMO, intikam işlemi, aşırı güven, panik, guard-escalation) kısa süreli savunma duvarı kur. Bu duvar; sinyal debisini kısmak, pozisyon limitini azaltmak, belirli varyantları (ör. “aggressive”) geçici olarak kapatmak ve gerektiğinde tam durdurma (halt) uygulamak için kullanılır. Süre sonunda otomatik söner; onay gerektiren durumlarda LIVIA-05 ile entegrasyon yapar. Tüm I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics standartlı.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601, TZ=Europe/Istanbul; “gün” penceresi 00:00–23:59:59 (yerel)

Güvenlik: HMAC/JWT doğrulama; RBAC — ops|policy|observer okur, yazım sadece sistem/policy

Gizlilik: PII yok; operatör kimliği gerekiyorsa hash(salt günlük döner)

İdempotency: gateKey = scope + symbol? + trigger + startedAtISO; aktif pencere içinde yinelenen duvar yeniden yazılmaz

Telemetri: defense.metrics; uyarılar: defense.alert

Uyum: LIVIA-16 (cooldown) ile çakışma yok; gate anlık savunma (dakikalar), cooldown davranışsal (daha uzun)

2) Girdiler (In) — Zod’a çevrilecek şema örnekleri
{
  "emotion.trigger": {
    "event":"emotion.trigger",
    "timestamp":"iso8601",
    "trigger":"fomo|revenge|overconfidence|panic",
    "confidence":0.82,
    "source":"LIVIA-03",
    "symbol":"AVAXUSDT|null"
  },

  "trade.executed": {
    "event":"trade.executed",
    "timestamp":"iso8601",
    "id":"t-9283",
    "side":"buy|sell",
    "symbol":"AVAXUSDT",
    "pnlUSD": -12.4,
    "context":{"variant":"aggressive|balanced|conservative"}
  },

  "guard.escalation": {
    "event":"guard.escalation",
    "timestamp":"iso8601",
    "from":"normal|degraded|slowdown",
    "to":"slowdown|block_aggressive|halt_entry",
    "reason":"slip|latency|spread|feed_gap",
    "symbol":"AVAXUSDT|null"
  },

  "bias.snapshot": {
    "event":"bias.snapshot",
    "timestamp":"iso8601",
    "scores":{"fomo":0.71,"overconfidence":0.66,"loss_aversion":0.22}
  },

  "policy.override.request": {
    "event":"policy.override.request",
    "timestamp":"iso8601",
    "gateKey":"...",
    "requestedBy":"policy|ops",
    "rationale":"kritik görev"
  }
}

3) Çıktılar (Out)
{
  "defense.gate.proposed": {
    "event":"defense.gate.proposed",
    "timestamp":"iso8601",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "trigger":"fomo|revenge|overconfidence|panic|guard_escalation",
    "policy": { "durationSec": 600, "signalRateMaxPer2m": 1, "blockVariants": ["aggressive"] },
    "ttlSec": 600,
    "audit":{"eventId":"...","producedBy":"LIVIA-17"}
  },

  "defense.gate.activated": {
    "event":"defense.gate.activated",
    "timestamp":"iso8601",
    "gateKey":"...",
    "effectiveFrom":"iso8601",
    "effectiveUntil":"iso8601",
    "appliedBy":"auto|approval_gateway",
    "hash":"sha256:..."
  },

  "defense.card": {
    "event":"defense.card",
    "timestamp":"iso8601",
    "title":"Reaktif Savunma — {scope}",
    "body":"{triggerLabel} sonrası {durationSec}s kısıtlama: 2 dakikada max {signalRateMaxPer2m} sinyal; {blocked} kapalı.",
    "severity":"warn|info",
    "ttlSec":600
  },

  "defense.alert": {
    "event":"defense.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|write_failed|invalid_scope|approval_required|expired",
    "context":{"gateKey":"..."}
  },

  "defense.metrics": {
    "event":"defense.metrics",
    "timestamp":"iso8601",
    "proposed":1,"activated":1,"expired":0,
    "avgActiveSec":580,
    "byTrigger":{"fomo":1},
    "merged":0
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  thresholds: {
    fomo: ">=0.70",
    overconfidence: ">=0.65",
    revengeAfterSL: { lossesIn5m: ">=1", followTradeWithinSec: "<=120" },
    guardToHalt: true  // guard.halt_entry → tam durdurma
  },

  policyMatrix: {
    fomo:            { durationSec: 600,  signalRateMaxPer2m: 1, blockVariants:["aggressive"] },
    overconfidence:  { durationSec: 900,  signalRateMaxPer2m: 1, blockVariants:["aggressive","balanced"] },
    revenge:         { durationSec: 1200, signalRateMaxPer2m: 0, blockVariants:["*"] },
    panic:           { durationSec: 1800, signalRateMaxPer2m: 0, blockVariants:["*"] },
    guard_escalation:{ durationSec: 600,  signalRateMaxPer2m: 0, blockVariants:["aggressive"] }
  },

  approval: {
    requireFor: ["panic","revenge","durationSec>=1200"],
    gateway: "LIVIA-05"
  },

  schedule: {
    sweepEvery: "30s",
    maxActivePerScope: 5
  },

  idempotencyTtlSec: 1800
}

5) İçerik/Kart Taslağı

Başlık: Reaktif Savunma — {scope}

Özet: {triggerLabel} algılandı; {durationSec}s boyunca sinyaller kısıtlanacak.

Detay: 2 dk içinde en fazla {signalRateMaxPer2m} sinyal; bloklanan varyantlar: {blocked}.

Dipnot: {effectiveFrom}–{effectiveUntil}; itiraz → Policy.

6) Kompozisyon (Pipeline)

Topla: Son 10–30 dakikalık emotion.trigger, trade.executed, guard.escalation, bias.snapshot.

Skorla: R = w1*fomo + w2*overconfidence + w3*(revenge pattern) + w4*(guard state); guard=halt → R=1.0

Tetik seç: En baskın tetik + guard durumu → trigger

Politika eşleştir: policyMatrix[trigger]; guard=halt_entry ise blockVariants=["*"], rate=0

İdempotency: gateKey üret; aynı scope/trigger aktifse merge (süre=uzun olanı, blok=set birleşimi, rate=min)

Onay: approval.requireFor tetiklenirse LIVIA-05’e istek; aksi halde otomatik etkinleştir

Emit: defense.gate.(proposed|activated) + defense.card + defense.metrics

Süreç Sonu: TTL dolunca expired; sweep temizliği; metrik güncelle

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (emotion.trigger | guard.escalation | trade.executed) → EVALUATE

EVALUATE → skor + politika → DRAFT

DRAFT → (requireApproval?) AWAIT_APPROVAL | ACTIVATE

AWAIT_APPROVAL → approval.granted → ACTIVATE | rejected/timeout → IDLE (+alert)

ACTIVATE → gate kaydı + kart → ACTIVE

ACTIVE → ttl_expired | override → EXPIRE

EXPIRE → temizlik + telemetri → IDLE

Hata: IDLE + defense.alert(...)

8) Kenar Durumlar

Çakışan Gate: Aynı scope/trigger aktif → merge; daha sıkı kurallar önceliklenir

Guard=halt_entry: Tam durdurma; tüm varyantlar kapalı; sinyal debisi 0

Sadece trade.executed: Son SL’den ≤120s içinde yeni işlem → tetik “revenge”

Operatör kimliği yok: Sembole/scope’a göre gate çalışır; PII tutulmaz

Override request: Policy onayıyla gate erken kapatılabilir

LIVIA-16 ile birlikte: Gate aktifken LIVIA-16 planı tetiklenirse çelişki yok; gate kısa vadeli, cooldown orta vadeli

9) Telemetri
{
  "defense.metrics": {
    "event":"defense.metrics",
    "timestamp":"iso8601",
    "proposed":2,"activated":1,"expired":1,
    "avgActiveSec":540,
    "byTrigger":{"fomo":1,"guard_escalation":1},
    "merged":1,
    "highlights":["panic:false","halt:false","approval:skipped"]
  }
}

10) Dosya Yapısı (öneri)
services/livia/reactiveDefenseGate.ts        # FSM + composer + scheduler
services/livia/lib/gatePolicy.ts             # policyMatrix & skor mantığı
services/livia/lib/gateStore.ts              # active gates + idem index
services/livia/lib/redact.ts                 # hash/PII temizlik (ortak)
services/livia/lib/approvalBridge.ts         # LIVIA-05 entegrasyonu
services/livia/__tests__/reactiveDefenseGate.test.ts
cfg/livia.defense-gate.yaml                  # thresholds/policy/approval/schedule

11) Test İskeleti (Jest/Vitest)

FOMO ≥0.70: 600s gate, rate 1/2m, aggressive kapalı

Revenge pattern: SL’den ≤120s işlem → 1200s gate, rate 0, * kapalı (approval gerekir)

Guard Escalation→halt_entry: rate 0, * kapalı, onay zorunlu değil (zaten sistemsel durdurma)

Merge: aynı scope/trigger aktifken ikinci teklif → süre max, rate min, block birleşim

Idempotency: aynı gateKey ile ikinci yazım yok

Expire: TTL bitince expired ve metrikler güncellenir

RBAC/Auth: imza yok/yanlış → defense.alert(error,"auth_failed")

TR Kart sınırı: 280 karakter altı

12) Örnek Akış (kısa)

14:03 emotion.trigger(fomo, 0.78, AVAXUSDT) + 14:04 trade.executed

EVALUATE→DRAFT: trigger=fomo; politika=600s, 1/2m, aggressive kapalı

ACTIVATE: defense.gate.activated + defense.card; VIVO sinyal debisi kısılır

14:15 TTL dolunca gate kapanır; expired emit edilir

13) SLO

P95 karar kompozisyonu < 40 ms (önbellekli skorlar)

Yazma hatası oranı < %0.5 (atomic write + lock)

İdempotent çakışma ≈ 0; merge doğruluk testleri ≥ %99

Kart yayınından ≤1 sn sonra gate state’i UI’da görünür
______________________________________________________________________________________________
LIVIA-18 · behavioralAnchorReset.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç:
Savunma dönemleri (gate/cooldown/incident) sonrasında sistemi “konservatiften normale” geri taşımak için davranışsal anchor setini yeniden kalibre et. Anchor = risk iştahı, onay eşiği, sinyal varyant izinleri, günlük işlem limiti ve onay gereksinimi gibi global/desk/symbol düzeyi politika parametreleri.
Koşullar uygunsa kademeli (ramp-up) geri yükleme uygula; değilse konservatif modda kal. Tüm I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics standartlı.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest.

Zaman: ISO-8601, TZ=Europe/Istanbul; gün penceresi 00:00–23:59:59 (yerel).

Güvenlik: HMAC/JWT doğrulama; RBAC: ops|policy yazar/okur, observer okur.

Gizlilik: PII yok; operatör kimliği gerekir ise hash (salt günlük döner).

İdempotency: anchorKey = scope + symbol? + stage + forDate; aynı anahtarda ikinci yazım yok.

Telemetri: anchor.metrics; uyarı: anchor.alert.

2) Girdiler (In) — Zod’a çevrilecek şema örnekleri
{
  "cooldown.expired": {
    "event":"cooldown.expired",
    "timestamp":"iso8601",
    "cooldownKey":"...",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "reasonCode":"overtrading|overconfidence|panic_mode"
  },

  "defense.gate.expired": {
    "event":"defense.gate.expired",
    "timestamp":"iso8601",
    "gateKey":"...",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "trigger":"fomo|revenge|overconfidence|panic|guard_escalation"
  },

  "incident.closed": {
    "event":"incident.closed",
    "timestamp":"iso8601",
    "id":"inc-2025-09-13-1",
    "severity":"low|medium|high|critical",
    "durationMin":37
  },

  "pnl.daily.provisional": {
    "event":"pnl.daily.provisional",
    "timestamp":"iso8601",
    "netUSD": 1610.24,
    "winRate": 0.56,
    "rrMedian": 1.42
  },

  "trade.streak.summary": {
    "event":"trade.streak.summary",
    "timestamp":"iso8601",
    "lossStreak": 0,
    "winStreak": 2,
    "lastWinLoss":"win|loss",
    "windowMin": 120
  },

  "bias.snapshot": {
    "event":"bias.snapshot",
    "timestamp":"iso8601",
    "scores":{"fomo":0.21,"overconfidence":0.33,"loss_aversion":0.28}
  },

  "guard.mode": {
    "event":"guard.mode",
    "timestamp":"iso8601",
    "sentry":"normal|degraded|streams_panic|halt_entry",
    "latency_slip":"normal|slowdown|block_aggressive|halt_entry"
  }
}


Not: cooldown.expired ve/veya defense.gate.expired tetikleyicidir; incident.closed varsa ek bekleme ve daha yavaş ramp.

3) Çıktılar (Out)
{
  "anchor.reset.proposed": {
    "event":"anchor.reset.proposed",
    "timestamp":"iso8601",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "stage":"ramp1|ramp2|full",
    "policyPatch": {
      "confirmationThresholdDelta": -0.1,
      "allowVariants": ["balanced","conservative"],
      "dailyTradeCap": 3,
      "positionLimitFactor": 0.8
    },
    "rationale":"cooldown bitti; bias düşük; guard=normal; PnL≥0",
    "ttlSec": 1800,
    "audit":{"producedBy":"LIVIA-18"}
  },

  "anchor.reset.activated": {
    "event":"anchor.reset.activated",
    "timestamp":"iso8601",
    "anchorKey":"...",
    "effectiveFrom":"iso8601",
    "effectiveUntil":"iso8601",
    "appliedBy":"auto|approval_gateway",
    "hash":"sha256:..."
  },

  "anchor.card": {
    "event":"anchor.card",
    "timestamp":"iso8601",
    "title":"Davranışsal Anchor Yenilendi — {scope}",
    "body":"{stage} aşaması: onay eşiği {Δ}, varyantlar {allowVariants}, günlük limit {dailyTradeCap}, pozisyon ×{positionLimitFactor}.",
    "severity":"info",
    "ttlSec":600
  },

  "anchor.alert": {
    "event":"anchor.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|write_failed|not_ready|guard_not_normal|pnlnonpos",
    "context":{"stage":"ramp1","scope":"desk"}
  },

  "anchor.metrics": {
    "event":"anchor.metrics",
    "timestamp":"iso8601",
    "proposed":1,"activated":1,"rolledBack":0,
    "avgRampMin":45,
    "byStage":{"ramp1":1},
    "highlights":["guard:normal","biasLow:true","pnl>=0:true"]
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  readiness: {
    minQuietMin: 15,                 // Gate/Cooldown sonrası sinyal sessizliği
    maxBiasScores: { fomo: 0.35, overconfidence: 0.40 }, // üstünde ise bekle
    guardMustBe: ["normal"],         // guard≠normal → reset yok
    requireNonNegativePnL: true      // gün PnL < 0 ise sadece ramp1
  },

  rampPolicy: {
    ramp1: { confirmationThresholdDelta: -0.10, allowVariants:["conservative","balanced"], dailyTradeCap: 2, positionLimitFactor: 0.7, minHoldMin: 30 },
    ramp2: { confirmationThresholdDelta: -0.20, allowVariants:["balanced"],                dailyTradeCap: 3, positionLimitFactor: 0.8, minHoldMin: 60 },
    full:  { confirmationThresholdDelta: -0.30, allowVariants:["balanced","aggressive"],   dailyTradeCap: 3, positionLimitFactor: 1.0, minHoldMin: 90 }
  },

  approval: {
    requireFor: ["full","Δthreshold<=-0.25","allowAggressive"],
    gateway: "LIVIA-05"
  },

  schedule: {
    sweepEvery: "5m",                // ramp aşaması kontrolü
    postIncidentCooldownMin: 20      // incident.closed sonrası ek bekleme
  },

  idempotencyTtlSec: 3600
}

5) İçerik/Kart Taslağı

Başlık: Davranışsal Anchor Yenilendi — {scope}

Özet: {stage} aşaması başlatıldı; onay eşiği {Δ}, varyantlar {allowVariants}.

Detay: Günlük limit {dailyTradeCap}, pozisyon ×{positionLimitFactor} (guard={guardState}).

Dipnot: {effectiveFrom}–{effectiveUntil}; itiraz → Policy.

6) Kompozisyon (Pipeline)

Topla: cooldown.expired | defense.gate.expired | incident.closed | pnl.daily.provisional | trade.streak.summary | bias.snapshot | guard.mode.

Uygunluk (readiness) kontrolü:

quiet ≥ minQuietMin

bias ≤ maxBiasScores (fomo/overconfidence)

guard ∈ guardMustBe

PnL≥0 ise ramp2/full açılabilir; <0 ise ramp1 ile sınırlı

Aşama seçimi: Önceki stage’e göre ramp1 → ramp2 → full. Incident yüksekse ramp1 zorunlu.

Politika yaması: rampPolicy[stage] uygulanır; allowAggressive yalnız full’de ve guard=normal’de.

Onay: approval.requireFor tetiklenirse LIVIA-05’e istek; aksi halde otomatik etkinleştir.

İdempotency: anchorKey ile var olanı kontrol et; aktif aynı stage varsa süresini uzat, tekrar yazma.

Emit: anchor.reset.(proposed|activated) + anchor.card + anchor.metrics.

Ramp izleme: sweepEvery ile minHold aşıldıysa bir üst aşamaya EVALUATE.

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (cooldown.expired | gate.expired | schedule.sweep) → EVALUATE

EVALUATE → readiness ok → DRAFT | not_ready → IDLE (+alert)

DRAFT → (requireApproval?) AWAIT_APPROVAL | ACTIVATE

AWAIT_APPROVAL → approval.granted → ACTIVATE | rejected/timeout → IDLE (+alert)

ACTIVATE → stage etkin + kart → ACTIVE

ACTIVE → minHoldMin dolunca EVALUATE (üst aşama?) | guard≠normal → HOLD

HOLD → guard normale dönünce ACTIVE | süre aşımında IDLE

Hata: IDLE + anchor.alert(...)

8) Kenar Durumlar

PnL<0 & bias düşük: Sadece ramp1 uygulanır; full yasak.

Guard=degraded/slowdown: Aşama yükseltme bekler (HOLD).

Ardışık incident (≤24h): Her yeni incident ramp aşamasını bir kademe düşürür.

Çakışan anchor: Aynı scope için aktif anchor varsa merge: Δthreshold = min(Δ), positionLimitFactor = min, allowVariants = kesişim.

Onay gecikmesi: timeout → ramp1 conservative fallback.

9) Telemetri
{
  "anchor.metrics": {
    "event":"anchor.metrics",
    "timestamp":"iso8601",
    "proposed":2,"activated":1,"rolledBack":0,
    "avgRampMin":48,
    "byStage":{"ramp1":1,"ramp2":1},
    "highlights":["guard=normal","biasLow","pnl>=0"]
  }
}

10) Dosya Yapısı (öneri)
services/livia/behavioralAnchorReset.ts      # FSM + composer + scheduler
services/livia/lib/anchorPolicy.ts           # rampPolicy + readiness kuralları
services/livia/lib/anchorStore.ts            # active anchors + idem index
services/livia/lib/redact.ts                 # ortak hash/PII (gerektiğinde)
services/livia/lib/approvalBridge.ts         # LIVIA-05 entegrasyonu
services/livia/__tests__/behavioralAnchorReset.test.ts
cfg/livia.anchor.yaml                        # thresholds/policy/approval/schedule

11) Test İskeleti (Jest/Vitest)

Readiness true: guard=normal, bias düşük, PnL≥0 → ramp2 (önce ramp1 var ise)

PnL<0: yalnız ramp1; full yasak.

Incident high: postIncidentCooldownMin dolmadan not_ready.

Idempotency: aynı anchorKey ile ikinci yazım yok; aktif stage’de süre uzar.

Merge: mevcut anchor + yeni öneri → kurallar birleşimi doğru mu?

Approval: full veya Δ≤-0.25 → gateway; grant sonrası activated.

RBAC/Auth: imza hatası → anchor.alert(error,"auth_failed").

12) Örnek Akış (kısa)

16:00 cooldown.expired(scope=symbol:AVAXUSDT); bias düşük, guard=normal, PnL≥0 → DRAFT(ramp1)

16:01 AWAIT_APPROVAL yok → ACTIVATE(ramp1); kart yayınlandı

16:40 sweep → readiness ok → DRAFT(ramp2) → ACTIVATE(ramp2)

18:10 guard=slowdown → HOLD; guard normale dönünce ACTIVE akışına devam

13) SLO

P95 değerlendirme < 50 ms (cache + sabit kurallar)

Yazma hatası < %0.5 (atomic write + lock)

İdempotent çakışma ≈ 0; merge doğruluk testleri ≥ %99

Kart yayınından ≤1 sn sonra anchor durumu UI’da görünür
_____________________________________________________________________________________________
LIVIA-19 · emotionalRecoveryMonitor.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç:
Savunma dönemi (gate/cooldown/incident) ardından sistemin ve operatörün psikolojik toparlanma durumunu 0–1 aralığında recoveryIndex olarak ölçmek. Endeks; bias skor trendleri, kayıp serisi, diyalog kalitesi, guard/SLO durumu ve son PnL/streak verilerini birleştirir. Sonuç:

recovery.ready (≥ eşiği): LIVIA-18’e ramp-up için sinyal

recovery.hold (< eşiği): normalleşmeyi ertele, gerekiyorsa LIVIA-16’ya cooldown uzatma öner

UI’ya kısa card gönder, telemetriyi yaz.
Tüm I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics standartlı.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601, TZ=Europe/Istanbul; “gün” penceresi 00:00–23:59:59 (yerel)

Güvenlik: HMAC/JWT doğrulama; RBAC: ops|policy|observer okuyabilir; yazım sadece sistem/policy

Gizlilik: PII yok; operatör kimliği gerekiyorsa hash(salt günlük döner)

İdempotency: recoveryKey = scope + symbol? + windowStartISO + windowMin

Telemetri & Alert: recovery.metrics, recovery.alert

2) Girdiler (In) — Zod’a çevrilecek şema örnekleri
{
  "cooldown.expired": {
    "event":"cooldown.expired",
    "timestamp":"iso8601",
    "cooldownKey":"...",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "reasonCode":"overtrading|overconfidence|panic_mode"
  },

  "defense.gate.expired": {
    "event":"defense.gate.expired",
    "timestamp":"iso8601",
    "gateKey":"...",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "trigger":"fomo|revenge|overconfidence|panic|guard_escalation"
  },

  "incident.closed": {
    "event":"incident.closed",
    "timestamp":"iso8601",
    "id":"inc-2025-09-13-1",
    "severity":"low|medium|high|critical",
    "durationMin":37
  },

  "bias.snapshot": {
    "event":"bias.snapshot",
    "timestamp":"iso8601",
    "scores": { "fomo":0.22, "overconfidence":0.28, "loss_aversion":0.31 }
  },

  "bias.trend": {
    "event":"bias.trend",
    "timestamp":"iso8601",
    "windowMin":120,
    "delta": { "fomo":-0.18, "overconfidence":-0.12, "loss_aversion":-0.05 }
  },

  "dialog.metrics": {
    "event":"dialog.metrics",
    "timestamp":"iso8601",
    "prompts":41, "answers":36, "acceptRate":0.78, "p95AnswerMs":920
  },

  "trade.streak.summary": {
    "event":"trade.streak.summary",
    "timestamp":"iso8601",
    "lossStreak":0, "winStreak":2, "lastWinLoss":"win|loss",
    "windowMin":120
  },

  "pnl.window": {
    "event":"pnl.window",
    "timestamp":"iso8601",
    "windowMin":240,
    "netUSD": 610.4,
    "rrMedian": 1.35
  },

  "guard.mode": {
    "event":"guard.mode",
    "timestamp":"iso8601",
    "sentry":"normal|degraded|streams_panic|halt_entry",
    "latency_slip":"normal|slowdown|block_aggressive|halt_entry"
  },

  "telemetry.slo.status": {
    "event":"telemetry.slo.status",
    "timestamp":"iso8601",
    "slo":"answer_latency_p95|guard_success_rate|uptime_feed",
    "state":"ok|at_risk|breach",
    "window":"5m|1h|24h",
    "burnPct":3.1
  }
}


Not: Girdilerin tamamı gerekmeyebilir; eksik alanlarda varsayılan ve ağırlık düşümü uygulanır.

3) Çıktılar (Out)
{
  "recovery.score.updated": {
    "event":"recovery.score.updated",
    "timestamp":"iso8601",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "windowMin": 120,
    "recoveryIndex": 0.73,              // 0..1
    "factors": {
      "biasTrend": 0.82,
      "guardOk": 1.0,
      "sloOk": 0.9,
      "pnlWindow": 0.68,
      "streak": 0.6,
      "dialogQuality": 0.7
    },
    "audit":{"producedBy":"LIVIA-19","version":"v1"}
  },

  "recovery.ready": {
    "event":"recovery.ready",
    "timestamp":"iso8601",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "recoveryIndex": 0.74,
    "suggestedStage":"ramp1|ramp2|full",
    "minHoldMin": 30
  },

  "recovery.hold": {
    "event":"recovery.hold",
    "timestamp":"iso8601",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "recoveryIndex": 0.42,
    "reasonCodes":["bias_high","pnl_nonpos|weak_streak","guard_not_normal"]
  },

  "cooldown.extend.suggest": {
    "event":"cooldown.extend.suggest",
    "timestamp":"iso8601",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "reason":"recovery_low",
    "proposed": { "durationMin": 15, "signalRateMaxPer10m": 0 }
  },

  "recovery.card": {
    "event":"recovery.card",
    "timestamp":"iso8601",
    "title":"Toparlanma Endeksi: 0.74 — {scope}",
    "body":"Bias↓, guard=normal, SLO ok, PnL pozitif; öneri: ramp2 (min 30dk).",
    "severity":"info|warn",
    "ttlSec":600
  },

  "recovery.metrics": {
    "event":"recovery.metrics",
    "timestamp":"iso8601",
    "evaluations": 6,
    "readySignals": 2,
    "holds": 4,
    "avgEvalMs": 7.5,
    "missingInputsRate": 0.12
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  window: {
    evaluateEvery: "5m",
    windowMin: 120,             // skor için geçmiş pencere
    minQuietAfterDefenseMin: 10 // gate/cooldown sonrası en az sessizlik
  },

  weights: {
    biasTrend: 0.30,            // son 120dk düşüş yönü & seviye
    guardOk: 0.15,              // guard=normal & latency_slip=normal
    sloOk: 0.10,                // SLO'lar ok/at_risk
    pnlWindow: 0.20,            // 4h net ve rrMedian
    streak: 0.15,               // win/loss dengesi
    dialogQuality: 0.10         // acceptRate↑, p95AnswerMs↓
  },

  thresholds: {
    ready: 0.70,                // ≥ ise recovery.ready
    hold:  0.55,                // < ise recovery.hold
    hysteresis: 0.05            // flip-flop engelleme
  },

  mapping: {
    indexToStage: [
      { "gte": 0.70, "lt": 0.80, "stage": "ramp1" },
      { "gte": 0.80, "lt": 0.90, "stage": "ramp2" },
      { "gte": 0.90, "lt": 1.01, "stage": "full"  }
    ]
  },

  approval: {
    requireFor: [],             // recovery.ready sadece öneridir; aktivasyon LIVIA-18’de
    gateway: "LIVIA-05"
  },

  idempotencyTtlSec: 900
}

5) Skorlama Tasarımı (Özet)

Normalizasyon: Her faktörü 0..1 aralığına ölçekle:

biasTrend = clamp( (−avgDeltaWeighted + 0.2) / 0.4, 0, 1 ) (negatif delta iyidir)

guardOk = 1 yalnızca sentry=normal && latency_slip=normal ise; değilse 0–0.5

sloOk = 1 (ok), 0.5 (at_risk), 0 (breach)

pnlWindow = sigmoid(netUSD/targetUSD) * blend(rrMedian, range)

streak = min(1, (winStreak−lossStreak+1)/3) tabanlı

dialogQuality = blend(acceptRate↑, p95AnswerMs↓)

Endeks: recoveryIndex = Σ (w_i * factor_i)

Histerezis: Son iki skorun EMA’sı ile karar ver; flip-flop’ı azalt.

6) Pipeline (Kompozisyon)

Topla & Doğrula: Son window.windowMin içindeki ilgili eventler → Zod .strict()

Sessizlik Kontrolü: minQuietAfterDefenseMin sağlanmadıysa hold

Normalizasyon: Faktörleri 0..1 aralığına getir; eksik girdilerde ağırlık yeniden ölçeklenir

Skorla: recoveryIndex hesapla + EMA histerezisi uygula

Karar:

recoveryIndex ≥ ready (ve önceki karar “hold” ise ready+hysteresis şartı) → recovery.ready

Aksi → recovery.hold (+ gerekirse cooldown.extend.suggest)

Emit: recovery.score.updated + recovery.card + recovery.metrics

İdempotency: recoveryKey aynı pencereye ait ikinci yazımı engeller

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → schedule(5m) | (gate/cooldown expired) → EVALUATE

EVALUATE → skor hesapla → DECIDE

DECIDE → (ready) READY_EMIT | (hold) HOLD_EMIT

READY_EMIT/HOLD_EMIT → emit + store → IDLE

Hata: IDLE + recovery.alert(level,"missing_data|write_failed|idem_duplicate")

8) Kenar Durumlar

Guard≠normal: otomatik hold (reason=guard_not_normal)

PnL negatif ama bias düşük: indeks tavanı 0.69; hazır sinyali verilmez

Ardışık incident ≤24h: indeks maksimumu 0.79 ile sınırlandırılır

Eksik veri (> %40): skor yazılmaz; recovery.alert("info","missing_data")

Sürekli osilasyon: histerezis + minQuietMin artırımı önerilir

9) Telemetri
{
  "recovery.metrics": {
    "event":"recovery.metrics",
    "timestamp":"iso8601",
    "evaluations": 6,
    "readySignals": 2,
    "holds": 4,
    "avgEvalMs": 7.5,
    "missingInputsRate": 0.12,
    "highlights": ["guard:normal", "biasTrend:good", "pnl:nonneg"]
  }
}

10) Dosya Yapısı (öneri)
services/livia/emotionalRecoveryMonitor.ts   # FSM + scorer + scheduler
services/livia/lib/recovery/normalizers.ts   # faktör normalizasyonu
services/livia/lib/recovery/weights.ts       # ağırlık/threshold config okuyucu
services/livia/lib/recovery/hysteresis.ts    # EMA/histerezis karar mantığı
services/livia/state/recoveryStore.ts        # idem index + son skor cache
services/livia/lib/redact.ts                 # ortak hash/PII (gerektiğinde)
services/livia/__tests__/emotionalRecoveryMonitor.test.ts
cfg/livia.recovery.yaml                      # window/weights/thresholds

11) Test İskeleti (Jest/Vitest)

Ready senaryosu: guard=normal, biasTrend iyi, PnL≥0 → recovery.ready(stage=ramp2)

Hold senaryosu: guard=slowdown veya PnL<0 → recovery.hold + (opsiyonel) cooldown.extend.suggest

Histerezis: sınırda 0.69↔0.71 osilasyonunda flip-flop yok

Eksik veri: >%40 eksik → alert; ≤%40 eksik → ağırlık yeniden ölçekleme

Idempotency: aynı recoveryKey ile ikinci yazım bloklanır

RBAC/Auth: imza hatası → recovery.alert(error,"auth_failed")

TR Card: 280 karakter altında, net özet

12) Örnek Akış (kısa)

16:00 defense.gate.expired(symbol=AVAXUSDT); 16:05 değerlendirme → recoveryIndex=0.64 → recovery.hold

16:10 bias trendleri iyileşir, guard=normal kalır, PnL pozitif → 0.76 → recovery.ready(stage=ramp2, minHold=30)

LIVIA-18 anchor.reset ramp2’yi uygular; kart UI’da görünür.

13) SLO

P95 değerlendirme süresi < 10 ms

Yazma hatası oranı < %0.5 (atomic write + lock)

Idempotent çakışma ≈ 0

Yanıt (card emit) ≤ 1 sn içinde
______________________________________________________________________________________________
haklısın reis — kaliteyi bir tık daha yukarı taşıyalım. Aşağıya iki teslim bırakıyorum:

LIVIA-19 için “v3.1 Hardening Addendum” (ek güçlendirmeler)

LIVIA-20 · operatorFatigueSentinel.ts — Geniş Prompt v3 (yeni modül)

Hepsi tek mesaj, kopyala-yapıştır “yol-prompt” formatında.

(Ek) LIVIA-19 · emotionalRecoveryMonitor.ts — v3.1 Hardening Addendum

Amaç (ek): v3 taslağını; daha net I/O sözleşmeleri, tip güvenliği, gözlemlenebilirlik, histerezis/anti-flap, degradasyon/fallback ve cross-module entegrasyon sinyalleri ile sertleştir.

A) I/O Sözleşmeleri — TypeScript Arayüzleri (uygulat)
export type Scope = "global"|"desk"|"symbol";

export interface RecoveryScoreUpdated {
  event: "recovery.score.updated";
  timestamp: string; // ISO-8601
  scope: Scope; symbol: string|null;
  windowMin: number;
  recoveryIndex: number; // 0..1
  factors: { biasTrend:number; guardOk:number; sloOk:number; pnlWindow:number; streak:number; dialogQuality:number };
  audit: { producedBy:"LIVIA-19"; version:string };
}

export interface RecoveryReady {
  event:"recovery.ready";
  timestamp:string; scope:Scope; symbol:string|null;
  recoveryIndex:number; suggestedStage:"ramp1"|"ramp2"|"full"; minHoldMin:number;
}

export interface RecoveryHold {
  event:"recovery.hold";
  timestamp:string; scope:Scope; symbol:string|null;
  recoveryIndex:number; reasonCodes:string[];
}

B) Zod Şemaları (örnekler, .strict() şart)

bias.snapshot, bias.trend, guard.mode, telemetry.slo.status, pnl.window, trade.streak.summary, dialog.metrics → ayrı şema dosyaları; tüm alanlar tiplenmiş, opsiyoneller açıkça işaretlenmiş.

C) Skor Formülleri (netleştirme)

biasTrend = clamp( (-EMA(deltaBias, W=3) + 0.20) / 0.40 , 0, 1 )

guardOk = sentry==="normal" && latency_slip==="normal" ? 1 : (sentry==="degraded"?0.5:0)

sloOk = {ok:1, at_risk:0.5, breach:0}[worst24h]

pnlWindow = clamp( 0.5*sigmoid(netUSD/targetUSD) + 0.5*min(1, rrMedian/1.5), 0, 1 )

streak = clamp( (winStreak - lossStreak + 1)/3 , 0, 1 )

dialogQuality = clamp( 0.6*acceptRate + 0.4*(1 - norm(p95AnswerMs)) , 0, 1 )

recoveryIndex = Σ(w_i * factor_i); ağırlıklar v3 ile aynı (toplam=1).

D) Anti-flap & Histerezis

Karar eşiği: ready >= 0.70, geri dönüş eşiği: ready - 0.05.

Karar, EMA(recoveryIndex, α=0.4) üzerinden verilir.

E) Degradasyon / Fallback

missingInputsRate > 0.4 → emit yok, recovery.alert("info","missing_data").

guard != normal → otomatik hold + reason=guard_not_normal.

PnL<0 & biasLow → tavan 0.69.

F) Observability (OpenTelemetry)

Spans: recovery.evaluate, recovery.normalize, recovery.decide.

Metrics (OTLP): livia_recovery_index (gauge, labels: scope,symbol), livia_recovery_ready_total, livia_recovery_hold_total, livia_recovery_eval_ms_p95.

G) Cross-Module Emit

Ready → LIVIA-18 dinler: recovery.ready(suggestedStage, minHoldMin).

Hold (düşük skor) → LIVIA-16’ya öneri: cooldown.extend.suggest.

H) Performans Bütçesi

p95 eval < 10ms, GC-free kritik zonda; JSON parse/validate >2ms olursa uyarı logu.

I) Test Ekleri

Histerezis testi (0.69↔0.71) osilasyonda flip-flop yok.

SLO breach simülasyonu: worst=breach → sloOk=0 → hold.

Eksik veri yeniden ölçekleme: ağırlıklar normalize.

LIVIA-20 · operatorFatigueSentinel.ts — Geniş Prompt v3 (AI’ye verilecek yol-prompt)

Amaç:
Operatörün zihinsel yorgunluk (fatigue) düzeyini 0–1 arası fatigueScore ile ölç; yüksek yorgunlukta break öner, sinyal debisini kısma/cooldown öner, approval gerekiyorsa iste. Uzun seans, karar kalitesi düşüşü, tepki süresi artışı, kayıp serisi ve gece saatleri gibi göstergeleri birleştir. Tüm I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601, TZ=Europe/Istanbul

Güvenlik: HMAC/JWT; RBAC: ops|policy|observer okur, yazım sistem/policy

İdempotency: fatigueKey = operator? + scope + windowStartISO + windowMin

Telemetri: fatigue.metrics; uyarı: fatigue.alert

2) Girdiler (In) — Zod’a çevrilecek şema örnekleri
{
  "session.activity": {
    "event":"session.activity",
    "timestamp":"iso8601",
    "operatorId":"op-007|null",
    "minutesOnline": 210,
    "microBreaks": 1,          // ≥5 dk ara sayısı
    "lastBreakMinAgo": 130
  },
  "dialog.metrics": {
    "event":"dialog.metrics",
    "timestamp":"iso8601",
    "prompts":41,"answers":36,"acceptRate":0.72,"p95AnswerMs":1280
  },
  "trade.streak.summary": {
    "event":"trade.streak.summary",
    "timestamp":"iso8601",
    "lossStreak":2,"winStreak":0,"lastWinLoss":"loss","windowMin":90
  },
  "pnl.window": {
    "event":"pnl.window",
    "timestamp":"iso8601",
    "windowMin":180,"netUSD":-240.0,"rrMedian":0.92
  },
  "clock.localtime": {
    "event":"clock.localtime",
    "timestamp":"iso8601",
    "hour": 1,                 // 0..23, lokal
    "isWeekend": false
  },
  "approval.result": {
    "event":"approval.result",
    "timestamp":"iso8601",
    "ref":"fatigue.break.request|cooldown.request",
    "decision":"granted|rejected|timeout"
  }
}

3) Çıktılar (Out)
{
  "fatigue.score.updated": {
    "event":"fatigue.score.updated",
    "timestamp":"iso8601",
    "scope":"global|desk|symbol",
    "operator":"hash|null",
    "windowMin":120,
    "fatigueScore":0.78,       // 0..1
    "factors": {
      "longSession":0.9, "noBreak":1.0, "slowDialog":0.7,
      "lossStreak":0.6, "nightShift":0.8, "pnlDrag":0.5
    },
    "audit":{"producedBy":"LIVIA-20","version":"v1"}
  },

  "fatigue.break.proposed": {
    "event":"fatigue.break.proposed",
    "timestamp":"iso8601",
    "durationMin": 15,
    "rationale":"fatigueScore>=0.75; lastBreak>120m; nightShift"
  },

  "cooldown.plan.proposed": {
    "event":"cooldown.plan.proposed",
    "timestamp":"iso8601",
    "scope":"desk",
    "symbol": null,
    "reasonCode":"fatigue_high",
    "policy": { "durationMin": 20, "signalRateMaxPer10m": 0, "positionLimitFactor": 0.6 },
    "ttlSec":1200
  },

  "fatigue.card": {
    "event":"fatigue.card",
    "timestamp":"iso8601",
    "title":"Yorgunluk Yüksek — Ara Önerildi",
    "body":"Skor 0.78 • 15 dk ara + 20 dk sinyal kısıtlama önerisi.",
    "severity":"warn",
    "ttlSec":600
  },

  "fatigue.alert": {
    "event":"fatigue.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"missing_data|write_failed|idem_duplicate|approval_required"
  },

  "fatigue.metrics": {
    "event":"fatigue.metrics",
    "timestamp":"iso8601",
    "evaluations":4,"breakProposed":2,"cooldownsProposed":1,
    "avgEvalMs":6.1,"missingInputsRate":0.08
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  window: { evaluateEvery:"10m", windowMin:120 },

  weights: {
    longSession: 0.25,      // minutesOnline↑
    noBreak:     0.15,      // lastBreakMinAgo↑, microBreaks↓
    slowDialog:  0.15,      // p95AnswerMs↑, acceptRate↓
    lossStreak:  0.20,      // losses↑
    nightShift:  0.15,      // hour∈[0,5] veya [23]
    pnlDrag:     0.10       // netUSD<0, rrMedian<1
  },

  thresholds: {
    breakSuggest: 0.70,     // ≥ ise ara öner
    cooldownSuggest: 0.80,  // ≥ ise cooldown öner
    hysteresis: 0.05
  },

  policyMatrix: {
    // skor bandına göre öneriler
    "0.70-0.80": { breakMin: 10, cooldownMin: 0, posLimitFactor: 0.8 },
    "0.80-1.00": { breakMin: 15, cooldownMin: 20, posLimitFactor: 0.6 }
  },

  approval: {
    requireFor: ["cooldownSuggest"],
    gateway: "LIVIA-05"
  },

  pii: { operators:true, hashSalt:"rotate-me-daily" },

  idempotencyTtlSec: 900
}

5) Skorlama (net)

longSession = clamp((minutesOnline - 120)/180, 0, 1)

noBreak = clamp(lastBreakMinAgo/120, 0, 1) * (microBreaks===0 ? 1 : 0.7)

slowDialog = clamp( (p95AnswerMs-900)/900, 0, 1 ) * clamp( (0.8-acceptRate)/0.5, 0, 1 )

lossStreak = clamp( (lossStreak)/3 , 0, 1 )

nightShift = hour∈[23..5]? 1 : 0 (geceye ağırlık 0.8–1.0 arası konfig edilebilir)

pnlDrag = clamp( -netUSD/500 , 0, 1 ) * clamp( (1 - rrMedian)/0.5 , 0, 1 )

Toplam: fatigueScore = Σ(w_i * factor_i); EMA + histerezis uygulanır.

6) Pipeline

Topla & Doğrula: session.activity, dialog.metrics, trade.streak.summary, pnl.window, clock.localtime.

Normalize + Skorla: faktörleri 0..1 ve ağırlıkları uygula.

Karar:

fatigueScore ≥ cooldownSuggest → cooldown.plan.proposed + fatigue.break.proposed + fatigue.card(warn)

fatigueScore ≥ breakSuggest → fatigue.break.proposed + fatigue.card(info/warn)

Değilse yalnız fatigue.score.updated.

Approval: cooldown gerekiyorsa gateway’e gönder; karar sonrası emit.

Idempotency: aynı pencereye ikinci yazımı engelle.

Telemetry: fatigue.metrics güncelle.

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → schedule(10m) → EVALUATE

EVALUATE → skor → DECIDE

DECIDE → (cooldownSuggest) REQUEST_APPROVAL | (breakSuggest) PROPOSE_BREAK | IDLE

REQUEST_APPROVAL → approval.result → EMIT_COOLDOWN | IDLE

PROPOSE_BREAK → fatigue.break.proposed + card → IDLE

Hata: IDLE + fatigue.alert(...)

8) Kenar Durumlar

Operatör anonim (hash): scope/symbol planları yine çalışır.

Sessiz gece seansı ama hızlı cevap: nightShift tek başına karar üretmez (ağırlık limitli).

Üst üste iki cooldown önerisi: idempotency, sürenin uzatılması (merge) ve kartın bir kez yayınlanması.

Eksik veri: ağırlık yeniden ölçeklenir; >%40 eksik → emit yok + alert.

9) Telemetri
{
  "fatigue.metrics":{
    "event":"fatigue.metrics",
    "timestamp":"iso8601",
    "evaluations":4,"breakProposed":2,"cooldownsProposed":1,
    "avgEvalMs":6.1,"missingInputsRate":0.08,
    "highlights":["nightShift","slowDialog","longSession"]
  }
}

10) Dosya Yapısı (öneri)
services/livia/operatorFatigueSentinel.ts     # FSM + scorer + scheduler
services/livia/lib/fatigue/normalizers.ts     # faktör normalizasyonu
services/livia/lib/fatigue/weights.ts         # ağırlık/threshold okuma
services/livia/state/fatigueStore.ts          # idem index + last score
services/livia/lib/redact.ts                  # operator hash/PII
services/livia/lib/approvalBridge.ts          # LIVIA-05 entegrasyonu
services/livia/__tests__/operatorFatigueSentinel.test.ts
cfg/livia.fatigue.yaml

11) Test İskeleti (Jest/Vitest)

Uzun seans + gece + yavaş diyalog → fatigueScore≥0.8 → cooldown önerisi + break

Kısa seans + pozitif PnL + hızlı diyalog → yalnız fatigue.score.updated

Idempotency & Merge: ardışık önerilerde süre uzar, tek kart

RBAC/Auth: imza hatası → fatigue.alert(error,"auth_failed")

Histerezis: 0.78↔0.82 aralığında flip-flop yok
______________________________________________________________________________________________
LIVIA-21 · piiGuardAndRedactor.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Tüm metin/rapor/özet/karte akışlarında PII/Bilgisel hassasiyet tespiti ve maskeleme/redaksiyon sağlamak. Markdown/HTML/Text akışlarını streaming işleyerek e-posta, telefon, kimlik numarası, IBAN, adres, kullanıcı adı, operatör adı/kimliği, cüzdan adresleri (BTC/ETH/TRON vb.), pasaport/TCID benzeri alanları saptayıp maskele; operatörler için günlük salt’lı takma ad (hash) üret; “ticker/symbol” gibi finansal terimleri yanlış pozitif vermeden koru. Zorunlu durumda sınıflandırma etiketi (PUBLIC/SENSITIVE_LOW/SENSITIVE_HIGH) ekle.
Tüm I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601, TZ=Europe/Istanbul

Güvenlik: HMAC/JWT doğrulama; RBAC: ops|policy|observer okur; yazım sistem

Gizlilik: Varsayılan SENSITIVE_LOW; PII bulunursa SENSITIVE_HIGH (config ile override)

İdempotency: redactKey = contentHash + profileId + mode + forDate

Observability: OpenTelemetry spans (redact.detect, redact.mask, redact.stream) + metrics

Uyum: LIVIA-14/15/16/17/18/19/20 modüllerinin tüm çıktılarına uygulanabilir “kütüphane” + “servis”

2) Girdiler (In) — Zod şemaları (örnek)
{
  "redact.request": {
    "event":"redact.request",
    "timestamp":"iso8601",
    "mode":"markdown|html|text",
    "profileId":"digest|postmortem|notes|cards|generic",
    "content":"<string>",             // büyük gövde (stream destekli)
    "options":{
      "hashOperators":true,
      "hashSalt":"rotate-me-daily",
      "classify":true,
      "maskEmail":true,
      "maskPhone":true,
      "maskWallet":true,
      "maskIBAN":true,
      "maskGovId":true,
      "preserveTickers":true,        // AVAX, SOL, BTC, AVAXUSDT vb.
      "preserveCodeBlocks":true,     // ```...```, <code>...</code>
      "preservePaths":true           // data/notes/... gibi sistem yolları
    },
    "context":{
      "scope":"global|desk|symbol",
      "symbol":"AVAXUSDT|null",
      "operatorId":"op-007|null"
    }
  },

  "redact.dictionary.update": {
    "event":"redact.dictionary.update",
    "timestamp":"iso8601",
    "allowlistTickers":["AVAX","SOL","BTC","AVAXUSDT","SOLUSDT"],
    "allowlistDomains":["example.com","mycorp.local"],
    "denylistUsernames":["admin","root"]
  }
}

3) Çıktılar (Out)
{
  "redact.ready": {
    "event":"redact.ready",
    "timestamp":"iso8601",
    "profileId":"digest|postmortem|notes|cards|generic",
    "mode":"markdown|html|text",
    "classification":"PUBLIC|SENSITIVE_LOW|SENSITIVE_HIGH",
    "maskedContent":"<string>",
    "stats":{
      "entitiesFound":{"email":3,"phone":2,"iban":1,"wallet":1,"govId":0,"name":2},
      "falsePositiveAvoided": {"ticker":5,"codeBlock":2,"path":3},
      "bytesIn":6200,"bytesOut":6150
    },
    "hash":"sha256:..."
  },

  "redact.alert": {
    "event":"redact.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"missing_data|write_failed|idem_duplicate|parser_error",
    "context":{"profileId":"notes"}
  },

  "redact.metrics": {
    "event":"redact.metrics",
    "timestamp":"iso8601",
    "processed": 4,
    "avgDetectMs": 5.2,
    "avgMaskMs": 3.1,
    "streamedPct": 0.75,
    "fpRate": 0.02,
    "fnRate": 0.01
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  profiles: {
    digest:     { preserveCodeBlocks:true, preservePaths:true, preserveTickers:true, aggressive:false },
    postmortem: { preserveCodeBlocks:true, preservePaths:true, preserveTickers:true, aggressive:true },
    notes:      { preserveCodeBlocks:true, preservePaths:true, preserveTickers:true, aggressive:false },
    cards:      { preserveCodeBlocks:false, preservePaths:false, preserveTickers:true, aggressive:false },
    generic:    { preserveCodeBlocks:true, preservePaths:true, preserveTickers:true, aggressive:false }
  },

  patterns: {
    email: "\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b",
    phoneIntl: "\\+\\d{1,3}[\\s-]?\\d{2,4}[\\s-]?\\d{3}[\\s-]?\\d{2,4}",
    iban: "\\bTR\\d{24}\\b|\\b[A-Z]{2}\\d{2}[A-Z0-9]{1,30}\\b",
    govId: "\\b\\d{11}\\b",                       // yerel TC benzeri numaralar için örnek
    btc: "\\b[13][a-km-zA-HJ-NP-Z1-9]{25,34}\\b",
    eth: "\\b0x[a-fA-F0-9]{40}\\b",
    tron: "\\bT[1-9A-HJ-NP-Za-km-z]{33}\\b",
    nameLike: "(?i)(ad[ıi]|soyad[ıi]|isim|name)\\s*[:=]\\s*([\\p{L}\\s'-]{2,})"
  },

  allowlists: {
    tickers: ["AVAX","SOL","BTC","AVAXUSDT","SOLUSDT","ETHUSDT"],
    systemPathsPrefix: ["data/notes/","data/digest/","data/postmortem/"],
    codeFence: ["```","~~~"]
  },

  masking: {
    email: "local***@***.domain",
    phone: "+** *** *** ** **",
    iban: "****-****-****-****",
    wallet: "0x***masked***",
    govId: "***-***-***",
    name: "user:#{hash}",
    operatorHashSalt: "rotate-me-daily",
    hashAlgo: "sha256"
  },

  classification: {
    defaultLevel: "SENSITIVE_LOW",
    elevateIfFound: ["email","phone","iban","wallet","govId","name"],
    downgradeIfOnly: ["ticker","path","codeBlock"]
  },

  streaming: {
    chunkBytes: 16384,        // 16KB parça
    overlapBytes: 128,        // sınır kaçaklarını yakalamak için
    maxBytes: 2_000_000       // >2MB → appendix uyarısı
  },

  idempotencyTtlSec: 86400
}

5) Redaksiyon Kuralları

Deterministik takma ad: hash(operatorId + salt@YYYY-MM-DD) → op#abcd12

Masking precedence: govId > wallet > iban > email > phone > nameLike

Yanlış pozitif önleme:

Ticker/Pair (AVAX, SOL, AVAXUSDT) → asla maskelenmez (allowlist)

Code Blocks (…, <code>…</code>) → içeride sadece cüzdan/IBAN maskelenir, kod stringleri korunur

Sistem yolları data/... → korunur

HTML/Markdown farkındalığı: HTML için DOM-parsing → text düğümlerinde maskeleme; MD için tokenizer (fenced/code/inline link ayrımı)

Sınıflandırma: elevateIfFound yakalanırsa SENSITIVE_HIGH; yalnız downgradeIfOnly varsa PUBLIC/SENSITIVE_LOW

6) Pipeline (Kompozisyon)

Seçim: profile → kurallar + allowlist birleşimi

Parse: mode’a göre (markdown/html/text) uygun parser/tokenizer

Stream İşleme: chunkBytes ve overlapBytes ile kayan pencere; her parçada detect→mask

Detect: Regex + hafif heuristik; uç durumlar için two-pass (detect, validate)

Mask: Kurallara göre; operatör kimliği varsa op#hash üret

Assemble: Parçaları birleştir; sınıflandırma seviyesini hesapla; istatistikleri çıkar

Idempotency: redactKey ile ikinci yazımı engelle

Emit: redact.ready + redact.metrics; hata varsa redact.alert

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → redact.request → PARSE

PARSE → başarılı → STREAM | hata → ALERT

STREAM → (detect→mask) döngüsü → ASSEMBLE

ASSEMBLE → redact.ready + metrics → IDLE

ALERT → redact.alert → IDLE

8) Kenar Durumlar

Büyük içerik (>2MB): appendix uyarısı; chunk büyütüp tek geçişte bitir

Çok-yoğun PII: performans artışı için aggressive=true profili (daha sıkı regex)

Çapraz gün (salt rotasyonu): eski salt ile üretilmiş takma adlar yeniden yazılmaz; sadece yeni maskeler

Kod bloklarında ad/soyad anahtar kelimesi: code fence içindeyse maskeleme yapma

IBAN formatlı ama allowlist domain bağlamında e-mail: ikinci geçişte doğrula, yanlış pozitifleri geri al

9) Telemetri
{
  "redact.metrics": {
    "event":"redact.metrics",
    "timestamp":"iso8601",
    "processed": 4,
    "avgDetectMs": 5.2,
    "avgMaskMs": 3.1,
    "streamedPct": 0.75,
    "fpRate": 0.02,
    "fnRate": 0.01,
    "byProfile":{"digest":1,"postmortem":1,"notes":1,"cards":1},
    "entities":{"email":3,"phone":2,"iban":1,"wallet":1}
  }
}

10) Dosya Yapısı (öneri)
services/livia/piiGuardAndRedactor.ts          # servis girişi (FSM + orkestrasyon)
services/livia/lib/redact/detectors.ts         # regex + heuristik doğrulayıcılar
services/livia/lib/redact/maskers.ts           # maskeleme fonksiyonları
services/livia/lib/redact/streamer.ts          # chunk/overlap stream işleyici
services/livia/lib/redact/mdTokenizer.ts       # Markdown tokenizasyonu
services/livia/lib/redact/htmlParser.ts        # HTML DOM parser
services/livia/lib/redact/classifier.ts        # sınıflandırma mantığı
services/livia/state/redactStore.ts            # idem index + sözlük cache
services/livia/__tests__/piiGuardAndRedactor.test.ts
cfg/livia.redact.yaml                          # profiles/patterns/masking/streaming

11) Test İskeleti (Jest/Vitest)

Email/Phone/IBAN/Wallet: doğru maskelenir; stats sayımları tutar

Ticker koruması: AVAX/SOL/AVAXUSDT maskelenmez

Code fence: sadece wallet/IBAN maskelenir, kod metni korunur

HTML parse: <a href="mailto:..."> iç metin + attribute güvenli maskelenir

Streaming: sınır taşmalarında overlap yakalar (email iki parçaya bölünmüşse bile)

Idempotency: aynı içerik ikinci kez işlenmez

Sınıflandırma: PII varsa HIGH, yalnız ticker/path varsa LOW/PUBLIC

RBAC/Auth: imza hatası → redact.alert(error,"auth_failed")

Performans: p95 detect+mask < 15 ms / 64KB parça

12) Örnek Akış (kısa)

LIVIA-16 notes.daily.ready → redact.request(profile=notes, mode=markdown, content=Daily.md)

PII saptandı: 2 email, 1 telefon → maskelendi, sınıflandırma SENSITIVE_HIGH → redact.ready

LIVIA-14 digest ve LIVIA-15 postmortem üretimleri, redacted içeriklerini dosyaya yazar

13) SLO

p95 detect+mask < 15 ms / 64KB

Yanlış pozitif oranı ≤ %2, yanlış negatif ≤ %1

Streaming çıkış bütünlüğü ≥ %99.9 (byte sayımı/sha256 doğrulaması)
_____________________________________________________________________________________________
LIVIA-22 · opsDigestDistributor.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
LIVIA’dan üretilen digest, postmortem, notes daily, card ve kritik uyarı çıktılarının; RBAC ve scope (global/desk/symbol) kurallarına uyarak doğru kanallara (UI Inbox, Webhook, Slack/Discord/Telegram/Teams, e-posta) zamanında, tekil ve ölçülebilir şekilde dağıtılması. İçerikler dağıtımdan önce PII redaksiyonundan (LIVIA-21) geçer; kanal başına rate-limit, quiet hours, retry/backoff, DLQ (dead-letter queue) uygulanır. Tüm I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics standartlı.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601, TZ=Europe/Istanbul; günlük pencereler yerel saate göre

Güvenlik: HMAC/JWT doğrulama; RBAC: ops|policy|observer (kanal/audience tabanlı)

Gizlilik: PII yok; tüm metinler önce LIVIA-21 ile redakte edilir (profil: digest|postmortem|notes|cards)

İdempotency: deliveryKey = sha256(contentCanonical + audience + channel + forDate)

Observability: OpenTelemetry (spans: dist.route, dist.render, dist.send, dist.ack) + metrics

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "digest.daily.ready": {
    "event":"digest.daily.ready",
    "timestamp":"iso8601",
    "forDate":"2025-09-13",
    "format":"md|html",
    "path":"data/digest/2025-09-13/digest.md",
    "summary":"SLO ok; Guard 17(1 halt); PnL $1.61k; 1 incident (37dk).",
    "sections":["SLO","Guard","Bounds","Anomali","Onaylar","Diyalog","PnL","Olaylar","Notlar"],
    "hash":"sha256:..."
  },

  "postmortem.ready": {
    "event":"postmortem.ready",
    "timestamp":"iso8601",
    "incidentId":"inc-2025-09-13-1",
    "format":"md|html",
    "path":"data/postmortem/2025-09-13/inc-2025-09-13-1.md",
    "summary":"Slip spike — 37dk; root latency+slip; impact -$1.2k.",
    "hash":"sha256:..."
  },

  "notes.daily.ready": {
    "event":"notes.daily.ready",
    "timestamp":"iso8601",
    "forDate":"2025-09-13",
    "path":"data/notes/2025-09-13/Daily.md",
    "summary":"decision:6, action:3, approval:2, incident:1, info:2",
    "hash":"sha256:..."
  },

  "recovery.ready": {
    "event":"recovery.ready",
    "timestamp":"iso8601",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "recoveryIndex":0.76,
    "suggestedStage":"ramp2",
    "minHoldMin":30
  },

  "cooldown.plan.activated": {
    "event":"cooldown.plan.activated",
    "timestamp":"iso8601",
    "cooldownKey":"...",
    "effectiveFrom":"iso8601",
    "effectiveUntil":"iso8601"
  },

  "dist.request": {
    "event":"dist.request",
    "timestamp":"iso8601",
    "contentRef":{"type":"digest|postmortem|notes|card|generic","path":"...","format":"md|html|text"},
    "audience":["ops","policy","observer"],
    "channels":["ui","slack","webhook"],
    "priority":"low|normal|high",
    "dryRun":false
  }
}

3) Çıktılar (Out)
{
  "dist.queued": {
    "event":"dist.queued",
    "timestamp":"iso8601",
    "deliveryKey":"sha256:...",
    "contentType":"digest|postmortem|notes|card|generic",
    "audience":["ops","policy"],
    "channels":["ui","slack"],
    "priority":"high"
  },

  "dist.sent": {
    "event":"dist.sent",
    "timestamp":"iso8601",
    "deliveryKey":"sha256:...",
    "channel":"slack|webhook|ui|email|discord|teams|telegram",
    "messageId":"ch-specific-id",
    "attempt":1
  },

  "dist.acked": {
    "event":"dist.acked",
    "timestamp":"iso8601",
    "deliveryKey":"sha256:...",
    "channel":"slack",
    "latencyMs":420
  },

  "dist.failed": {
    "event":"dist.failed",
    "timestamp":"iso8601",
    "deliveryKey":"sha256:...",
    "channel":"email",
    "error":"rate_limited|auth_failed|payload_too_large|network",
    "willRetryInSec": 60
  },

  "dist.dlq": {
    "event":"dist.dlq",
    "timestamp":"iso8601",
    "deliveryKey":"sha256:...",
    "reason":"permanent_failure|max_retries_exceeded",
    "deadLetterPath":"state/dlq/2025-09-13/sha256....json"
  },

  "dist.metrics": {
    "event":"dist.metrics",
    "timestamp":"iso8601",
    "queued":3,"sent":3,"acked":2,"failed":1,"retried":1,"dlq":0,
    "p95SendMs": 320,
    "rateLimited":0,
    "byChannel":{"ui":1,"slack":1,"webhook":1}
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  routing: {
    digest:     { audience:["ops","policy","observer"], channels:["ui","slack","email"], schedule:"18:15", priority:"high" },
    postmortem: { audience:["ops","policy"],            channels:["ui","slack","email","webhook"], priority:"high" },
    notes:      { audience:["ops","policy"],            channels:["ui"], schedule:"18:07" },
    signals:    { audience:["ops","policy"],            channels:["ui","slack","webhook"], priority:"high" }
  },

  rbac: {
    audienceToRole: { ops:["ops"], policy:["policy"], observer:["observer"] },
    scopeFilters: { // symbol/desk bazlı filtreleme
      policy: { include:["global","desk","symbol"] },
      observer: { include:["global"], excludeSymbols:["*"] }
    }
  },

  channels: {
    ui:      { enabled:true,  ratePerMin: 60,  quietHours:[/* none */] },
    slack:   { enabled:true,  ratePerMin: 20,  quietHours:["23:00-07:00"],  formatter:"slackBlocks" },
    webhook: { enabled:true,  ratePerMin: 120, quietHours:[],               signWithHmac:true },
    email:   { enabled:true,  ratePerMin: 10,  quietHours:["22:00-08:00"],  maxBytes: 800_000 },
    discord: { enabled:false, ratePerMin: 15,  quietHours:[] },
    teams:   { enabled:false, ratePerMin: 15,  quietHours:[] },
    telegram:{ enabled:false, ratePerMin: 30,  quietHours:[] }
  },

  redaction: {
    enabled:true,
    profileMap: { digest:"digest", postmortem:"postmortem", notes:"notes", card:"cards", generic:"generic" }
  },

  retry: {
    maxAttempts: 5,
    backoff: { initialMs: 1000, factor: 2.0, jitterPct: 0.2 }
  },

  sizePolicy: {
    maxCardChars: 280,
    chunkHtmlAtBytes: 500_000, // e-posta ve webhook için
    appendDownloadLinkIfChunked: true
  },

  schedule: { sweepEvery:"30s" },

  idempotencyTtlSec: 86400
}

5) Rendering & Kanal Sözleşmeleri

Canonicalize: Markdown → (i) kısa card text (≤280 char), (ii) tam MD/HTML gövde, (iii) attachments (path).

Slack/Discord/Teams: Markdown → kanal blokları; başlık, madde işaretleri, “daha fazla” linki (path).

Webhook: JSON payload; HMAC imzalı; contentType, summary, path, hash.

E-posta: HTML + inline CSS; büyük gövde → parça/parça veya Appendix linki.

UI Inbox: card + (opsiyonel) ayrıntıya git linki.

Tüm metinler LIVIA-21 redaksiyonundan geçirildikten sonra gönderilir.

6) Pipeline (Kompozisyon)

Ingest: digest.ready/postmortem.ready/notes.daily.ready/.../dist.request → QUEUE

Authorize & Scope: RBAC + scope filtreleri (audience×scope×symbol)

Redact: redact.request(profile=...) çağır; maskedContent döner

Render: kanal-özel formatter (slackBlocks/html/email/webhook payload)

Rate-limit & Quiet Hours: uygun zaman/limite göre DEFER/sırala

Send: kanal adapter’i ile ilet; attempt say ve latency ölç

Ack/Retry: 2xx/ACK → dist.acked; hata → dist.failed + backoff; limit aşımı → schedule

DLQ: max deneme aşılırsa dist.dlq; manuel replay desteklenir

Emit Metrics: her döngüde dist.metrics güncelle

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (ready/request) → QUEUE

QUEUE → AUTHORIZE → pass → REDACT | fail → DROP (+alert)

REDACT → RENDER → SCHEDULE_OR_SEND

SCHEDULE_OR_SEND → (rate/quiet) DEFER | aksi SEND

SEND → success ACK | fail RETRY

RETRY → (attempt<max) SCHEDULE_OR_SEND | else DLQ

DEFER → schedule hit → SEND

Terminal: ACK/DLQ; her adımda metrics/alerts

8) Kenar Durumlar

Büyük içerik: chunkHtmlAtBytes üstü → parçalara böl + Appendix linki

Aynı gün aynı kitle/kanal: deliveryKey ile tekil gönderim (idempotency)

Quiet hours: yüksek öncelik (priority=high) ise sadece ops kanalına minimal card gönder, diğerleri sabaha ertelenir

Webhook doğrulama: karşı taraf 4xx dönüyorsa permanent, 5xx retryable

Redaction failure: redact.alert geldiğinde send durur, DLQ’ye düşmeden önce bir kez daha dener (farklı chunk boyu)

RBAC daralması: observer kitlesine symbol içermez; hassas metrikleri kaldır

9) Telemetri
{
  "dist.metrics": {
    "event":"dist.metrics",
    "timestamp":"iso8601",
    "queued": 5, "sent": 5, "acked": 4, "failed": 1, "retried": 1, "dlq": 0,
    "p50SendMs": 180, "p95SendMs": 320, "rateLimited": 0,
    "byChannel": {"ui":2,"slack":2,"email":1},
    "byContent": {"digest":1,"postmortem":1,"notes":1,"signals":2}
  }
}

10) Dosya Yapısı (öneri)
services/livia/opsDigestDistributor.ts          # FSM + router + scheduler
services/livia/lib/dist/rbac.ts                 # audience/scope filtreleri
services/livia/lib/dist/formatter.ts            # md→slack/html/email/webhook
services/livia/lib/dist/adapters/slack.ts       # kanal adapter’leri
services/livia/lib/dist/adapters/webhook.ts
services/livia/lib/dist/adapters/email.ts
services/livia/lib/dist/adapters/ui.ts
services/livia/lib/dist/rateLimiter.ts          # kanal başı hız limiti
services/livia/lib/dist/quietHours.ts
services/livia/state/distStore.ts               # queue + idem index + DLQ
services/livia/__tests__/opsDigestDistributor.test.ts
cfg/livia.dist.yaml                             # routing/rbac/channels/retry/size

11) Test İskeleti (Jest/Vitest)

Digest akışı: digest.ready → RBAC pass → redaction → slack+ui gönderildi, email quiet hours’a ertelendi

Postmortem büyük gövde: e-posta için chunk + Appendix linki; slack’te card + path

Idempotency: aynı içerik/audience/kanal tekrarında ikinci gönderim yok

Rate-limit: kısa sürede 30 slack mesajı → schedule kuyruğu büyür, send p95 < 400ms

Retry/Backoff: webhook 5xx → 3 denemede başarıya ulaşır

DLQ: e-posta auth hatası (permanent) → DLQ’ye düşer, replay çalışır

Redaction zorunlu: PII bulunan içerik redakte edilmeden gönderilmeye çalışılırsa bloklanır

RBAC/Scope: observer kitlesine symbol verisi gizlenir

12) Örnek Akış (kısa)

18:10 digest.daily.ready geldi → QUEUE→REDACT(digest) → RENDER

Slack card + UI card hemen, e-posta quiet hours nedeniyle sabaha programlandı

18:12 postmortem.ready → Slack + Webhook (HMAC imzalı) → dist.acked

18:20 notes.daily.ready → yalnız UI’ya; dist.metrics güncellendi

13) SLO

p95 render+send (tek kanal) < 350 ms

duplicate rate ≈ 0 (idempotency)

DLQ oranı < %0.5 / gün

Redaction-öncesi sızıntı 0 (zorunlu redaksiyon geçidi)
______________________________________________________________________________________________
LIVIA-23 · policyUpdateOrchestrator.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Saha verileri (guard/slo/anomali/pnl/postmortem/yorgunluk/toparlanma vb.) ve operatör geri bildirimlerinden politika yaması önerileri (risk limitleri, guard eşikleri, onay eşiği, varyant izinleri, slip/spread/bid-ask kuralları, yürütme stratejileri) üretmek; onay kapısı (LIVIA-05) üzerinden akıtıp kanaryalı yayın (shadow/simulasyon → canary → full rollout) yapmak; SLO ihlalinde otomatik rollback; versiyonlama + changelog + imzalı yayın. Tüm I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601, TZ=Europe/Istanbul

Güvenlik: HMAC/JWT doğrulama; RBAC: policy yazabilir, ops|observer okuyabilir

Gizlilik: PII yok; serbest metinler LIVIA-21 redaksiyonundan geçer

İdempotency: policyKey = baseVersion + scope + symbol? + changeHash

Gözlemlenebilirlik: OpenTelemetry spans (policy.collect, policy.diff, policy.publish) + metrics

Uyumluluk: LIVIA-14/15/16/17/18/19/20/21/22 ile sinyal/dağıtım köprüleri

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "policy.update.request": {
    "event":"policy.update.request",
    "timestamp":"iso8601",
    "mode":"auto|manual",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "goal":"reduce_slip|max_fill_quality|lower_latency|stabilize_rr",
    "dryRun": true
  },

  "slo.window.report": {
    "event":"slo.window.report",
    "timestamp":"iso8601",
    "windowMin": 240,
    "sloWorst":{"answer_latency_p95":"at_risk","guard_success_rate":"ok","uptime_feed":"ok"},
    "burnPct": 6.2
  },

  "guard.activity.rollup": {
    "event":"guard.activity.rollup",
    "timestamp":"iso8601",
    "counts":{"slowdown":12,"block_aggressive":4,"halt_entry":1},
    "topSymbols":[{"symbol":"AVAXUSDT","events":7},{"symbol":"SOLUSDT","events":5}]
  },

  "anomaly.summary": {
    "event":"anomaly.summary",
    "timestamp":"iso8601",
    "windowMin":1440,
    "high":2,"medium":5,"low":7,
    "seriesTop":[{"name":"order.slip.p95","count":4},{"name":"feed.gap","count":3}]
  },

  "pnl.daily": {
    "event":"pnl.daily",
    "timestamp":"iso8601",
    "desk":"default","netUSD":1610.24,"winRate":0.56,"rrMedian":1.42
  },

  "postmortem.ready": {
    "event":"postmortem.ready",
    "timestamp":"iso8601",
    "incidentId":"inc-2025-09-13-1",
    "summary":"Slip spike — rollback v42→v41; guard window dar.",
    "path":"data/postmortem/2025-09-13/inc-2025-09-13-1.md"
  },

  "cooldown.plan.activated": {
    "event":"cooldown.plan.activated",
    "timestamp":"iso8601",
    "reasonCode":"overtrading|overconfidence|panic_mode",
    "scope":"desk","symbol":null,"effectiveUntil":"iso8601"
  },

  "recovery.ready": {
    "event":"recovery.ready",
    "timestamp":"iso8601",
    "scope":"symbol","symbol":"AVAXUSDT","recoveryIndex":0.76,"suggestedStage":"ramp2"
  }
}

3) Çıktılar (Out)
{
  "policy.patch.proposed": {
    "event":"policy.patch.proposed",
    "timestamp":"iso8601",
    "baseVersion":"v41",
    "targetVersion":"v41+1-candidate",
    "scope":"desk|symbol|global",
    "symbol":"AVAXUSDT|null",
    "impact":"low|medium|high",
    "delta": {
      "guard": { "windowMs": 1500, "slowdownThreshold": 0.7, "blockAggressiveOn": ["slip_spike"] },
      "limits": { "positionLimitFactor": 0.8, "dailyTradeCap": 3 },
      "exec": { "prefer":"twap|limit", "maxSlices":3, "slipMaxBps": 25 },
      "confirm": { "decisionThreshold": 0.62 }
    },
    "rationale":"Slip p95 anomali ve postmortem bulguları → guard window genişlet; aggressive kısıtla.",
    "riskScore": 0.34,
    "dryRun": true,
    "audit":{"producedBy":"LIVIA-23"}
  },

  "policy.diff.ready": {
    "event":"policy.diff.ready",
    "timestamp":"iso8601",
    "targetVersion":"v41+1-candidate",
    "format":"yaml|jsonpatch",
    "path":"data/policy/diffs/v41_to_v41+1.yaml",
    "summary":"guard window +300ms; aggressive kısmi blok; slipMaxBps 30→25"
  },

  "policy.approval.request": {
    "event":"policy.approval.request",
    "timestamp":"iso8601",
    "targetVersion":"v41+1-candidate",
    "impact":"low|medium|high",
    "approvers":["policy-lead","risk-lead"],
    "changeSet":["guard.windowMs:+300","exec.prefer:twap","limits.positionLimitFactor:0.8"],
    "canary": {"sharePct": 0.1, "durationMin": 30}
  },

  "policy.canary.started": {
    "event":"policy.canary.started",
    "timestamp":"iso8601",
    "targetVersion":"v41+1-candidate",
    "sharePct": 0.1,
    "durationMin": 30,
    "monitor":["guard_success_rate","answer_latency_p95","pnl.netUSD"]
  },

  "policy.canary.result": {
    "event":"policy.canary.result",
    "timestamp":"iso8601",
    "targetVersion":"v41+1-candidate",
    "metrics":{"guard_success_rate":"+3.1%","answer_latency_p95":"-8.4%","pnl.netUSD":"+2.6%"},
    "decision":"promote|rollback|extend"
  },

  "policy.version.published": {
    "event":"policy.version.published",
    "timestamp":"iso8601",
    "version":"v42",
    "changelogPath":"data/policy/changelog/v42.md",
    "hash":"sha256:..."
  },

  "policy.rollback": {
    "event":"policy.rollback",
    "timestamp":"iso8601",
    "fromVersion":"v41+1-candidate",
    "toVersion":"v41",
    "reason":"slo_breach: answer_latency_p95"
  },

  "policy.metrics": {
    "event":"policy.metrics",
    "timestamp":"iso8601",
    "proposed":1,"approved":1,"published":1,"rolledBack":0,
    "avgApprovalMin":18,"avgCanaryMin":32,
    "riskScoreP95":0.55
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  sources: {
    use: ["slo","guard","anomaly","pnl","postmortem","cooldown","recovery","fatigue","notes"]
  },

  rules: {
    // sinyal→öneri kuralları (deterministik)
    "slip.p95:high": [
      { path:"guard.windowMs", op:"inc", byMs:300, max:2500 },
      { path:"exec.slipMaxBps", op:"dec", toMin:20 }
    ],
    "guard.halt_entry>=1": [
      { path:"limits.positionLimitFactor", op:"set", to:0.7 },
      { path:"exec.prefer", op:"set", to:"limit" }
    ],
    "dialog.p95AnswerMs>1200": [
      { path:"confirm.decisionThreshold", op:"inc", by:0.05, max:0.75 }
    ],
    "postmortem:latency_guard_narrow": [
      { path:"guard.windowMs", op:"inc", byMs:200 }
    ]
  },

  impactModel: {
    weights: { guard:0.4, limits:0.25, exec:0.2, confirm:0.15 },
    highIf: ["guard.windowMs>+500","limits.positionLimitFactor<0.7","exec.prefer=halt","confirm.decisionThreshold>0.7"]
  },

  approval: {
    approvers:["policy-lead","risk-lead"],
    requireIfImpact:["medium","high"],
    gateway:"LIVIA-05"
  },

  rollout: {
    modes:["shadow","canary","full"],
    canarySharePct: 0.1,
    canaryDurationMin: 30,
    promoteIf: { "guard_success_rate":">=+2%", "answer_latency_p95":"<=-5%", "pnl.netUSD":">=0%" },
    rollbackIf: { "answer_latency_p95":">+5%", "sloWorst=breach": true }
  },

  output: {
    dir:"data/policy/{YYYY-MM-DD}",
    diffFile:"diff.yaml",
    changelogFile:"changelog.md"
  },

  redactionProfile:"generic",

  idempotencyTtlSec: 86400
}

5) Patch Formatları

YAML Diff (önerilen):

guard:
  windowMs: +300     # 1200 → 1500
  blockAggressiveOn: ["slip_spike"]
limits:
  positionLimitFactor: 0.8
exec:
  prefer: "twap"
  slipMaxBps: 25     # 30 → 25
confirm:
  decisionThreshold: 0.62


JSON Patch (opsiyonel): RFC6902 [{op:"replace", path:"/guard/windowMs", value:1500}, ...]

6) Pipeline (Kompozisyon)

Collect: SLO/guard/anomali/pnl/postmortem/recovery/fatigue/notes → normalize

Derive: Kurallara göre öneri adayları üret; aynı path değişiklikleri merge edilir

RiskScore & Impact: impactModel ile ağırlıklandır; impact=low|medium|high seç

Redact & Explain: Rationale metnini LIVIA-21 ile redakte et; kısa açıklama üret

Diff Build: YAML/JSON Patch oluştur; policy.diff.ready + dosyaya yaz

Approval: policy.approval.request → LIVIA-05 onayı (impact gereği)

Rollout: shadow (dryRun ölçüm) → canary (sharePct/duration) → sonuç → promote|extend|rollback

Publish: koşullar sağlanırsa policy.version.published + changelog; LIVIA-22 ile dağıtım kartı

Rollback: canary/full esnasında rollbackIf sağlanırsa otomatik policy.rollback

Metrics: policy.metrics güncelle; digest’e özet sinyal (LIVIA-14)

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → policy.update.request | schedule → COLLECT

COLLECT → verileri toparla → PROPOSE

PROPOSE → diff+patch oluştur → (impact→approval?) AWAIT_APPROVAL | PREPARE_ROLLOUT

AWAIT_APPROVAL → approval.granted → PREPARE_ROLLOUT | rejected → IDLE

PREPARE_ROLLOUT → shadow ölç → CANARY

CANARY → metrikler → promote → PUBLISH | extend → CANARY | rollback → ROLLBACK

PUBLISH → versiyon yaz + changelog → IDLE

ROLLBACK → eski sürüme dön → IDLE

Hata: her adımda policy.alert(level,"...") + IDLE

8) Kenar Durumlar

Çelişen delta: aynı path’te zıt değişiklik → en muhafazakârı seç + uyarı

DryRun: sadece diff.ready ve card; publish/rollout yok

Onay gecikmesi: timeout → otomatik dryRun only raporu

SLO breach canary: anında rollback + policy.rollback emit

Global vs symbol çakışması: symbol lokali üstün (override), changelog’da not düş

Gün/versiyon çakışması: policyKey ile ikinci yazımı engelle

PII metni: açıklama önce LIVIA-21’den geçer, aksi blok

9) Telemetri
{
  "policy.metrics": {
    "event":"policy.metrics",
    "timestamp":"iso8601",
    "proposed":2,"approved":1,"published":1,"rolledBack":0,
    "avgApprovalMin":18,"avgCanaryMin":32,"riskScoreP95":0.55,
    "highImpactShare":0.20
  }
}

10) Dosya Yapısı (öneri)
services/livia/policyUpdateOrchestrator.ts     # FSM + orchestrator
services/livia/lib/policy/collectors.ts        # slo/guard/anomaly/pnl/postmortem/...
services/livia/lib/policy/rules.ts             # sinyal→öneri kuralları
services/livia/lib/policy/diff.ts              # YAML/JSON Patch üretimi
services/livia/lib/policy/impact.ts            # riskScore & impact hesap
services/livia/lib/policy/rollout.ts           # shadow/canary/full akışı
services/livia/lib/policy/rollback.ts          # otomatik rollback
services/livia/lib/redact.ts                   # LIVIA-21 köprüsü
services/livia/lib/approvalBridge.ts           # LIVIA-05 onay kapısı
services/livia/state/policyStore.ts            # versiyonlar, idem index
services/livia/__tests__/policyUpdateOrchestrator.test.ts
cfg/livia.policy.yaml                          # rules/impact/rollout/approval

11) Test İskeleti (Jest/Vitest)

Slip yüksek + guard dar: window +300ms, slipMaxBps düşer; diff doğru mu?

Impact=high: approval zorunlu; reddedilirse publish olmaz

Canary promote: metrikler iyileşirse version.published

Canary rollback: SLO breach → policy.rollback

DryRun: sadece diff+card, dosya yazımı var; publish yok

Idempotency: aynı policyKey ikinci kez yazılmaz

RBAC/Auth: yazma talebi policy rolü değilse 403

Redaction: açıklama içinde PII varsa maskelenir

Changelog: başlık/özet doğru, hash üretildi

12) Örnek Akış (kısa)

18:30 policy.update.request(auto, scope=symbol:AVAXUSDT, dryRun=true)

COLLECT→PROPOSE: guard.window +300ms, exec.slipMaxBps 25, limits.factor 0.8 → policy.diff.ready

AWAIT_APPROVAL: granted → PREPARE_ROLLOUT (shadow→canary 10%/30dk)

CANARY sonucu: guard_success_rate +3%, latency_p95 -8%, PnL ≥ 0 → PUBLISH v42 + changelog → LIVIA-22 dağıttı

13) SLO

p95 collect+propose < 80 ms (önbellekli toplayıcı)

canary decision latency ≤ 60 s metrik penceresi sonunda

rollback MTTR ≤ 30 s

idempotent çakışma ≈ 0; versiyon çakışma oranı < %0.5
______________________________________________________________________________________________
LIVIA-24 · knowledgeRouterBridge.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
LIVIA ekosisteminde üretilen digest / postmortem / notes / policy / cards içeriklerini bilgi tabanına (KB) güvenli biçimde indekslemek ve sorgu olaylarını doğru kaynaklara yönlendirmek (hybrid arama: semantik + anahtar kelime + tazelik). Sorguya göre alıntılı cevap (citations) ve kısa card üret; PII’yi LIVIA-21 ile redakte et; RBAC’e göre görünürlük uygula; idempotent + audit + metrics ile çalış. Tüm I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; yerel gün penceresi 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT doğrulama; RBAC: policy|ops|observer

Gizlilik: PII redaksiyonu zorunlu (LIVIA-21); sınıflandırma etiketi (PUBLIC|SENSITIVE_LOW|SENSITIVE_HIGH) saklanır

İdempotency:

İndeks: docKey = sha256(path?+contentHash) + scope + profile

Sorgu: queryKey = sha256(query + filters + topK) + windowStartISO

Observability: OpenTelemetry (spans: kb.ingest, kb.chunk, kb.embed, kb.search, kb.rerank, kb.answer) + metrics

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "knowledge.ingest.request": {
    "event":"knowledge.ingest.request",
    "timestamp":"iso8601",
    "type":"digest|postmortem|notes|policy|card|generic",
    "format":"md|html|text",
    "path":"data/.../file.ext|null",
    "content":"<string|null>",
    "profile":"digest|postmortem|notes|cards|generic",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "tags":["SLO","Guard","PnL"],
    "sourceRef":{"eventId":"...","hash":"sha256:..."}
  },

  "digest.daily.ready": {
    "event":"digest.daily.ready",
    "timestamp":"iso8601",
    "forDate":"2025-09-13",
    "format":"md|html",
    "path":"data/digest/2025-09-13/digest.md",
    "summary":"...",
    "hash":"sha256:..."
  },

  "postmortem.ready": {
    "event":"postmortem.ready",
    "timestamp":"iso8601",
    "incidentId":"inc-2025-09-13-1",
    "format":"md|html",
    "path":"data/postmortem/2025-09-13/inc-2025-09-13-1.md",
    "summary":"...",
    "hash":"sha256:..."
  },

  "notes.daily.ready": {
    "event":"notes.daily.ready",
    "timestamp":"iso8601",
    "forDate":"2025-09-13",
    "path":"data/notes/2025-09-13/Daily.md",
    "summary":"...",
    "hash":"sha256:..."
  },

  "policy.version.published": {
    "event":"policy.version.published",
    "timestamp":"iso8601",
    "version":"v42",
    "changelogPath":"data/policy/changelog/v42.md",
    "hash":"sha256:..."
  },

  "knowledge.query.request": {
    "event":"knowledge.query.request",
    "timestamp":"iso8601",
    "query":"Slip spike neden oldu? rollback neydi?",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "audience":"ops|policy|observer",
    "filters":{"type":["postmortem","policy"],"dateFrom":"2025-09-01","dateTo":"2025-09-14","tags":["Guard"]},
    "topK":8,
    "mode":"extractive|abstractive|hybrid"
  },

  "knowledge.reindex.request": {
    "event":"knowledge.reindex.request",
    "timestamp":"iso8601",
    "types":["digest","postmortem","policy"],
    "since":"2025-09-01"
  },

  "knowledge.delete.request": {
    "event":"knowledge.delete.request",
    "timestamp":"iso8601",
    "docId":"kb:postmortem:inc-2025-09-13-1"
  }
}

3) Çıktılar (Out)
{
  "knowledge.ingest.ready": {
    "event":"knowledge.ingest.ready",
    "timestamp":"iso8601",
    "docId":"kb:postmortem:inc-2025-09-13-1",
    "type":"postmortem",
    "chunks": 14,
    "bytes": 16800,
    "hash":"sha256:...",
    "classification":"SENSITIVE_LOW"
  },

  "knowledge.indexed": {
    "event":"knowledge.indexed",
    "timestamp":"iso8601",
    "index":"kb_default",
    "docId":"kb:postmortem:inc-2025-09-13-1",
    "vectors": 14,
    "dim": 768,
    "upserted": true
  },

  "knowledge.deleted": {
    "event":"knowledge.deleted",
    "timestamp":"iso8601",
    "docId":"kb:postmortem:inc-2025-09-13-1"
  },

  "knowledge.answer.ready": {
    "event":"knowledge.answer.ready",
    "timestamp":"iso8601",
    "query":"Slip spike neden oldu? rollback neydi?",
    "replies":[
      {
        "mode":"extractive",
        "text":"İlgili incident’ta kök neden latency+slip; çözüm rollback v42→v41.",
        "score":0.84,
        "citations":[
          {"docId":"kb:postmortem:inc-2025-09-13-1","path":"data/postmortem/...md","section":"RootCause","lines":"12-22","score":0.88},
          {"docId":"kb:digest:2025-09-13","path":"data/digest/...md","section":"Olaylar","lines":"85-96","score":0.79}
        ]
      }
    ],
    "usedHybrid": true,
    "filtersApplied":{"type":["postmortem","policy"],"symbol":"AVAXUSDT"}
  },

  "knowledge.card": {
    "event":"knowledge.card",
    "timestamp":"iso8601",
    "title":"Yanıt hazır — Slip spike/rollback",
    "body":"Kök neden: latency+slip • Çözüm: rollback v42→v41 • Kaynak: postmortem+digest",
    "severity":"info",
    "ttlSec":600
  },

  "knowledge.alert": {
    "event":"knowledge.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|parser_error|embed_failed|rbac_denied|no_results",
    "context":{"docId":"kb:...","queryKey":"sha256:..."}
  },

  "knowledge.metrics": {
    "event":"knowledge.metrics",
    "timestamp":"iso8601",
    "ingested":3,"indexed":3,"deleted":0,
    "queries":5,"answers":4,"noResults":1,
    "p95IngestMs":72,"p95QueryMs":95,
    "hybridShare":0.92,"recencyBoostApplied":0.66,
    "zeroPiiLeak":true
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  storage: { baseDir:"data/kb" },

  redaction: {
    required:true,
    profileMap:{ digest:"digest", postmortem:"postmortem", notes:"notes", policy:"generic", card:"cards", generic:"generic" }
  },

  chunking: {
    strategy:"markdownAware",
    targetTokens: 800,   // 512–1024 aralığı
    overlapTokens: 64,
    keepSections:true,   // başlık/altbaşlık korunur
    dropFooters:true
  },

  embeddings: {
    provider:"pluggable", // adapter: local|service
    model:"e5-small|text-embedding-3-small",
    dim: 384|512|768,
    batchSize: 16,
    normalize:true
  },

  index: {
    vector:"pluggable",  // adapter: pgvector|qdrant|milvus|elastic-knn|vespa
    lexical:"bm25",      // opsiyonel ters indeks
    namespace:"kb_default",
    upsertIfSameHash:false,     // docKey eşleşirse atla
    dedupeNearDup:true,         // simhash/minhash ile
    maxDocsPerDay: 5000
  },

  search: {
    hybrid:true,
    topK: 8,
    bm25K: 50,
    mmrLambda: 0.5,          // çeşitlilik
    recencyBoostHalfLifeDays: 7,
    scopeFilter:{enabled:true},
    symbolFilter:{enabled:true},
    reranker:{enabled:true, provider:"cross-encoder|none"}
  },

  rbac: {
    policy: { canSee:["policy","postmortem","digest","notes","card"] },
    ops:    { canSee:["postmortem","digest","notes","card","policy"] },
    observer:{ canSee:["digest","card"], hideFields:["symbol","incidentId","pnl"] }
  },

  schedule: {
    reindexDailyAt:"03:00",
    optimizeWeeklyAt:"Sun 04:00"
  },

  idempotencyTtlSec: 86400
}

5) Belge Şeması (KB)
type KBType = "digest"|"postmortem"|"notes"|"policy"|"card"|"generic";

interface KBDocument {
  docId: string;            // "kb:{type}:{slug}"
  type: KBType;
  title: string;
  summary?: string;
  forDate?: string;         // YYYY-MM-DD
  incidentId?: string;
  scope: "global"|"desk"|"symbol";
  symbol: string|null;
  tags: string[];
  classification: "PUBLIC"|"SENSITIVE_LOW"|"SENSITIVE_HIGH";
  path?: string;            // kaynak dosya yolu
  hash: string;             // sha256 content
  createdAt: string;        // ISO
  sections?: Array<{ id:string; title:string; fromLine:number; toLine:number }>;
}

6) Pipeline — İndeksleme

Kaynak Seçimi: knowledge.ingest.request veya *.ready olayları → içerik path veya content.

Redaksiyon: LIVIA-21’e redact.request(profile=...) → maskedContent, classification.

Chunking: Markdown/HTML farkındalıklı; başlıklarla parça böl; overlapTokens uygula.

Embedding: Toplu (batch) vektör üret; normalize et; hatada embed_failed.

Dedup: docKey ve simhash ile aynı/benzer dokümanı atla veya merge et.

Upsert: Vektör ve metadata upsert; lexical indeks (BM25) güncelle.

Emit: knowledge.ingest.ready + knowledge.indexed + knowledge.metrics.

7) Pipeline — Sorgu/Route & Cevap

RBAC/Filtre: audience, scope, symbol, date aralığı, type → yetki ve filtre kontrolü.

Embedding: Sorgu vektörü → semantik arama (topK) + BM25 (bm25K).

Hybrid Fusion: Skorları z-normalize et; MMR ile çeşitlilik; recency boost ekle.

Rerank (opsiyonel): Cross-encoder ile ilk N sonucu yeniden sırala.

Cevap Üretimi:

Extractive: En iyi parçalardan alıntı + kısa özet (markdown)

Abstractive/Hybrid: Parça özetlerini birleştir, 280 karakterlik card da üret

Her zaman citations: {docId, path, section, lines, score}

Emit: knowledge.answer.ready + knowledge.card + knowledge.metrics.

8) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (*.ready | knowledge.ingest.request) → INGEST

INGEST → redact→chunk→embed→upsert → EMIT_INGEST → IDLE

IDLE → knowledge.query.request → RETRIEVE

RETRIEVE → hybrid+rerenk → ANSWER → EMIT_ANSWER → IDLE

IDLE → knowledge.reindex.request → REINDEX → (loop) → IDLE

IDLE → knowledge.delete.request → DELETE → IDLE

Hata → knowledge.alert + IDLE

9) Kenar Durumlar

PII zorunlu: Redaksiyon başarısız → indeksleme bloklanır (alert).

Büyük dosya (>2MB): parça-parça stream; bytes sayaçları ve Appendix linkleri korunur.

Yakın duplikasyon: simhash distance <= 3 ise merge (daha yeni olan kazanır).

Sıfır sonuç: knowledge.answer.ready üretme; knowledge.alert("no_results") + suggestion (filtre düşür, tarih aralığı genişlet).

RBAC/observer: hassas alanlar (symbol, incidentId, pnl) gizlenir; citation yine görünür ama maske’li başlıkla.

Bozuk Markdown/HTML: parser fallback text moduna geçer; parser_error log.

Index provider down: geçici DLQ dizinine yaz; provider gelince replay.

10) Telemetri (OpenTelemetry + event)
{
  "knowledge.metrics": {
    "event":"knowledge.metrics",
    "timestamp":"iso8601",
    "ingested":3,"indexed":3,"deleted":0,
    "queries":5,"answers":4,"noResults":1,
    "p50IngestMs":41,"p95IngestMs":72,"p95QueryMs":95,
    "hybridShare":0.92,"recencyBoostApplied":0.66,
    "zeroPiiLeak":true,
    "topQueries":["rollback nedir","guard window kaç ms"],
    "byType":{"digest":1,"postmortem":1,"notes":1}
  }
}

11) Dosya Yapısı (öneri)
services/livia/knowledgeRouterBridge.ts        # FSM + orchestrator
services/livia/lib/kb/chunker.ts               # markdown/html aware chunking
services/livia/lib/kb/embeddings.ts            # provider adapter
services/livia/lib/kb/vectorIndex.ts           # vector upsert/query adapter
services/livia/lib/kb/lexicalIndex.ts          # BM25 adapter (opsiyonel)
services/livia/lib/kb/hybridSearch.ts          # fusion + MMR + recency boost
services/livia/lib/kb/reranker.ts              # cross-encoder (opsiyonel)
services/livia/lib/kb/normalizers.ts           # clean/normalize utils
services/livia/lib/kb/simhash.ts               # near-dup detection
services/livia/lib/access.ts                   # RBAC filtering for KB
services/livia/state/knowledgeStore.ts         # idem index + stats
services/livia/__tests__/knowledgeRouterBridge.test.ts
cfg/livia.knowledge.yaml                       # chunk/embeddings/index/search/rbac

12) Test İskeleti (Jest/Vitest)

İndeksleme: digest.ready/postmortem.ready → redaksiyon → chunk→embed→upsert → knowledge.indexed

Dedup: aynı digest ikinci kez → upsert atlandı (docKey)

Near-dup: ufak farklılıkta doküman → merge edildi

Sorgu-Hybrid: BM25+vektör birleşimi; recency boost etki eder

Rerank: cross-encoder açıkken sonuç sırası değişir; skor iyileşir

Citations: answer.ready tüm alıntıları içerir, satır aralığı & bölüm dolu

RBAC/observer: hassas alanlar gizlenir; cevap görünür

PII zorunluluğu: redaksiyon kapalıysa indeks başarısız (alert)

Idempotency: aynı queryKey ile arka arkaya istek → cache’den yanıt (≤50 ms)

Provider hata: vectorIndex down → DLQ’ye yazar; replay sonrası indexed

13) Örnek Akış (kısa)

18:10 digest.daily.ready → INGEST (redact→chunk→embed→upsert)

18:12 postmortem.ready → INGEST

18:30 knowledge.query.request(type=postmortem, symbol=AVAXUSDT) → RETRIEVE → knowledge.answer.ready + card

Gece 03:00 → REINDEX/optimize planlı görevleri

14) SLO

p95 ingest < 80 ms / 10K token içerik

p95 query < 120 ms (hybrid+rerank dâhil)

zeroPiiLeak = true (redaksiyon kapısı zorunlu)

duplicate rate ≈ 0; simhash near-dup false-negative < %1

answer coverage (noResults oranı) < %10
_____________________________________________________________________________________________
LIVIA-25 · riskScenarioSimulator.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Politika/guard/limit/exec/confirmation parametreleri için “what-if” senaryo simülasyonu yaparak beklenen etkiyi (SLO, Guard, PnL, slip/fill kalitesi, onay oranı, risk) hızlı ve güvenli biçimde tahmin etmek. Çıktı; pareto frontier (iyileşme vs. yan etki), önerilen top senaryolar, kısa card, ve rapor dosyasıdır. LIVIA-23 (policyUpdateOrchestrator) için girdi üretir; LIVIA-22 ile dağıtılır; rapor LIVIA-24 ile KB’ye indekslenir. I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601, TZ=Europe/Istanbul (gün penceresi 00:00–23:59:59)

Güvenlik: HMAC/JWT doğrulama; RBAC: policy yazabilir, ops|observer okuyabilir

Gizlilik: PII yok; serbest metinler LIVIA-21 ile redakte edilir (profile=generic)

İdempotency: simKey = baseVersion + scope + symbol? + gridHash + dataWindow + seed

Observability: OpenTelemetry (sim.collect, sim.calibrate, sim.run, sim.pareto, sim.report) + metrics

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "scenario.request": {
    "event":"scenario.request",
    "timestamp":"iso8601",
    "mode":"auto|manual",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "baseVersion":"v41",
    "dataWindowMin": 1440,              // geçmiş veri penceresi
    "objectives": ["reduce_slip","keep_latency","pnl_nonneg"],
    "constraints": {
      "sloMax":{"answer_latency_p95":"+0%","guard_success_rate":"-0.5%"},
      "pnlMinUSD": 0,
      "rrMedianMin": 1.2
    },
    "grid": {                           // parametre ızgarası (kombinasyon simüle edilir)
      "guard.windowMs":[1200,1500,1800],
      "exec.slipMaxBps":[30,25,20],
      "limits.positionLimitFactor":[0.8,0.7],
      "confirm.decisionThreshold":[0.58,0.62],
      "exec.prefer":["twap","limit"]
    },
    "maxCombos": 120,                   // üst limit; fazla ise downsample
    "seed": 42,
    "dryRun": false
  },

  "policy.patch.proposed": {
    "event":"policy.patch.proposed",
    "timestamp":"iso8601",
    "baseVersion":"v41",
    "scope":"symbol",
    "symbol":"AVAXUSDT",
    "delta": {
      "guard":{"windowMs":1500},
      "exec": {"slipMaxBps":25,"prefer":"twap"},
      "limits":{"positionLimitFactor":0.8},
      "confirm":{"decisionThreshold":0.62}
    },
    "riskScore":0.34
  },

  "slo.window.report": {
    "event":"slo.window.report",
    "timestamp":"iso8601",
    "windowMin": 240,
    "sloWorst":{"answer_latency_p95":"at_risk","guard_success_rate":"ok","uptime_feed":"ok"},
    "burnPct": 6.2
  },

  "pnl.history.ref": {
    "event":"pnl.history.ref",
    "timestamp":"iso8601",
    "path":"data/pnl/2025-09-*.parquet",
    "stats":{"netUSD":16102.4,"rrMedian":1.36,"trades":842}
  },

  "slip.fill.sample": {
    "event":"slip.fill.sample",
    "timestamp":"iso8601",
    "symbol":"AVAXUSDT|null",
    "size": 5000,
    "features":["spread_bps","rsi","vol","lat_ms","exec","variant"],
    "schemaVersion":"v2"
  }
}


Not: scenario.request yoksa policy.patch.proposed tetikleyici olarak tek-senaryo simüle edilir.

3) Çıktılar (Out)
{
  "scenario.sim.ready": {
    "event":"scenario.sim.ready",
    "timestamp":"iso8601",
    "simKey":"sha256:...",
    "scope":"symbol",
    "symbol":"AVAXUSDT",
    "baseVersion":"v41",
    "combosEvaluated": 72,
    "paretoCount": 6,
    "top": [
      {
        "id":"S-014",
        "delta":{"guard.windowMs":1500,"exec.slipMaxBps":25,"limits.positionLimitFactor":0.8,"confirm.decisionThreshold":0.62,"exec.prefer":"twap"},
        "expected":{"slip_p95":"-12.4%","answer_latency_p95":"-4.1%","guard_success_rate":"+1.2%","pnl.netUSD":"+1.8%","rrMedian":"+0.06"},
        "risk":{"overfit":0.12,"dataCoverage":0.91},
        "meetsConstraints":true,
        "score":0.83
      }
    ],
    "reportPath":"data/sim/2025-09-13/AVAXUSDT/v41_gridA/report.md",
    "hash":"sha256:..."
  },

  "scenario.top.pareto": {
    "event":"scenario.top.pareto",
    "timestamp":"iso8601",
    "items":[{"id":"S-014","score":0.83},{"id":"S-027","score":0.81},{"id":"S-031","score":0.79}]
  },

  "scenario.card": {
    "event":"scenario.card",
    "timestamp":"iso8601",
    "title":"Senaryo Sonuçları — AVAXUSDT",
    "body":"6 pareto aday: en iyi S-014 → slip −12%, latency −4%, PnL +1.8%, constraints OK.",
    "severity":"info",
    "ttlSec":600
  },

  "scenario.alert": {
    "event":"scenario.alert",
    "timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"missing_data|idem_duplicate|timeout|budget_exceeded|invalid_grid",
    "context":{"scope":"symbol","symbol":"AVAXUSDT"}
  },

  "scenario.metrics": {
    "event":"scenario.metrics",
    "timestamp":"iso8601",
    "combos":72,"pareto":6,"avgSimMs":3.8,"p95SimMs":9.6,
    "downsampled":true,"coverage":0.91,
    "violations":{"slo":0,"pnlMin":2},
    "dominancePruned":18
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  data: {
    historyWindowMin: 1440,
    minCoverage: 0.75,               // yeterli veri kapsaması
    bucketBy: ["symbol","variant","volRegime"]
  },

  models: {
    // hafif ve hızlı: reweighting + bootstrap + elastisite
    slipElasticity: { perBps: -0.015 },            // slipMaxBps ↓ 5 → slip_p95 ≈ −7.5% (ör.)
    latencyVsWindowMs: { per100ms: -0.8 },         // window artışı p95 latency etkisi %
    guardSuccessVsBlockAgg: { blockAggressive: +1.0 },
    pnlEffect: { rrWeight: 0.6, fillQualWeight: 0.4 },
    confirmationToAccept: { perThresholdPoint: -0.10 } // 0.58→0.62 ile acceptRate −4p
  },

  simulation: {
    maxCombos: 200,
    maxMs: 250,                     // toplam süre bütçesi
    seed: 42,
    bootstrapIters: 2000,           // küçük, hızlı MC
    downsampleStrategy: "latinHypercube|random"
  },

  objectives: {
    weights: { slip:0.35, latency:0.2, guardSucc:0.1, pnl:0.25, rr:0.1 }, // skor bileşimi
    maximize: ["guardSucc","pnl","rr"], minimize: ["slip","latency"]
  },

  constraints: {
    sloMax: { "answer_latency_p95":"+0%", "guard_success_rate":"-0.5%" },
    pnlMinUSD: 0,
    rrMedianMin: 1.2
  },

  dominance: {
    enable:true,
    epsilonPct: 0.5                  // %0.5 farklar eşdeğer kabul
  },

  output: {
    dir:"data/sim/{YYYY-MM-DD}/{scope}/{symbolOrAll}",
    reportFile:"report.md",
    html:{ embedMiniCSS:true, chartsInlineSvg:true }
  },

  redactionProfile:"generic",

  idempotencyTtlSec: 86400
}

5) Skorlama & Modelleme (özet)

Kalıbrasyon: Geçmiş pencere için ground truth metrikleri (slip_p95, latency_p95, guard_success, pnl.netUSD, rrMedian) hesapla.

Karşı-olgusal (counterfactual) yaklaşım:

Reweighting: w = f(delta.exec, delta.windowMs, delta.slipMaxBps, ... ) ile örnek ağırlıkla.

Bootstrap: Iters × yeniden örnekleme → güven aralığı.

Elastisite kuralları: konfigteki elastisiteleri parametre değişimlerine uygula.

Kısıt kontrolü: constraints ehr senaryo için ex-ante (model çıktısı) ve ex-post (bootstrap quantile)

Skor: normalize edilmiş hedefler ve ağırlıklar ile score ∈ [0,1] → pareto süzgeci.

6) Pipeline (Kompozisyon)

Collect: pnl.history.ref, slip.fill.sample, slo.window.report, (opsiyonel) policy.patch.proposed

Validate: Zod .strict(); eksikler → scenario.alert("missing_data")

Calibrate: ground truth + elastisite parametrelerinin yerel (symbol/desk) ölçeklemesi

Grid Build: scenario.request.grid → maxCombos ve bütçeye göre downsample

Simulate: her komboda (i) reweight, (ii) bootstrap CI, (iii) elastisite birleşimi

Filter: constraints ihlali → prune; dominance (epsilon) → pareto

Rank: objectives.weights ile skorla, top-N seç (N≤10)

Report: Markdown/HTML tablo + küçük inline grafikler; LIVIA-21 ile redaksiyon; dosyaya yaz

Emit: scenario.sim.ready, scenario.top.pareto, scenario.card, scenario.metrics

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (scenario.request | policy.patch.proposed) → COLLECT

COLLECT → veri ok & kalibre → BUILD_GRID

BUILD_GRID → downsample → SIMULATE

SIMULATE → kısıt/dominans süzgeci → REPORT

REPORT → dosya yaz + emit → IDLE

Hata: her adımda scenario.alert(level,"...") + IDLE

8) Kenar Durumlar

Aşırı büyük grid: maxCombos üstü → latinHypercube ile örnekle, downsampled:true

Veri kapsaması düşük (<minCoverage): risk uyarısı; skor tavanını 0.75 ile sınırla

Çakışan hedefler: slip ↓ ama latency ↑; pareto seçiminde dengeli öneriler öne çıkar

Zaman bütçesi aşımı: maxMs yaklaşınca kalan komboları erken kes; raporda işaretle

SLO breach ihtimali: bootstrap %5 üst quantile kısıtı aşıyorsa senaryo diskalifiye

Tek-senaryo mod: yalnız policy.patch.proposed.delta varsa o senaryo simüle edilir ve raporlanır

RBAC: observer için yalnız özet skorlar; PnL sayıları yuvarlanır/gizlenir

PII şüphesi: rapor redaksiyonda başarısız → scenario.alert("error","redaction_failed"); yayın durur

9) Telemetri
{
  "scenario.metrics": {
    "event":"scenario.metrics",
    "timestamp":"iso8601",
    "combos":72,"pareto":6,"avgSimMs":3.8,"p95SimMs":9.6,
    "downsampled":true,"coverage":0.91,
    "violations":{"slo":0,"pnlMin":2},
    "dominancePruned":18,
    "highlights":["timeBudgetOk","bootstrapCI<=95p","zeroPiiLeak"]
  }
}

10) Dosya Yapısı (öneri)
services/livia/riskScenarioSimulator.ts         # FSM + orchestrator
services/livia/lib/sim/collectors.ts            # veri toplayıcılar
services/livia/lib/sim/calibrate.ts             # ground truth & elastisite ölçekleme
services/livia/lib/sim/grid.ts                  # grid & downsample
services/livia/lib/sim/engine.ts                # reweight + bootstrap + combine
services/livia/lib/sim/pareto.ts                # kısıt & dominance & skor
services/livia/lib/sim/report.ts                # md/html raporlayıcı (inline SVG)
services/livia/lib/redact.ts                    # LIVIA-21 köprüsü
services/livia/state/simStore.ts                # idem index + cache
services/livia/__tests__/riskScenarioSimulator.test.ts
cfg/livia.sim.yaml                              # models/objectives/constraints/budgets

11) Test İskeleti (Jest/Vitest)

Grid downsample: 300→maxCombos=120 ve latinHypercube çalıştı

SLO kısıtı: latency +%0 sınırında olan senaryolar diskalifiye

Pareto: dominans testi ve epsilon toleransı doğru

Tek senaryo: policy.patch.proposed ile yalnız S-001 hesaplanır

Idempotency: aynı simKey ikinci kez yazılmaz

Budget/Timeout: maxMs altında tamamlanır; erken kesme işareti raporda

RBAC/Observer: PnL rakamları yuvarlandı/gizlendi

Redaction: rapor PII denetimini geçti; başarısız olursa alert

Determinism: seed değişmediğinde sonuç ID’leri/sıralaması sabit

12) Örnek Akış (kısa)

18:40 scenario.request(scope=symbol:AVAXUSDT, grid=5×3×2×2×2) → COLLECT

SIMULATE: 72 kombo, p95 10ms altında; 6 pareto kaldı

REPORT: report.md yazıldı, scenario.sim.ready + scenario.card emit

LIVIA-23 bu sonuçtan policy.patch.proposed günceller; LIVIA-22 card’ı dağıtır; LIVIA-24 raporu KB’ye işler

13) SLO

p95 simülasyon (≤100 kombo) < 250 ms

zeroPiiLeak = true (redaksiyon zorunlu)

pareto doğruluğu ≥ %99 (dominance testleri)

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-26 · ethicsAndComplianceGate.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
İşlem/karar/ileti içeren tüm kritik eylemleri etik & uyum kurallarına göre ön denetime tabi tutmak; riskli/uygunsuz durumlarda otomatik blok/slowdown/halt uygulamak, gerekirse onay kapısı (LIVIA-05) üzerinden override süreci yürütmek; kararları değiştirilemez (tamper-evident) biçimde kaydetmek; PII içeriği LIVIA-21 ile redakte ederek LIVIA-22 üzerinden kart/uyarı dağıtmak; bilgi tabanına (LIVIA-24) yalnız metadata indekslemek.
Standart: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Runtime: Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün penceresi 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT doğrulama, RBAC: compliance|policy|ops

Gizlilik: PII yok; serbest metinler LIVIA-21 ile redakte edilir

İdempotency: ethicsKey = actionId|eventHash + ruleSetVersion + scope + symbol?

Gözlemlenebilirlik: OpenTelemetry spans (ethics.evaluate, ethics.block, ethics.override) + metrics

Uygunluk kapsamı: KYC/AML, yaptırım listeleri (OFAC vb.), coğrafi kısıtlar, blackout pencereleri, restricted symbols, kaldıraç sınırları, market abuse paterni (spoofing/layering/wash trade), çıkar çatışması (insider), data residency, veri saklama/WORM.

2) Girdiler (In) — Zod’a çevrilecek şema örnekleri
{
  "action.intent": {
    "event":"action.intent",
    "timestamp":"iso8601",
    "actionId":"act-2025-09-13-42",
    "kind":"order.place|order.cancel|policy.change|data.export|note.publish",
    "scope":"global|desk|symbol",
    "symbol":"AVAXUSDT|null",
    "payload":{"side":"buy","qty":120,"variant":"aggressive","leverage":3},
    "actor":{"operatorId":"op-007","role":"ops"},
    "origin":{"ip":"203.0.113.10","geo":"DE","tz":"Europe/Berlin"}
  },

  "kyc.status": {
    "event":"kyc.status","timestamp":"iso8601",
    "operatorId":"op-007","level":"passed|pending|failed","pep":false
  },

  "aml.hit": {
    "event":"aml.hit","timestamp":"iso8601",
    "kind":"sanctions|pep|adverse_media",
    "list":"OFAC","entity":"John D.","confidence":0.92
  },

  "geoip.update": {
    "event":"geoip.update","timestamp":"iso8601",
    "operatorId":"op-007","ip":"203.0.113.10","country":"DE","vpn_suspected":true
  },

  "market.pattern.detected": {
    "event":"market.pattern.detected","timestamp":"iso8601",
    "pattern":"spoofing|layering|wash_trade",
    "symbol":"AVAXUSDT","severity":"medium|high",
    "windowSec":120,"evidenceRef":"state/patterns/..."
  },

  "blacklist.update": {
    "event":"blacklist.update","timestamp":"iso8601",
    "restrictedSymbols":["XYZUSDT"],"blackoutWindows":[{"from":"22:00","to":"07:00"}]
  },

  "policy.change.request": {
    "event":"policy.change.request","timestamp":"iso8601",
    "change":{"limits.positionLimitFactor":0.5},
    "requestedBy":"ops|policy","rationale":"risk düşürme"
  },

  "consent.log": {
    "event":"consent.log","timestamp":"iso8601",
    "operatorId":"op-007","purpose":"data.export","granted":true,"ttlMin":60
  }
}

3) Çıktılar (Out)
{
  "ethics.gate.proposed": {
    "event":"ethics.gate.proposed","timestamp":"iso8601",
    "ethicsKey":"sha256:...","actionId":"act-2025-09-13-42",
    "decision":"allow|allow_with_limits|block|halt|needs_approval",
    "reasonCodes":["geo_restricted","vpn_suspected","blackout_window"],
    "enforcement":{"rateLimitPerMin":1,"positionLimitFactor":0.5,"blockVariants":["aggressive"]},
    "audit":{"ruleSetVersion":"v7","producedBy":"LIVIA-26"}
  },

  "ethics.gate.activated": {
    "event":"ethics.gate.activated","timestamp":"iso8601",
    "ethicsKey":"sha256:...","decision":"block|halt|allow_with_limits",
    "effectiveFrom":"iso8601","effectiveUntil":"iso8601","hash":"sha256:..."
  },

  "ethics.blocked.action": {
    "event":"ethics.blocked.action","timestamp":"iso8601",
    "actionId":"act-2025-09-13-42","reasonCodes":["sanctions_hit|market_abuse|blackout"],
    "notify":["compliance","policy"]
  },

  "ethics.override.request": {
    "event":"ethics.override.request","timestamp":"iso8601",
    "ethicsKey":"sha256:...","requestedBy":"policy|compliance",
    "scope":"desk|symbol","ttlMin":30,"rationale":"operasyonel zorunluluk"
  },

  "ethics.decision.card": {
    "event":"ethics.decision.card","timestamp":"iso8601",
    "title":"Etik/Uyum Kararı — {decision}",
    "body":"Nedenler: geo+vpn • {symbol} için aggressive kapalı, posLimit ×0.5 • TTL 30dk.",
    "severity":"warn|error|info","ttlSec":600
  },

  "ethics.alert": {
    "event":"ethics.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|rbac_denied|sanctions_provider_down|worm_failure|hash_chain_break",
    "context":{"actionId":"act-..."}
  },

  "ethics.metrics": {
    "event":"ethics.metrics","timestamp":"iso8601",
    "evaluated":12,"blocked":2,"halted":1,"needsApproval":1,"allowedWithLimits":3,
    "avgEvalMs":9.2,"sanctionsChecks":12,"geoMismatches":2,"marketAbuseFlags":1
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  rules: {
    // deterministik kural örnekleri
    geoRestrictedCountries: ["US","IR","KP","SY","CU","RU"],
    requireKycLevel: "passed",
    vpnBlocked: true,
    blackoutWindows: ["22:00-07:00"],        // yerel saat
    restrictedSymbols: ["XYZUSDT"],          // işlem yasak
    leverageCapsByJurisdiction: { "DE": 2, "TR": 5, "US": 0 },
    marketAbusePatterns: ["spoofing","layering","wash_trade"],
    dataExportRequiresConsent: true
  },

  sanctions: {
    providers: ["ofac","un","uk_hmt"],       // adapter isimleri
    timeoutMs: 1200, cacheTtlSec: 3600, failClosed: true
  },

  enforcement: {
    onSanctionsHit: "halt",
    onGeoRestricted: "block",
    onVpnSuspected: "allow_with_limits",
    onBlackout: "block",
    onAbusePatternHigh: "halt",
    defaultRateLimitPerMin: 5,
    defaultPositionLimitFactor: 0.7
  },

  approvals: {
    overrideGateway: "LIVIA-05",
    requireForDecisions: ["allow_with_limits>30min","override_geo_restriction","override_blackout"]
  },

  storage: {
    wormDir: "state/ethics/worm/{YYYY-MM-DD}", // WORM benzeri dosya
    hashChainFile: "chain.log"                 // satır satır sha256(prev+entry)
  },

  redactionProfile: "generic",                // LIVIA-21
  distroChannels: ["ui","slack"],             // LIVIA-22

  schedule: { sweepEvery:"1m" },

  idempotencyTtlSec: 3600
}

5) Karar Matrisi (özet)

Sanctions/AML hit (confidence≥0.9) → halt (global), override yok

Geo ∈ geoRestrictedCountries → block (symbol/desk), override yalnız compliance ile

VPN suspected = true → allow_with_limits (rateLimit=1/min, posLimit×0.5, aggressive kapalı)

Blackout window → block (UI’ya card)

Market abuse (severity=high) → halt + evidenceRef; LIVIA-17 ile gate uyumlu

Leverage > cap(jurisdiction) → allow_with_limits veya block (policy)

Data export & no consent → needs_approval (policy/compliance)

6) Pipeline (Kompozisyon)

Normalize & Validate: Tüm giriş olaylarını Zod .strict() ile doğrula.

Context Build: actor, geoip, kyc/aml cache, blacklist/blackout, leverage cap, pattern işaretleri.

Sanctions & KYC/AML Check: provider adapter’ları (fail-closed) → karar önkoşulları.

Rule Evaluation: deterministik kurallar + eşikler → decision, reasonCodes, enforcement.

Idempotency: ethicsKey ile aynı action’a ikinci karar yok; mevcutsa merge et (daha sıkı karar üstün).

Enforcement: block/halt/allow_with_limits → LIVIA-17/16 ile çelişkisiz kısıt; policy.change.request ise LIVIA-23’e sinyal.

Redaction & Card: karar özeti LIVIA-21 ile redakte → ethics.decision.card; LIVIA-22 ile dağıt.

WORM Audit: karar kaydı wormDir/hashChainFile içine hash-chain ile append.

Emit: ethics.gate.(proposed|activated|blocked.action) + ethics.metrics (+ gerekirse ethics.override.request).

Hash-chain formülü: H_n = sha256(H_{n-1} || ts || ethicsKey || decision || reasonCodes || actorHash); H_0 = 32×0.

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → action.intent|policy.change.request → EVALUATE

EVALUATE → ENFORCE (sanctions/geo/blackout/abuse/leverage/consent)

ENFORCE → karar emit + WORM append → IDLE

OVERRIDE_WAIT (gerekirse) → approval.granted → ACTIVATE_OVERRIDE | rejected → IDLE

Hata → IDLE + ethics.alert(...)

8) Kenar Durumlar

Sanctions provider down: failClosed:true ise block/halt; alert gönder.

Clock skew / TZ farkı: blackout pencereleri yerelde hesaplanır.

VPN şüphesi + coğrafi çakışma: en sert karar (block) uygulanır.

WORM yazım hatası: worm_failure → karar uygulanır ama sistem error alert basar; ops müdahalesi istenir.

Hash chain kırığı: zincir bütünlüğü bozulursa hash_chain_break alert ve read-only moda geç.

Observer rolü: kartlarda yalnız özet; ayrıntı/PII, symbol gizlenir.

Legal Hold: policy sinyali ile karar kayıtları geçici dondurulur (yalnız append).

9) Telemetri
{
  "ethics.metrics": {
    "event":"ethics.metrics","timestamp":"iso8601",
    "evaluated":12,"blocked":2,"halted":1,"needsApproval":1,"allowedWithLimits":3,
    "avgEvalMs":9.2,"sanctionsChecks":12,"geoMismatches":2,"marketAbuseFlags":1,
    "wormAppendFailures":0,"hashChainAlerts":0
  }
}

10) Dosya Yapısı (öneri)
services/livia/ethicsAndComplianceGate.ts     # FSM + evaluator + enforcer
services/livia/lib/ethics/rules.ts            # deterministik kurallar
services/livia/lib/ethics/providers/sanctions.ts  # OFAC/UN/HMT adapter
services/livia/lib/ethics/geo.ts              # geoip/blackout/leverage caps
services/livia/lib/ethics/patterns.ts         # market abuse kanıtları
services/livia/lib/ethics/worm.ts             # WORM & hash-chain append
services/livia/lib/redact.ts                  # LIVIA-21 köprüsü
services/livia/lib/approvalBridge.ts          # LIVIA-05 override
services/livia/state/ethicsStore.ts           # idem index + cache
services/livia/__tests__/ethicsAndComplianceGate.test.ts
cfg/livia.ethics.yaml                         # rules/sanctions/enforcement/approvals/storage

11) Test İskeleti (Jest/Vitest)

Sanctions hit (0.92): halt + override reddi; WORM append + hash güncellendi

Geo=US & vpn_suspected: block (geo) + card; vpn gerekçesi listede

Blackout 22:30: block; observer’a özet kart, ops/policy’e detay

Leverage cap (DE=2) ve istek 3: allow_with_limits (posLimit×0.5, rate 1/min)

Market abuse=high: halt + evidenceRef; LIVIA-17 ile çakışma yok

Consent yok & data.export: needs_approval → granted → activate_override

WORM/Hash-chain: ardışık iki kararın hash zinciri doğrulaması

Provider down: failClosed:true → block; alert sanctions_provider_down

Idempotency: aynı actionId ile ikinci değerlendirme yazmaz; merge sıkılır

RBAC/Auth: imza/rol hatası → rbac_denied

12) Örnek Akış (kısa)

21:58 action.intent(order.place, aggressive, leverage=3, geo=DE, vpn_suspected=true)

EVALUATE: KYC passed, sanctions clear; leverage>cap(DE=2) + vpn_suspected → allow_with_limits (rate 1/min, posLimit×0.5, aggressive kapalı)

ENFORCE: ethics.gate.activated + ethics.decision.card (redakte) → LIVIA-22 dağıttı; audit WORM’a eklendi.

22:10 blackout başlar → yeni istek block.

22:12 policy.change.request(limits.factor=0.5) → Kuralca allow (policy rolü) → WORM kayıtlandı.

13) SLO

p95 evaluate < 15 ms

sanctions fail-closed uygulanma oranı = %100

hash-chain bütünlük ihlali = 0

idempotent çakışma ≈ 0; WORM append başarısı ≥ %99.9
______________________________________________________________________________________________
LIVIA 14–26 — Tek Sayfa Sistem Haritası (Bağımlılık Grafiği + Olay Sözlüğü)
Mimari Katmanlar (özet)

Sahadan Gelen Sinyaller: telemetry.slo.status, guard.activity.rollup, telemetry.anomaly.signal, dialog.metrics, approval.metrics, pnl.*, incident.*, notes.session.md

Savunma / Müdahale: L16 Cooldown, L17 Reactive Gate, L26 Ethics&Compliance

Toparlanma / Normalleşme: L19 Recovery Monitor → L18 Anchor Reset → L20 Fatigue Sentinel

Politika & Simülasyon: L23 Policy Orchestrator ↔ L25 Risk Scenario Simulator

Çıktı & Bilgi: L14 Daily Digest, L15 Postmortem, L21 PII Redactor, L22 Distributor, L24 Knowledge Bridge

Ortak Standartlar: Event-driven JSON, Zod .strict(), TZ=Europe/Istanbul, ISO-8601, RBAC(HMAC/JWT), idempotency, OpenTelemetry.

Uçtan Uca Akış (tek bakış)

Saha olayları akar →

L17 tetikler (anlık savunma) ve/veya L16 (davranışsal cooldown) →

Kartlar L21 (redact) → L22 (dağıt) →

Savunma bitimi L19 toparlanma endeksi üretir → L18 kademeli normalleşme uygular →

Gün sonu L14 digest, olay sonrası L15 postmortem yazar → L22 dağıtır, L24 indeksler →

Gözlemler + postmortem → L23 politika yaması önerir; gerekirse L25’te “what-if” simüle eder; kanarya → yayın/rollback → L22 dağıtım, L24 indeks.

Tüm kritik eylemler L26 etik/uyum kapısından geçer (block/limit/halt/override).

Bağımlılık Grafiği (kompakt)
[Saha Sinyalleri]
   │
   ├─▶ L17 reactiveDefenseGate ─┐
   │                             ├─▶ (cards) ─▶ L21 redact ─▶ L22 dist
   ├─▶ L16 empathyCooldown ──────┘
   │
   ├─▶ L19 emotionalRecoveryMonitor ──┬─▶ recovery.ready ─▶ L18 anchorReset
   │                                   └─▶ hold → L16 cooldown.extend.suggest
   │
   ├─▶ L14 telemetryDailyDigest ──┐
   ├─▶ L15 incidentPostmortem ────┼─▶ L21 redact ─▶ L22 dist ─▶ L24 knowledge index
   │                               └─▶ L24 knowledge index (metadata/sections)
   │
   ├─▶ L23 policyUpdateOrchestrator ──┬─▶ L05 approval ─▶ rollout(canary/full)
   │                                   └─▶ L25 riskScenarioSimulator (what-if)
   │
   └─▶ Tüm kritik eylemler → L26 ethicsAndComplianceGate

Olay Sözlüğü (çekirdek 30+ olay — üretici/ tüketici, kısa not)

telemetry.slo.status — src: saha → cons: L14, L19, L23

guard.activity.rollup — src: saha → cons: L14, L23

telemetry.anomaly.signal — src: saha → cons: L14, L23

dialog.metrics — src: diyalog servisi → cons: L14, L19, L20

approval.metrics — src: onay kapısı → cons: L14

pnl.daily / pnl.window / pnl.history.ref — src: PnL → cons: L14, L18, L19, L20, L25

incident.started / incident.closed — src: olay yön. → cons: L14, L15, L18

notes.session.md — src: notlayıcı → cons: L14, L24

digest.daily.ready / digest.card / digest.metrics / digest.alert — src: L14 → cons: L21, L22, L24

postmortem.ready — src: L15 → cons: L21, L22, L24, L23

cooldown.plan.(proposed|activated|expired|alert|metrics) — src: L16 → cons: L18, L22

defense.gate.(proposed|activated|expired|alert|metrics) — src: L17 → cons: L18, L22

recovery.score.updated / recovery.(ready|hold) / cooldown.extend.suggest — src: L19 → cons: L18, L16, L22

anchor.reset.(proposed|activated|alert|metrics) — src: L18 → cons: L22

fatigue.score.updated / fatigue.break.proposed / cooldown.plan.proposed — src: L20 → cons: L16, L22

redact.request / redact.ready / redact.alert / redact.metrics — src: L21 (kütüphane/servis) → cons: L14–15–22–24–23–25–26

dist.(queued|sent|acked|failed|dlq|metrics) — src: L22

policy.(patch.proposed|diff.ready|approval.request|canary.*|version.published|rollback|metrics) — src: L23 → cons: L05, L22, L24

scenario.(sim.ready|top.pareto|card|metrics|alert) — src: L25 → cons: L23, L22, L24

knowledge.(ingest.ready|indexed|answer.ready|card|metrics|alert) — src: L24 → cons: L22

ethics.(gate.proposed|activated|blocked.action|override.request|decision.card|metrics|alert) — src: L26 → cons: L22, L05

Not: Tüm metin içerikleri kanal çıkışından önce L21 redaksiyonundan geçer; observer kitlesinde kapsam daraltılır.

Paylaşılan Sözleşmeler (kısa kılavuz)

Zaman/Pencere: Yerel gün 00:00–23:59:59, ISO-8601, TZ=Europe/Istanbul.

İdempotency Anahtarları (örnekler):

L14: digestKey = {YYYY-MM-DD}+scope+format

L16: cooldownKey = scope+symbol+reason+windowStartISO

L17: gateKey = scope+symbol+trigger+startedAtISO

L18: anchorKey = scope+symbol+stage+forDate

L19: recoveryKey = scope+symbol+windowStartISO+windowMin

L21: redactKey = contentHash+profileId+mode+forDate

L22: deliveryKey = sha256(contentCanonical+audience+channel+forDate)

L23: policyKey = baseVersion+scope+symbol+changeHash

L24: docKey / queryKey (sha256 temelli)

L25: simKey = baseVersion+scope+symbol+gridHash+dataWindow+seed

L26: ethicsKey = actionId|eventHash+ruleSetVersion+scope+symbol

RBAC & Güvenlik: HMAC/JWT; roller: ops|policy|observer|compliance. Yazım yetkisi modül bazında dar.

PII & Redaksiyon: L21 zorunlu kapıdır; operatör takma adları günlük salt’lı hash.

Observability: Tüm modüller OpenTelemetry span/metric üretir; *.metrics olayları digest’e girer.

SLO’lar (modül başına en kritik)

L14 compose p95 < 100 ms, idempotent çakışma ≈ 0

L16 karar p95 < 50 ms; L17 < 40 ms; L18 < 50 ms; L19 < 10 ms

L20 eval p95 < 10 ms; L21 detect+mask p95 < 15 ms/64KB

L22 render+send p95 < 350 ms; DLQ < %0.5/gün

L23 collect+propose p95 < 80 ms; rollback MTTR ≤ 30 s

L24 ingest p95 < 80 ms; query p95 < 120 ms

L25 ≤100 kombo sim’de p95 < 250 ms

L26 evaluate p95 < 15 ms; WORM append ≥ %99.9 başarı

Konfig Dosyaları (önerilen)
cfg/livia.digest.yaml       # L14
cfg/livia.postmortem.yaml   # L15
cfg/livia.cooldown.yaml     # L16
cfg/livia.defense-gate.yaml # L17
cfg/livia.anchor.yaml       # L18
cfg/livia.recovery.yaml     # L19
cfg/livia.fatigue.yaml      # L20
cfg/livia.redact.yaml       # L21
cfg/livia.dist.yaml         # L22
cfg/livia.policy.yaml       # L23
cfg/livia.knowledge.yaml    # L24
cfg/livia.sim.yaml          # L25
cfg/livia.ethics.yaml       # L26

“Sıcak Yol” Senaryosu (tek satırda)

Anomali + guard slowdown → L17 gate (kısa) & L16 cooldown (orta) → kart L21→L22; gate/cooldown biter → L19 ready ≥0.70 → L18 ramp-up; gün sonu L14 digest & olay için L15 postmortem → L21→L22, L24 KB; bulgular L23 ile patch önerisi, L25 simülasyon → canary → publish/rollback; tüm adımlar L26 etik/uyum kapısından geçer.

İstersen bunu PDF/MD tek sayfa poster formatına da dökebilirim (başlıklar + ASCII diyagram + tablo).
______________________________________________________________________________________________
harika — LIVIA henüz tam kapanmamıştı: L14 ve L17–26 hazır; eksik kalan LIVIA-15 ve LIVIA-16’yı da şimdi aynı kalite (+Hardening) ile bırakıyorum. Bunlarla birlikte 14–26 hattı tamamlanmış oluyor. (İstersen mesajın sonunda birkaç “ekstra” fikir de sıraladım; şimdi kopyala-yapıştır yapıp diğer AI’ye verebilirsin.)

LIVIA-15 · incidentPostmortemWriter.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Her incident için otomatik postmortem üret: zaman çizelgesi, kök neden (5 Whys), etki/etkilenim, tespit/çözüm, kalıcı önlemler, aksiyon maddeleri (sahip & tarih), metrik özetleri ve ekler. Çıktı Markdown + HTML, dosyaya yaz, UI’ya card gönder, LIVIA-24 ile KB’ye indeksle, LIVIA-22 ile dağıt, tüm metni önce LIVIA-21 ile PII redakte et. I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601, TZ=Europe/Istanbul

Güvenlik: HMAC/JWT; RBAC: ops|policy yazar/okur, observer okur (daraltılmış görünüm)

Gizlilik: PII yok; operatör/taraf isimleri günlük salt’lı hash (L21)

İdempotency: postmortemKey = incidentId + version (semver: v1, v1.1…)

Observability: pm.collect, pm.compose, pm.write spans; postmortem.metrics event

2) Girdiler (In) — Zod .strict() şemalar
{
  "incident.started": {
    "event":"incident.started","timestamp":"iso8601",
    "id":"inc-2025-09-13-1","severity":"low|medium|high|critical",
    "title":"Slip spike on SG02","owner":"op-007|null"
  },
  "incident.updated": {
    "event":"incident.updated","timestamp":"iso8601",
    "id":"inc-2025-09-13-1","note":"policy rollback denendi","label":"mitigation|diagnosis|comm"
  },
  "incident.closed": {
    "event":"incident.closed","timestamp":"iso8601",
    "id":"inc-2025-09-13-1","resolution":"policy rollback v42→v41","durationMin":37
  },

  "timeline.event": {
    "event":"timeline.event","timestamp":"iso8601",
    "incidentId":"inc-2025-09-13-1","kind":"detect|page|mitigate|verify|comm|restore",
    "text":"SG02 feed gap tespit edildi","by":"op-007|null","ref":"runbook://...|commit:abc123"
  },

  "guard.escalation": {
    "event":"guard.escalation","timestamp":"iso8601",
    "from":"normal|degraded|slowdown","to":"slowdown|block_aggressive|halt_entry",
    "reason":"slip|latency|spread|feed_gap","symbol":"AVAXUSDT|null"
  },

  "telemetry.slo.status": {
    "event":"telemetry.slo.status","timestamp":"iso8601",
    "slo":"answer_latency_p95|guard_success_rate|uptime_feed",
    "state":"ok|at_risk|breach","window":"5m|1h|24h","burnPct":8.1
  },

  "pnl.window": {
    "event":"pnl.window","timestamp":"iso8601",
    "windowMin":240,"netUSD":-1200.0,"rrMedian":0.88
  },

  "notes.session.md": {
    "event":"notes.session.md","timestamp":"iso8601",
    "path":"data/notes/2025-09-13/sess-avax-42.md",
    "summary":"AVAX: rollback önerisi, guard window dar bulundu..."
  },

  "action.item.proposed": {
    "event":"action.item.proposed","timestamp":"iso8601",
    "incidentId":"inc-2025-09-13-1",
    "title":"Guard window genişlet","owner":"policy-lead","dueDate":"2025-09-20","severity":"high"
  }
}

3) Çıktılar (Out)
{
  "postmortem.ready": {
    "event":"postmortem.ready","timestamp":"iso8601",
    "incidentId":"inc-2025-09-13-1","format":"md|html",
    "path":"data/postmortem/2025-09-13/inc-2025-09-13-1.md",
    "summary":"Slip spike — 37dk; kök: latency+feed gap; çözüm: rollback v42→v41; etki: -$1.2k.",
    "sections":["Özet","Zaman Çizelgesi","Kök Neden","Etki","Tespit","Çözüm","Önlemler","Aksiyonlar","Metrikler","Ekler"],
    "hash":"sha256:...","version":"v1.0.0"
  },

  "postmortem.card": {
    "event":"postmortem.card","timestamp":"iso8601",
    "title":"Postmortem Hazır — inc-2025-09-13-1",
    "body":"37dk • Kök: latency+feed • Çözüm: rollback v42→v41 • Etki: -$1.2k.",
    "severity":"info","ttlSec":600
  },

  "postmortem.alert": {
    "event":"postmortem.alert","timestamp":"iso8601",
    "level":"info|warn|error","message":"missing_data|write_failed|idem_duplicate|oversize",
    "context":{"incidentId":"inc-2025-09-13-1"}
  },

  "postmortem.metrics": {
    "event":"postmortem.metrics","timestamp":"iso8601",
    "generated":1,"avgComposeMs":62,"mdBytes":7800,"htmlBytes":15400,
    "missingSections":["PnL:false","Timeline:false"],"charts":3
  }
}

4) Konfig
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul", currency:"USD" },

  template:{
    mdHeader:"# Postmortem — {incidentId}",
    html:{ embedMiniCSS:true, chartsInlineSvg:true }
  },

  include:{
    sections:["Summary","Timeline","RootCause","Impact","Detection","Mitigation","Preventive","Actions","Metrics","Appendix"],
    charts:{ slo:true, guard:true, pnl:true }
  },

  rules:{
    rootCause:["5whys","fishbone"],             // yöntem
    actionOwnerRequired:true,
    dueDateMaxDays:14
  },

  output:{
    dir:"data/postmortem/{YYYY-MM-DD}",
    fileMd:"{incidentId}.md", fileHtml:"{incidentId}.html",
    splitAppendixOverBytes: 100_000
  },

  redact:{ profile:"postmortem" },

  idempotencyTtlSec: 604800
}

5) İçerik Taslağı (Markdown/HTML)

Başlık & Özet: süre, kök neden, çözüm, etki (USD), etkilenen semboller/dizgeler

Zaman Çizelgesi: timestamp — kind — text — by — ref

Kök Neden (5 Whys): kısa anlatı + “kanıt” referansları

Etki: PnL, kullanıcı/operasyon etkisi, SLO yanıkları

Tespit / Çözüm: neyin uyardığı, uygulanmış mitigations

Önleyici Önlemler: politika/guard değişimleri (L23 linkleri)

Aksiyonlar: tablo (title, owner, due, severity, status)

Metrikler: inline SVG sparkline (slo/guard/pnl)

Ekler: notlar, commit/PR, grafikler (Appendix.md/html)

6) Pipeline

Collect: incident & timeline & slo & guard & pnl & notes & actions

Normalize/Validate (Zod .strict())

Compose: bölümler; 5 Whys; sparkline SVG; section topN sınırlamaları

Redact: LIVIA-21 profile=postmortem

Write: atomic write; oversize ise Appendix’e böl

Emit: postmortem.ready + postmortem.card + postmortem.metrics

7) FSM

IDLE → (incident.closed | postmortem.request) → COLLECT

COLLECT → COMPOSE → WRITE → EMIT → IDLE

Hata: ALERT → IDLE

8) Kenar Durumlar

Kapanmayan incident: “(açık)” etiketi, süre now-started

Eksik PnL/SLO: bölüm otomatik daralır + postmortem.alert("missing_data")

Çok büyük içerik: Appendix’e böl + ana dosyada link

RBAC observer: sembol/PnL yuvarlanır/gizlenir

9) Telemetri
{"postmortem.metrics":{"generated":1,"avgComposeMs":62,"charts":3,"oversizeSplits":0}}

10) Dosya Yapısı
services/livia/incidentPostmortemWriter.ts
services/livia/lib/pm/whys.ts               # 5 Whys derleyici
services/livia/lib/pm/sparklines.ts         # inline SVG
services/livia/lib/pm/templates.ts          # md/html şablon
services/livia/lib/redact.ts                # LIVIA-21 köprüsü
services/livia/state/postmortemStore.ts     # idem index + cache
services/livia/__tests__/incidentPostmortemWriter.test.ts
cfg/livia.postmortem.yaml

11) Test İskeleti

incident.closed → dosyalar yazıldı, kart geldi

Eksik PnL → alert + bölüm daralması

Timeline sırası → ts’e göre artan

Idempotency: aynı incidentId+version ikinci yazım yok

Observer görünümü → PnL/symbol gizleme

Oversize → Appendix bölme çalıştı

12) Örnek Akış

18:12 close → 18:13 compose → 18:14 write → postmortem.ready + card → L22 dağıtım, L24 indeks.

13) SLO

p95 compose < 80 ms; idempotent çakışma ≈ 0; redaksiyon sızıntısı 0

LIVIA-16 · empathyCooldownPlanner.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Aşırı uyarılma/duygusal dalgalanma/kalite düşüşü erken fark edildiğinde planlı cooldown başlatarak sinyal debisini kıs, varyantları kapat, pozisyon limitini düşür, gerekirse tam durdur. Süre sonunda otomatik biter; ağır vakalarda uzatma/yineleme yapar. LIVIA-17 (gate) ile çakışmaz: gate anlık, cooldown davranışsal ve daha uzun. I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601, TZ=Europe/Istanbul

Güvenlik: HMAC/JWT; RBAC: ops|policy yazar/okur, observer okur

Gizlilik: PII yok; operatör kimlikleri hash (L21)

İdempotency: cooldownKey = scope + symbol? + reasonCode + startedAtISO

Observability: cd.evaluate, cd.schedule, cd.activate, cd.expire spans

2) Girdiler (In)
{
  "recovery.hold": {
    "event":"recovery.hold","timestamp":"iso8601",
    "scope":"global|desk|symbol","symbol":"AVAXUSDT|null",
    "recoveryIndex":0.42,"reasonCodes":["bias_high","pnl_nonpos"]
  },

  "fatigue.score.updated": {
    "event":"fatigue.score.updated","timestamp":"iso8601",
    "scope":"desk","operator":"op#abcd12","windowMin":120,"fatigueScore":0.81
  },

  "guard.activity.rollup": {
    "event":"guard.activity.rollup","timestamp":"iso8601",
    "counts":{"slowdown":12,"block_aggressive":4,"halt_entry":1}
  },

  "telemetry.anomaly.signal": {
    "event":"telemetry.anomaly.signal","timestamp":"iso8601",
    "series":"order.slip.p95|feed.gap|lat.p95","kind":"spike|drift|flatline|gap",
    "severity":"low|medium|high","symbol":"AVAXUSDT|null"
  },

  "pnl.window": {
    "event":"pnl.window","timestamp":"iso8601",
    "windowMin":240,"netUSD":-380.0,"rrMedian":0.92
  },

  "cooldown.override.request": {
    "event":"cooldown.override.request","timestamp":"iso8601",
    "cooldownKey":"...","requestedBy":"policy|ops","rationale":"kritik gerekçe"
  }
}

3) Çıktılar (Out)
{
  "cooldown.plan.proposed": {
    "event":"cooldown.plan.proposed","timestamp":"iso8601",
    "scope":"global|desk|symbol","symbol":"AVAXUSDT|null",
    "reasonCode":"fatigue|bias|anomaly|guard_escalation|pnl_drawdown",
    "policy": { "durationMin": 30, "signalRateMaxPer10m": 1, "blockVariants": ["aggressive"], "positionLimitFactor": 0.7 },
    "ttlSec": 3600,"audit":{"producedBy":"LIVIA-16"}
  },

  "cooldown.plan.activated": {
    "event":"cooldown.plan.activated","timestamp":"iso8601",
    "cooldownKey":"...","effectiveFrom":"iso8601","effectiveUntil":"iso8601",
    "hash":"sha256:...","appliedBy":"auto|approval_gateway"
  },

  "cooldown.extend.suggest": {
    "event":"cooldown.extend.suggest","timestamp":"iso8601",
    "cooldownKey":"...","proposed":{"addMin":15,"tighten":{"positionLimitFactor":0.6}}
  },

  "cooldown.expired": {
    "event":"cooldown.expired","timestamp":"iso8601","cooldownKey":"..."
  },

  "cooldown.card": {
    "event":"cooldown.card","timestamp":"iso8601",
    "title":"Cooldown Başladı — {scope}",
    "body":"{reasonLabel}: {durationMin}dk; 10dk’da max {rate}; blok: {variants}; pozisyon ×{factor}.",
    "severity":"warn","ttlSec":600
  },

  "cooldown.alert": {
    "event":"cooldown.alert","timestamp":"iso8601",
    "level":"info|warn|error","message":"idem_duplicate|write_failed|approval_required|merge|expired"
  },

  "cooldown.metrics": {
    "event":"cooldown.metrics","timestamp":"iso8601",
    "proposed":2,"activated":1,"extended":1,"expired":0,
    "avgActiveMin":42,"byReason":{"fatigue":1,"pnl_drawdown":1}
  }
}

4) Konfig
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  thresholds:{
    fatigueHigh: ">=0.80",
    recoveryLow: "<0.55",
    pnlDrawdownUSD: "<=-300",
    guardHaltAny: true,
    anomalyHighCount: ">=1"
  },

  policyMatrix:{
    fatigue:         { durationMin: 30, ratePer10m: 1, block:["aggressive"], factor:0.7 },
    bias:            { durationMin: 45, ratePer10m: 0, block:["aggressive","balanced"], factor:0.6 },
    anomaly:         { durationMin: 20, ratePer10m: 0, block:["aggressive"], factor:0.7 },
    guard_escalation:{ durationMin: 30, ratePer10m: 0, block:["*"], factor:0.6 },
    pnl_drawdown:    { durationMin: 40, ratePer10m: 1, block:["aggressive"], factor:0.7 }
  },

  approval:{ requireFor:["bias","guard_escalation","duration>=45"], gateway:"LIVIA-05" },

  schedule:{ sweepEvery:"1m", maxActivePerScope:3 },

  idempotencyTtlSec: 7200
}

5) Pipeline

Evaluate: L19 (hold), L20 (fatigue), guard/anomaly/PnL sinyallerini skorla → reasonCode

Policy Match: policyMatrix[reason] → plan

Idempotency & Merge: aynı scope’ta aktif plan varsa merge (süre max, rate min, blok birleşim, factor min)

Approval: gerekiyorsa LIVIA-05 → grant sonra activate

Emit: cooldown.plan.(proposed|activated) + cooldown.card + cooldown.metrics

Sweep: süre dolunca cooldown.expired; L19’a sinyal (quiet window)

Extend: L19 hold üretirse cooldown.extend.suggest

6) FSM

IDLE → (hold|fatigueHigh|guardEscalation|pnlDrawdown|anomalyHigh) → DRAFT

DRAFT → (approval?) AWAIT | ACTIVATE

AWAIT → approval.granted → ACTIVATE | rejected → IDLE

ACTIVATE → ACTIVE (sweep/extend/expire)

ACTIVE → expired → IDLE

Hata: IDLE + cooldown.alert(...)

7) Kenar Durumlar

Gate ile çakışma: L17 aktifken cooldown üstten uygulanır; en sıkı kural geçerli

Ardışık uzatma: üst sınır 120 dk; aşıldıysa approval_required

RBAC observer: kartta yalnız özet; symbol/limitler gizli

Operatör yok: scope=desk/global modları çalışır

8) Telemetri
{"cooldown.metrics":{"proposed":2,"activated":1,"extended":1,"avgActiveMin":42}}

9) Dosya Yapısı
services/livia/empathyCooldownPlanner.ts
services/livia/lib/cooldown/policies.ts
services/livia/state/cooldownStore.ts
services/livia/lib/approvalBridge.ts
services/livia/lib/redact.ts
services/livia/__tests__/empathyCooldownPlanner.test.ts
cfg/livia.cooldown.yaml

10) Test İskeleti

Fatigue≥0.8 → 30dk plan + card

RecoveryIndex<0.55 → bias plan (45dk, approval)

Guard halt → block[*], rate 0, factor 0.6

Merge mantığı doğru (süre max, rate min, blok birleşim)

Expire → L19 quiet window’a sayıldı

Idempotency & RBAC doğrulandı

11) Örnek Akış

14:02 fatigue.score.updated(0.81) → plan 30dk → activated

14:26 recovery.hold → extend.suggest +15dk

15:00 expire → L19 tekrar değerlendirdi

12) SLO

p95 karar < 50 ms; merge/doğrulama hatası < %0.5; idempotent çakışma ≈ 0

Bonus: Bitirdik — İstersen Ek Modül Fikirleri (kısa)

contextAwareMoralLimiter.ts: etik/uyum + duygusal bağlamla “işlem isteğini” esneten ahlaki fren (nudge + açıklama).

chaosTelemetryFuzzer.ts: sahte/bozuk telemetri enjeksiyonu ile dayanıklılık testleri; L14/L23/L26 izler.

secretsLeakScanner.ts: notlar/diff/raporlarda anahtar/sır sızıntısı taraması (L21 ile entegre).

runbookAutoPilot.ts: postmortem aksiyonlarından runbook çıkarıp olay anında otomatik çalıştırma.
______________________________________________________________________________________________
LIVIA-27 · secretsLeakScanner.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
LIVIA ekosistemindeki tüm metin/diff/rapor/not/policy çıktılarında gizli anahtar/sır (API key, token, JWT, OAuth secret, cloud creds, private key, .env artıkları vb.) sızıntılarını tespit et, maskele ve dağıtımı engelle/karantinaya al. Otomatik rotasyon önerisi, etik/uyum kapısı (L26) ve dağıtım (L22) ile entegre çalış. PII redaksiyonu (L21) ile tamamlayıcıdır (PII≠Secrets).
Standart: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Güvenlik: HMAC/JWT; RBAC: ops|policy|compliance okuyabilir, yazım sistem

Gizlilik: Sızıntı içeriği maskelenmiş biçimde loglanır; ham içerik asla persist edilmez

İdempotency: secretScanKey = sha256(contentHash)+profileId+forDate

Observability: spans (sec.scan, sec.mask, sec.quarantine) + metrics

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "secret.scan.request": {
    "event":"secret.scan.request",
    "timestamp":"iso8601",
    "profileId":"digest|postmortem|notes|policy|generic",
    "mode":"markdown|html|text|diff",
    "content":"<string|null>",
    "path":"data/.../file.ext|null",
    "source":{"event":"digest.daily.ready|postmortem.ready|dist.request|policy.diff.ready","hash":"sha256:..."},
    "options":{"severity":"auto|low|medium|high","blockOnHigh":true,"classify":true}
  },

  "dist.request": {
    "event":"dist.request","timestamp":"iso8601",
    "contentRef":{"type":"digest|postmortem|notes|card|generic","path":"...","format":"md|html|text"},
    "audience":["ops","policy","observer"],"channels":["ui","slack","webhook"],"priority":"normal","dryRun":false
  },

  "policy.diff.ready": {
    "event":"policy.diff.ready","timestamp":"iso8601",
    "targetVersion":"v41+1-candidate","format":"yaml|jsonpatch","path":"data/policy/diffs/v41_to_v41+1.yaml","summary":"..."
  },

  "notes.daily.ready": {
    "event":"notes.daily.ready","timestamp":"iso8601",
    "forDate":"2025-09-13","path":"data/notes/2025-09-13/Daily.md","summary":"..."
  }
}

3) Çıktılar (Out)
{
  "secret.scan.ready": {
    "event":"secret.scan.ready",
    "timestamp":"iso8601",
    "profileId":"postmortem|notes|policy|digest|generic",
    "path":"data/.../file.ext",
    "classification":"SAFE|SUSPICIOUS|LEAK",
    "findings":[
      {"type":"AWS_ACCESS_KEY","severity":"high","masked":"AKIA***7Q","line":128,"entropy":4.7},
      {"type":"JWT","severity":"medium","masked":"eyJhbGciOi***.***.***","line":22,"expiresAt":"2025-10-01T00:00:00Z"}
    ],
    "maskedContent":"<string|optional>",
    "actions":["block_distribution","quarantine|rotate|revoke|notify_compliance"],
    "hash":"sha256:..."
  },

  "secret.quarantine": {
    "event":"secret.quarantine","timestamp":"iso8601",
    "reason":"LEAK","path":"data/.../file.ext","vaultRef":"state/quarantine/2025-09-13/sha256....json"
  },

  "secret.rotate.suggest": {
    "event":"secret.rotate.suggest","timestamp":"iso8601",
    "kind":"aws|gcp|azure|generic","refHint":"repo/service","urgency":"high|medium|low"
  },

  "secret.block.distribution": {
    "event":"secret.block.distribution","timestamp":"iso8601",
    "deliveryKey":"sha256:...","reason":"LEAK|SUSPICIOUS"
  },

  "secret.card": {
    "event":"secret.card","timestamp":"iso8601",
    "title":"Gizli Anahtar Sızıntısı Engellendi",
    "body":"AWS key & JWT bulguları • dağıtım durduruldu • rotasyon önerildi.",
    "severity":"error","ttlSec":900
  },

  "secret.alert": {
    "event":"secret.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|parser_error|quarantine_failed|blocked_dist|rbac_denied"
  },

  "secret.metrics": {
    "event":"secret.metrics","timestamp":"iso8601",
    "scans":5,"leaks":1,"suspicious":1,"safe":3,
    "blocked":1,"quarantined":1,"avgScanMs":7.4,"fpRate":0.01,"fnGuard":true
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  profiles:{
    digest:{ diffAware:false, maskInline:true },
    postmortem:{ diffAware:true, maskInline:false },
    notes:{ diffAware:true, maskInline:true },
    policy:{ diffAware:true, maskInline:false },
    generic:{ diffAware:true, maskInline:true }
  },

  patterns:{
    // yüksek isabet + entropi kontrolü, iki-aşamalı doğrulama
    awsAccessKey: "\\bAKIA[0-9A-Z]{16}\\b",
    awsSecretKey: "(?i)aws_secret(?:_access)?_key\\s*[:=]\\s*([A-Za-z0-9/+=]{40})",
    gcpKeyJson: "\"type\":\\s*\"service_account\"",
    azureConn: "Endpoint=sb:\\/\\/.*?;SharedAccessKeyName=.*?;SharedAccessKey=[A-Za-z0-9/+]{43}=",
    jwt: "\\beyJ[A-Za-z0-9_-]{10,}\\.([A-Za-z0-9_-]{10,})\\.[A-Za-z0-9_-]{10,}\\b",
    oauthClientSecret: "(?i)(client_secret|CLIENT_SECRET)\\s*[:=]\\s*['\\\"][A-Za-z0-9_\\-]{12,}['\\\"]",
    privateKey: "-----BEGIN (RSA|EC|DSA|OPENSSH) PRIVATE KEY-----[\\s\\S]+?-----END \\1 PRIVATE KEY-----",
    genericToken: "(?i)(api[-_ ]?key|token|secret)\\s*[:=]\\s*['\\\"][A-Za-z0-9_\\-]{16,}['\\\"]",
    envLeak: "(?m)^\\s*[A-Z0-9_]{3,32}\\s*=\\s*[^\\n]{6,}$"
  },

  validators:{
    entropyMinBitsPerChar: 3.0,
    jwtValidateHeader:true,
    keyChecksumHeuristics:true
  },

  policy:{
    blockOn:["LEAK"],
    quarantineOn:["LEAK"],
    notify:["ops","policy","compliance"]
  },

  redaction:{
    profile:"generic",    // L21 üzerinden
    maskStyle:"partial"   // ilk/son birkaç karakter bırak
  },

  idempotencyTtlSec: 86400
}

5) Pipeline

Kaynak Seçimi: secret.scan.request veya *.ready/dist.request tetiklenir

Parse: mode=markdown|html|text|diff → uygun ayrıştırıcı

Detect (Pass-1): regex eşleşmeleri + entropi filtresi

Validate (Pass-2): tür-özel doğrulama (JWT header decode, JSON anahtar yapısı, uzunluk/check)

Sınıflandır: SAFE|SUSPICIOUS|LEAK

Maskele & Karar: LEAK → secret.block.distribution + secret.quarantine + secret.rotate.suggest + secret.card

Emit: secret.scan.ready + secret.metrics; hata → secret.alert

6) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → secret.scan.request|*.ready|dist.request → SCAN

SCAN → CLASSIFY → (LEAK) QUARANTINE | (SUSPICIOUS) MASK_ONLY | (SAFE) EMIT

QUARANTINE/MASK_ONLY → EMIT → IDLE

Hata: ALERT → IDLE

7) Kenar Durumlar

Diff modunda yalnız + satırlar taranır; - satırlar referans gösterilir

Büyük dosya (>2MB) → streaming tarama; overlap ile sınır sızıntısı yok

Observer kitlesi: yalnız özet kart, ham bulgular yok

False positive şüphesi: SUSPICIOUS → dağıtım engellenmez ama kart/warn üretilir

Vault/Karantina hatası: dağıtım zaten blok; uyarı quarantine_failed

8) Telemetri
{"secret.metrics":{"scans":5,"leaks":1,"suspicious":1,"blocked":1,"quarantined":1,"avgScanMs":7.4}}

9) Dosya Yapısı
services/livia/secretsLeakScanner.ts
services/livia/lib/secrets/patterns.ts
services/livia/lib/secrets/validators.ts
services/livia/lib/secrets/mask.ts
services/livia/lib/secrets/streamer.ts
services/livia/state/secretScanStore.ts
services/livia/__tests__/secretsLeakScanner.test.ts
cfg/livia.secrets.yaml

10) Test İskeleti

AWS key + JWT → LEAK sınıfı, dağıtım blok + karantina

Diff modunda yalnız eklenen satırlar tarandı

Entropi eşiği düşük ise eşleşme düşer

Idempotency: aynı içerik ikinci kez raporlanmaz

RBAC: observer ham veri görmez

Masking: partial maske biçimi doğru

11) Örnek Akış

postmortem.ready → tarama → AWS key bulundu → block+quarantine+rotate önerildi → L22 dağıtımı durdurdu → L26’a bildirim.

12) SLO

p95 tarama < 15 ms / 64KB

zeroSecretLeakAfterGate = true (dağıtım öncesi sabit kapı)

Yanlış pozitif ≤ %1, yanlış negatif ≤ %1

LIVIA-28 · runbookAutoPilot.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Postmortemlerden (L15), politika notlarından (L23) ve bilgi tabanından (L24) öğrenilmiş runbook adımlarını; incident anında güvenli ve izlenebilir şekilde yarı-otonom işle. Komut seti; cooldown başlat (L16), gate aç (L17), policy rollback/publish (L23), anchor reset (L18), dist.notify (L22), status.post, cache.flush, service.scale vb. Adımlar onay gerektirebilir (L05), etik/uyum kapısından (L26) geçer. Her yürütme idempotent ve audit’li.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601, TZ=Europe/Istanbul

Güvenlik: HMAC/JWT; RBAC: ops|policy yürütür, observer yalnız okur

İdempotency: execKey = incidentId + runbookId + startedAtISO

Observability: spans (rb.load, rb.plan, rb.step, rb.rollback) + metrics

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "runbook.template.updated": {
    "event":"runbook.template.updated","timestamp":"iso8601",
    "runbookId":"rb-latency-slip-hotfix",
    "title":"Latency+Slip Hotfix",
    "steps":[
      {"id":"s1","kind":"cooldown.plan","params":{"scope":"symbol","symbol":"AVAXUSDT","reasonCode":"anomaly"}},
      {"id":"s2","kind":"policy.rollback","params":{"toVersion":"v41"}},
      {"id":"s3","kind":"status.post","params":{"channel":"ops","text":"Rollback uygulandı, izleniyor."}}
    ],
    "requiresApproval":["policy.rollback"]
  },

  "incident.started": {
    "event":"incident.started","timestamp":"iso8601",
    "id":"inc-2025-09-13-1","severity":"high","title":"Slip spike on SG02"
  },

  "incident.closed": {
    "event":"incident.closed","timestamp":"iso8601",
    "id":"inc-2025-09-13-1","resolution":"policy rollback v42→v41","durationMin":37
  },

  "runbook.execute.request": {
    "event":"runbook.execute.request","timestamp":"iso8601",
    "incidentId":"inc-2025-09-13-1","runbookId":"rb-latency-slip-hotfix","dryRun":false
  },

  "approval.result": {
    "event":"approval.result","timestamp":"iso8601",
    "ref":"runbook:rb-latency-slip-hotfix:s2","decision":"granted|rejected|timeout"
  }
}

3) Çıktılar (Out)
{
  "runbook.exec.planned": {
    "event":"runbook.exec.planned","timestamp":"iso8601",
    "execKey":"sha256:...","incidentId":"inc-2025-09-13-1",
    "runbookId":"rb-latency-slip-hotfix",
    "steps":["s1","s2","s3"],"requiresApproval":["s2"]
  },

  "runbook.exec.started": {
    "event":"runbook.exec.started","timestamp":"iso8601",
    "execKey":"sha256:...","startedAt":"iso8601"
  },

  "runbook.step.progress": {
    "event":"runbook.step.progress","timestamp":"iso8601",
    "execKey":"sha256:...","stepId":"s1","status":"ok|blocked|skipped","details":"cooldown plan activated"
  },

  "runbook.step.blocked": {
    "event":"runbook.step.blocked","timestamp":"iso8601",
    "execKey":"sha256:...","stepId":"s2","reason":"approval_required|ethics_denied|timeout","next":"await_approval|rollback"
  },

  "runbook.exec.completed": {
    "event":"runbook.exec.completed","timestamp":"iso8601",
    "execKey":"sha256:...","durationSec":140,"result":"success|partial|failed"
  },

  "runbook.exec.failed": {
    "event":"runbook.exec.failed","timestamp":"iso8601",
    "execKey":"sha256:...","error":"step_timeout|ethics_block|dependency_fail"
  },

  "runbook.card": {
    "event":"runbook.card","timestamp":"iso8601",
    "title":"Runbook Çalışıyor — {runbookId}",
    "body":"s1 tamamlandı • s2 onay bekliyor • s3 sırada.",
    "severity":"info","ttlSec":600
  },

  "runbook.metrics": {
    "event":"runbook.metrics","timestamp":"iso8601",
    "planned":1,"started":1,"completed":1,"failed":0,
    "p95StepMs":210,"blocked":1,"approvals":1
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  library:{
    // eylem-adımı → modül köprüleri
    "cooldown.plan": { bridge:"L16" },
    "defense.gate":  { bridge:"L17" },
    "anchor.reset":  { bridge:"L18" },
    "policy.rollback": { bridge:"L23" },
    "policy.publish":  { bridge:"L23" },
    "status.post":   { bridge:"L22" },
    "dist.notify":   { bridge:"L22" },
    "kb.index":      { bridge:"L24" },
    "cache.flush":   { bridge:"adapter" },
    "service.scale": { bridge:"adapter" }
  },

  approvals:{
    gateway:"LIVIA-05",
    requireFor:["policy.rollback","policy.publish","service.scale>2x"]
  },

  ethics:{ gateway:"LIVIA-26", enforce:true },

  execution:{
    concurrency: 1,
    stepTimeoutSec: 60,
    rollbackOnFail:true,
    dryRunDefault:false
  },

  redaction:{ profile:"generic" },

  idempotencyTtlSec: 86400
}

5) Pipeline

Load/Plan: runbook.template.updated → şablonu kaydet; runbook.execute.request/incident.started ile plan oluştur

Authorize: RBAC; etik/uyum (L26) ön-kontrol; onay gerekiyorsa L05’e step-ref ile gönder

Execute: adım-adım; köprüler üzerinden ilgili modüllere olay yayınla (L16/L17/L18/L22/L23/L24)

Track: her adımda runbook.step.progress|blocked; timeout → failed

Rollback (opsiyonel): başarısız kritik adımda otomatik geri alma

Emit: runbook.exec.(planned|started|completed|failed|card|metrics)

Idempotency: aynı execKey ikinci kez koşmaz; tekrar istek resume modunda değerlendirilir

6) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (incident.started|runbook.execute.request) → PLAN

PLAN → START

START → STEP(s) (sıralı)

STEP → (ok) next | (approval_required) AWAIT_APPROVAL | (error) ROLLBACK

AWAIT_APPROVAL → approval.result (granted→next | rejected→ROLLBACK/COMPLETE(partial))

ROLLBACK → adım/şablon rollback planı → COMPLETE

COMPLETE → emit + store → IDLE

7) Adım Türleri (özet sözleşme)

cooldown.plan → L16 cooldown.plan.proposed

defense.gate → L17 defense.gate.proposed

anchor.reset → L18 anchor.reset.proposed

policy.rollback|publish → L23 onaylı köprü

status.post|dist.notify → L22 format/kanal

kb.index → L24 ingest

cache.flush|service.scale → adapter (komut param doğrulama + dry-run)

8) Kenar Durumlar

Onay gecikmesi: step timeout öncesi AWAIT durumunda card güncellenir

Ethics block: L26 reddederse step blocked → rollback veya atla

Idempotent resume: tekerrür isteklerinde kaldığı adım/sonuçtan devam

Observer: yalnız read-only akış; execute.request yetkisi yok

9) Telemetri
{"runbook.metrics":{"planned":1,"started":1,"completed":1,"failed":0,"p95StepMs":210,"blocked":1,"approvals":1}}

10) Dosya Yapısı
services/livia/runbookAutoPilot.ts
services/livia/lib/runbook/loader.ts
services/livia/lib/runbook/engine.ts
services/livia/lib/runbook/bridges.ts
services/livia/state/runbookStore.ts
services/livia/__tests__/runbookAutoPilot.test.ts
cfg/livia.runbook.yaml

11) Test İskeleti

incident.started → plan/başlat → s1 ok, s2 onay bekler, s3 sırada

Onay geldi → s2 ok → s3 ok → completed

Ethics block → step blocked + rollback

Timeout → failed + rollback

Idempotent resume → kaldığı yerden devam

12) Örnek Akış

18:01 incident başladı → runbook planlandı → s1: cooldown etkin → s2: rollback onaylandı → s3: status.post → completed; card & metrics yayımlandı.

13) SLO

p95 adım çalıştırma < 250 ms (köprü-gidiş)

Onay bekleme dışında toplam yürütme overhead’i minimal

Idempotent tekrar çalıştırma hatası ≈ 0
______________________________________________________________________________________________
LIVIA-29 · chaosTelemetryFuzzer.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Üretimdeki modüllerin (L14–L26) dayanıklılığını ve hata toleransını ölçmek için telemetri akışına kontrollü kaos (sentetik/sahte/bozuk) olaylar enjekte et. Enjeksiyonlar daima işaretli (flagged), izlenebilir, geri alınabilir ve izole (shadow/sandbox) çalışır; gerçek kararları bozmaz. Sadece test amaçlıdır; rapor/puan kartı üretir. I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; TZ=Europe/Istanbul

Güvenlik: HMAC/JWT; RBAC: ops|qa başlatır, policy|observer okur

İdempotency: fuzzKey = campaignId + seed + window + scope

İzlenebilirlik: OpenTelemetry spans (fuzz.plan, fuzz.inject, fuzz.observe, fuzz.report) + metrics

Güvenlik: Chaos etiketleri zorunlu → downstream “shadow”/“chaos” olarak işlenir; L22 dağıtımda “test” olarak ayrılır

2) Girdiler (In) — Zod .strict() şemaları
{
  "fuzzer.plan.request": {
    "event":"fuzzer.plan.request","timestamp":"iso8601",
    "campaignId":"ch-2025-09-13-A",
    "scope":"global|desk|symbol","symbol":"AVAXUSDT|null",
    "modes":["shadow","sandbox"],                 // production data path'e enjekte edilmez
    "durationMin": 20,
    "faults":[
      {"type":"drop","series":"telemetry.slo.status","ratePct":15},
      {"type":"delay","series":"telemetry.anomaly.signal","latencyMs":800},
      {"type":"duplicate","series":"guard.activity.rollup","factor":2},
      {"type":"spike","series":"order.slip.p95","mult":1.4},
      {"type":"drift","series":"lat.p95","slopePctPerMin":1.2},
      {"type":"flatline","series":"feed.gap","holdMin":5},
      {"type":"swap_symbol","from":"AVAXUSDT","to":"SOLUSDT"},
      {"type":"scale","series":"pnl.window.netUSD","mult":0.5}
    ],
    "seed": 42,
    "sloGuards":{"maxBreachAlerts":0},           // prod SLO alarmına düşmeyecek
    "dryRun": false
  },

  "fuzzer.stop.request": {
    "event":"fuzzer.stop.request","timestamp":"iso8601",
    "campaignId":"ch-2025-09-13-A"
  }
}

3) Çıktılar (Out)
{
  "fuzzer.run.started": {
    "event":"fuzzer.run.started","timestamp":"iso8601",
    "campaignId":"ch-2025-09-13-A","fuzzKey":"sha256:...","durationMin":20,
    "modes":["shadow"],"seed":42,"faultCount":8
  },

  "fuzzer.injection.emitted": {
    "event":"fuzzer.injection.emitted","timestamp":"iso8601",
    "campaignId":"ch-2025-09-13-A",
    "series":"telemetry.anomaly.signal","fault":"delay","count":120,
    "flags":{"chaos":true,"shadow":true}
  },

  "fuzzer.run.completed": {
    "event":"fuzzer.run.completed","timestamp":"iso8601",
    "campaignId":"ch-2025-09-13-A","injected":420,"dropped":87,"errors":0
  },

  "fuzzer.report.ready": {
    "event":"fuzzer.report.ready","timestamp":"iso8601",
    "campaignId":"ch-2025-09-13-A",
    "path":"data/fuzzer/2025-09-13/ch-2025-09-13-A/report.md",
    "summary":"Latency↑ + spike/flatline etkisi: L14 compose p95 +7ms; L17 false-trigger=0; L22 DLQ=0.",
    "hash":"sha256:..."
  },

  "fuzzer.card": {
    "event":"fuzzer.card","timestamp":"iso8601",
    "title":"Kaos Testi Tamam — ch-2025-09-13-A",
    "body":"420 enjeksiyon • 0 prod etki • L14 p95 +7ms • L17/L16 stabil.",
    "severity":"info","ttlSec":600
  },

  "fuzzer.alert": {
    "event":"fuzzer.alert","timestamp":"iso8601",
    "level":"warn|error","message":"plan_invalid|inject_failed|stop_timeout|slo_guard_trip"
  },

  "fuzzer.metrics": {
    "event":"fuzzer.metrics","timestamp":"iso8601",
    "campaigns":1,"injected":420,"errors":0,"shadowShare":1.0,
    "p95InjectMs":5.2,"falseTrigger":0,"blockedBySLOGuard":0
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  modes:{ allow:["shadow","sandbox"], default:"shadow" },

  safetyGuards:{
    tagHeaders:{ chaos:true, shadow:true },
    preventDistribution:true,         // L22: prod kanallara gitmez
    protectSLO:true,                  // L14/L23 metrikleri “test” etiketli sayar
    ethicsBypass:true,                // L26'a “lab” etiketiyle bilgi amaçlı; enforcement yok
    maxRuntimeMin:60
  },

  faultDefaults:{
    maxRatePerMin: 60,
    symbolSet:["AVAXUSDT","SOLUSDT","BTCUSDT"],
    scaleBounds:{ min:0.1, max:3.0 }
  },

  output:{
    dir:"data/fuzzer/{YYYY-MM-DD}/{campaignId}",
    reportFile:"report.md", html:{ embedMiniCSS:true, chartsInlineSvg:true }
  },

  idempotencyTtlSec: 86400
}

5) Pipeline

Plan: fuzzer.plan.request doğrula → fault set & tohum (seed) sabitle

Isolate: tüm enjeksiyonlara {chaos:true, shadow:true} bayrağı; üretim kuyruğundan ayrı topic/stream

Inject: fault tipi (drop/delay/duplicate/spike/drift/flatline/swap/scale) uygula

Observe: L14/L16/L17/L22/L23/L26 ölçümlerini “chaos campaign” etiketiyle topla

Report: p95/p99 etkiler, false-trigger oranı, DLQ, SLO guard trip; Markdown/HTML rapor

Emit: fuzzer.run.* + fuzzer.report.ready + fuzzer.card + fuzzer.metrics

Stop: istek gelirse kontrollü sonlandır; kalan enjeksiyonlar iptal

6) FSM

IDLE → plan.request → PLAN

PLAN → INJECT (zamanlayıcı)

INJECT → per-fault akışı → OBSERVE

OBSERVE (rolling) → süresi bitince REPORT

REPORT → emit → IDLE

Hata: ALERT → IDLE

7) Kenar Durumlar

SLO guard trip (yanlışlıkla prod’a etki): otomatik stop + alert

Çakışan campaignId: idempotency → ikinci plan reddi

Aşırı fault oranı: maxRatePerMin klips; delay>2s → sandbox’a zorla

Symbol swap olmayan eşleşme: symbol allowlist dışı ise atla

Observer görünümü: yalnız özet card

8) Telemetri
{"fuzzer.metrics":{"campaigns":1,"injected":420,"errors":0,"p95InjectMs":5.2,"falseTrigger":0}}

9) Dosya Yapısı
services/livia/chaosTelemetryFuzzer.ts
services/livia/lib/fuzz/faults.ts
services/livia/lib/fuzz/isolation.ts
services/livia/lib/fuzz/report.ts
services/livia/state/fuzzStore.ts
services/livia/__tests__/chaosTelemetryFuzzer.test.ts
cfg/livia.fuzz.yaml

10) Test İskeleti

shadow etiketli enjeksiyonlar prod hatlarına karışmıyor

delay+duplicate+spike kombinasyonunda L17/L16 false-trigger=0

idempotency: aynı campaign iki kez koşmuyor

stop.request çalışma ortasında güvenli durdurma

report içeriği: p95 etkiler, DLQ, falseTrigger=0

11) Örnek Akış

14:05 planlandı (20dk) → 14:25 rapor yazıldı → kart dağıtıldı (test kanalı).

12) SLO

p95 enjeksiyon < 10 ms; prod etki 0; rapor p95 < 80 ms

LIVIA-30 · contextAwareMoralLimiter.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Operatör/servis eylemlerinde bilişsel önyargı (overconfidence, loss aversion, sunk cost, risk-seeking-after-loss), yorgunluk (L20), toparlanma (L19), cooldown (L16), etik/uyum (L26) ve piyasa bağlamı sinyallerine göre davranışsal fren uygula. Önce nudge/reflection adımı (checklist + kısa premortem), sonra gerekiyorsa soft block (onay/justification) ve son aşamada policy/ethics kapısına yönlendir. I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; TZ=Europe/Istanbul

Güvenlik: HMAC/JWT; RBAC: ops|policy; observer salt okur

İdempotency: moralKey = actionId + biasSnapshotHash + windowISO

Observability: spans (moral.assess, moral.nudge, moral.block, moral.justify) + metrics

Gizlilik: PII yok; açıklamalar L21 redaksiyonundan geçer

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "action.intent": {
    "event":"action.intent","timestamp":"iso8601",
    "actionId":"act-2025-09-13-42",
    "kind":"order.place|order.modify|policy.change|position.close",
    "scope":"desk|symbol|global","symbol":"AVAXUSDT|null",
    "payload":{"side":"buy","qty":180,"variant":"aggressive","reason":"bounce"}
  },

  "bias.snapshot": {
    "event":"bias.snapshot","timestamp":"iso8601",
    "overconfidence":0.72,"lossAversion":0.66,"sunkCost":0.31,"riskSeeking":0.58
  },

  "fatigue.score.updated": {
    "event":"fatigue.score.updated","timestamp":"iso8601",
    "scope":"desk","operator":"op#abcd12","fatigueScore":0.77
  },

  "recovery.score.updated": {
    "event":"recovery.score.updated","timestamp":"iso8601",
    "scope":"symbol","symbol":"AVAXUSDT","recoveryIndex":0.49
  },

  "cooldown.plan.activated": {
    "event":"cooldown.plan.activated","timestamp":"iso8601",
    "cooldownKey":"...","effectiveUntil":"iso8601","scope":"desk","symbol":null
  },

  "pnl.window": {
    "event":"pnl.window","timestamp":"iso8601",
    "windowMin":240,"netUSD":-480.0,"rrMedian":0.88
  },

  "ethics.gate.activated": {
    "event":"ethics.gate.activated","timestamp":"iso8601",
    "decision":"allow_with_limits|block|halt"
  },

  "moral.justification.submitted": {
    "event":"moral.justification.submitted","timestamp":"iso8601",
    "actionId":"act-2025-09-13-42",
    "premortem":"Bu işlem 15dk içinde -%1 olur ise otomatik çıkış.",
    "checklist":{"maxLossUSD":200,"exitRule":"-0.8% / 10dk","whyNow":"likidite geri geldi"}
  }
}

3) Çıktılar (Out)
{
  "moral.nudge.proposed": {
    "event":"moral.nudge.proposed","timestamp":"iso8601",
    "actionId":"act-2025-09-13-42",
    "biasFlags":["overconfidence","riskSeeking"],
    "message":"Son 4 saatte net -$480 ve recovery düşük (0.49). Varyantı 'balanced' yapmayı dener misin?",
    "suggestedChanges":{"variant":"balanced","qtyFactor":0.7},
    "ttlSec":300
  },

  "moral.reflection.required": {
    "event":"moral.reflection.required","timestamp":"iso8601",
    "actionId":"act-2025-09-13-42",
    "checklist":[
      "Maks kaybın? (USD)",
      "Çıkış kuralın? (yüzde/zaman)",
      "Alternatif daha az riskli yol?"
    ],
    "premortemPrompt":"Bu işlem başarısız olursa en olası 3 sebep nedir?",
    "timeoutSec":120
  },

  "moral.softblock.suggested": {
    "event":"moral.softblock.suggested","timestamp":"iso8601",
    "actionId":"act-2025-09-13-42",
    "reasonCodes":["fatigue_high","recovery_low","pnl_drawdown"],
    "require":"justification|approval","cooldownHint":true
  },

  "moral.pass": {
    "event":"moral.pass","timestamp":"iso8601",
    "actionId":"act-2025-09-13-42","notes":"Nudge kabul edildi; qty ×0.7, variant=balanced"
  },

  "moral.block.delegated": {
    "event":"moral.block.delegated","timestamp":"iso8601",
    "actionId":"act-2025-09-13-42",
    "to":"LIVIA-26","reason":"ethics escalation"
  },

  "moral.card": {
    "event":"moral.card","timestamp":"iso8601",
    "title":"Davranışsal Fren Uygulandı",
    "body":"Nudge: qty ×0.7, variant=balanced • Reflection formu dolduruldu.",
    "severity":"info","ttlSec":600
  },

  "moral.alert": {
    "event":"moral.alert","timestamp":"iso8601",
    "level":"info|warn|error","message":"idem_duplicate|timeout|rbac_denied|ethics_escalated"
  },

  "moral.metrics": {
    "event":"moral.metrics","timestamp":"iso8601",
    "nudges":4,"accepted":3,"softBlocks":1,"escalations":0,
    "avgAssessMs":8.4,"conversionRate":0.75
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  weights:{ bias:0.4, fatigue:0.2, recovery:0.2, pnl:0.2 },

  thresholds:{
    overconfidence: ">=0.7",
    riskSeeking: ">=0.55",
    fatigueHigh: ">=0.8",
    recoveryLow: "<=0.55",
    pnlDrawdownUSD: "<=-300",
    requireReflectionScore: ">=0.65",   // toplam risk skoru
    escalateToEthicsScore: ">=0.85"
  },

  nudgeLibrary:{
    overconfidence:[
      { msg:"Son 24 saatte risk iştahı yüksek. Miktarı %30 azaltmayı dener misin?", change:{ qtyFactor:0.7 } }
    ],
    lossAversion:[
      { msg:"Zararı telafi etme dürtüsüne dikkat. Varyantı 'balanced' seçebilirsin.", change:{ variant:"balanced" } }
    ],
    riskSeeking:[
      { msg:"Kayıp sonrası risk alma artıyor. Pozisyon limit faktörünü düşürelim mi?", change:{ posLimitFactor:0.8 } }
    ]
  },

  reflectionForm:{
    fields:["maxLossUSD","exitRule","whyNow"],
    premortemPrompt:"Bu işlem neden kötü gidebilir? 3 sebep yaz."
  },

  integration:{
    cooldownHint:true,   // L16 'cooldown.plan.proposed' tetik önerisi
    ethics:"LIVIA-26",   // zorunlu escalations
    dist:"LIVIA-22",     // card dağıtımı
    redact:"LIVIA-21"    // justification metinleri
  },

  idempotencyTtlSec: 1800
}

5) Skorlama

riskScore = Σ w_i * factor_i,

biasFactor = max(overconfidence, riskSeeking, lossAversion, sunkCost)

fatigueFactor = fatigueScore

recoveryFactor = 1 - recoveryIndex

pnlFactor = clamp( -netUSD / 500 , 0, 1 ) * clamp( (1-rrMedian)/0.5 , 0, 1 )

6) Pipeline

Assess: action + bias + fatigue + recovery + pnl + cooldown/ethics durumu → riskScore

Decide:

score < requireReflection → moral.nudge.proposed

requireReflection ≤ score < escalate → moral.reflection.required (+ opsiyonel softblock.suggested)

score ≥ escalate → moral.block.delegated (L26)

Collect Justification: moral.justification.submitted → L21 ile redakte → log + karar güncelle

Apply Changes: nudge kabul edildiyse payload tweak (qtyFactor/variant/posLimitFactor) → moral.pass

Emit: card + metrics; idempotency kontrolü

7) FSM

IDLE → action.intent → ASSESS

ASSESS → NUDGE | REFLECT | ESCALATE

NUDGE → (kabul) PASS | (reddet) REFLECT

REFLECT → (form geldi) REASSESS | (timeout) ALERT

ESCALATE → L26 sonucu → PASS/BLOCK

PASS/BLOCK → IDLE

8) Kenar Durumlar

Aktif cooldown/ethics block varken “pass” üretme; yalnız nudge göster

Justification PII → L21 maskele; eksikse red

Observer için kartlar özet ve miktarlar gizli

Aynı actionId tekrar denemesi → idempotency ile tek karar

9) Telemetri
{"moral.metrics":{"nudges":4,"accepted":3,"softBlocks":1,"escalations":0,"avgAssessMs":8.4}}

10) Dosya Yapısı
services/livia/contextAwareMoralLimiter.ts
services/livia/lib/moral/assess.ts
services/livia/lib/moral/nudges.ts
services/livia/lib/moral/reflection.ts
services/livia/state/moralStore.ts
services/livia/__tests__/contextAwareMoralLimiter.test.ts
cfg/livia.moral.yaml

11) Test İskeleti

overconfidence 0.72 + recovery 0.49 + pnl -480 → softblock.suggested

nudge kabul → moral.pass + payload değişikliği

reflection timeout → moral.alert("timeout")

escalate ≥0.85 → moral.block.delegated L26’ya gider

idempotency: aynı action iki kez değerlendirilmez

12) Örnek Akış

action.intent(buy 180 aggressive) + bias/fatigue/pnl/recovery → NUDGE

Operatör qty×0.7, variant=balanced kabul → moral.pass + card

Sonraki girişimde riskScore yüksek → REFLECT → form doldu → PASS

Çok yüksek riskte ESCALATE → L26 kararına göre ilerler

13) SLO

p95 assess < 15 ms

Nudge kabul oranı ≥ %60 (hedef)

Escalation yanlış-pozitif ≤ %2
______________________________________________________________________________________________
LIVIA-31 · runMetricsHousekeeper.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
LIVIA ekosistemindeki tüm zaman serisi ve olay depolarını (metrics/events/digest/postmortem/policy/kb/dist/ethics/fuzz/sim vb.) otomatik bakım ile sağlıklı, hızlı ve hesaplı tutmak: retention, kompaktlama (rollup/aggregate), dedup, checksum/doğrulama, soğuk depoya taşıma (S3/Backblaze/MinIO), indeks optimizasyonu (L24 vektör+BM25), DLQ temizlik & replay planı, disk alanı koruma ve maliyet raporu.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; PII/redaksiyon (L21) ve gizli anahtar taraması (L27) entegre.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601, TZ=Europe/Istanbul

Güvenlik: HMAC/JWT; RBAC: ops|policy başlatır, observer salt okur

Gizlilik: içeriğe dokunmaz; yalnızca metadata/yer değişimi; metin raporları L21 ile redakte

İdempotency: hkKey = taskSet + windowISO + scope + tier

Gözlemlenebilirlik: OpenTelemetry spans (hk.plan, hk.rollup, hk.compact, hk.coldstore, hk.index.optimize, hk.verify) + metrics

Uyum: Ethics/WORM (L26) kayıtlarına dokunulmaz (read-only); yalnız doğrulama ve append-türü bakım yapılır.

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "housekeeping.request": {
    "event":"housekeeping.request","timestamp":"iso8601",
    "mode":"auto|manual",
    "window":{"from":"2025-09-01T00:00:00+03:00","to":"2025-09-14T00:00:00+03:00"},
    "taskSet":["rollup","compact","dedup","ttl_enforce","coldstore","index_optimize","dlq_cleanup","verify"],
    "priority":"low|normal|high",
    "dryRun": false
  },

  "storage.threshold.status": {
    "event":"storage.threshold.status","timestamp":"iso8601",
    "volume":"local-data","freePct":14.2,"bytesFree":15000000000
  },

  "dist.dlq": {
    "event":"dist.dlq","timestamp":"iso8601",
    "deliveryKey":"sha256:...","reason":"permanent_failure","deadLetterPath":"state/dlq/2025-09-13/sha256....json"
  },

  "knowledge.indexed": {
    "event":"knowledge.indexed","timestamp":"iso8601",
    "index":"kb_default","docId":"kb:postmortem:inc-2025-09-13-1","upserted":true
  }
}

3) Çıktılar (Out)
{
  "housekeeping.planned": {
    "event":"housekeeping.planned","timestamp":"iso8601",
    "hkKey":"sha256:...","taskSet":["rollup","ttl_enforce","coldstore","index_optimize"],
    "window":{"from":"2025-09-01","to":"2025-09-14"},
    "targets":{"metrics":8,"events":6,"kbIndex":1,"dlq":1}
  },

  "housekeeping.progress": {
    "event":"housekeeping.progress","timestamp":"iso8601",
    "hkKey":"sha256:...","task":"coldstore","status":"running",
    "details":"postmortem/2025-07 → s3://archive/postmortem/2025-07 (zstd:19, parquet)"
  },

  "housekeeping.completed": {
    "event":"housekeeping.completed","timestamp":"iso8601",
    "hkKey":"sha256:...","tasksOk":["rollup","compact","ttl_enforce","index_optimize","verify"],
    "bytesFreed": 8240000000,"filesMoved": 312,"dlqReplayed": 18,
    "reportPath":"data/reports/housekeeping/2025-09-14/report.md","hash":"sha256:..."
  },

  "housekeeping.alert": {
    "event":"housekeeping.alert","timestamp":"iso8601",
    "level":"warn|error","message":"coldstore_unavailable|checksum_mismatch|worm_protected|index_optimize_failed|low_space",
    "context":{"path":"data/ethics/2025-06/chain.log"}
  },

  "housekeeping.metrics": {
    "event":"housekeeping.metrics","timestamp":"iso8601",
    "planned":1,"completed":1,"failed":0,
    "p95PlanMs":42,"p95ExecMs":920,
    "bytesFreed":8240000000,"filesCompacted":540,"filesArchived":312,
    "indexOptimized":{"vector":1,"bm25":1},
    "costEstimateUSD":4.12
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  retention: {
    // sıcak→ılık→soğuk dereceli saklama
    "metrics.timeseries": { hotDays: 14, warmDays: 60, coldDays: 365, keepForever:false },
    "events.raw":         { hotDays: 14, warmDays: 90, coldDays: 365, keepForever:false },
    "digest":             { hotDays: 90, warmDays: 365, coldDays: 0,  keepForever:true },
    "postmortem":         { hotDays: 365, warmDays: 3650, coldDays: 0, keepForever:true },
    "policy":             { hotDays: 365, warmDays: 3650, coldDays: 0, keepForever:true },
    "knowledge.index":    { hotDays: 365, warmDays: 0,   coldDays: 0,  keepForever:true },
    "ethics.worm":        { hotDays: 0,   warmDays: 0,   coldDays: 0,  keepForever:true } // dokunma
  },

  compaction: {
    // zaman serilerinde downsample/rollup
    timeseries: [
      { from: "5s", to: "1m", agg:["min","max","avg","p95"] },
      { from: "1m", to: "5m", agg:["min","max","avg","p95"] },
      { from: "5m", to: "1h", agg:["min","max","avg","p95"] }
    ],
    fileFormat: "parquet",
    compression: { codec:"zstd", level: 11 }
  },

  dedup: {
    // event loglarında aynı hash/ts ±1s ise tek kopya
    tsToleranceSec: 1
  },

  coldstore: {
    enabled:true,
    provider:"s3|b2|minio",
    bucket:"archive",
    prefix:"livia",
    multipartChunkMB: 32,
    storageClass:"STANDARD_IA|GLACIER",
    encryptAtRest:true
  },

  indexOptimize: {
    knowledge: { vector:true, bm25:true, vacuum:true, reindexIfFragPct: 0.2 }
  },

  dlq: {
    replay: { enabled:true, maxPerRun:50, backoffMs: 500 },
    ttlDays: 30
  },

  diskGuard: {
    minFreePct: 15,
    emergencyTasks:["ttl_enforce","coldstore","compact"]
  },

  schedule: {
    dailyAt:"03:30",          // hafif saatlerde çalış
    weeklyDeepAt:"Sun 04:30"  // derin optimizasyon
  },

  redactionProfile: "generic",   // L21
  scanSecretsBeforeArchive: true, // L27

  idempotencyTtlSec: 86400
}

5) Kapsam & Hedef Path Haritası

Timeseries & Metrics: data/metrics/{yyyymmdd}/*.parquet → rollup/compact

Raw Events: data/events/{stream}/{yyyymmdd}/*.jsonl → dedup + zstd

Artifacts: data/digest/*, data/postmortem/*, data/policy/* → coldstore (sıcak kopya indeksi kalır)

Knowledge Index (L24): state/kb/* → vector/BM25 vacuum & optimize

DLQ (L22): state/dlq/*/*.json → replay planı + TTL silme

Ethics/WORM (L26): state/ethics/worm/* → salt okunur doğrulama, asla sil/taşıma yok

6) Pipeline (Kompozisyon)

Plan: retention & diskGuard & taskSet → hedef listesi ve sıralama (acil görevler önce)

Rollup/Compact: timeseries → hedef çözünürlüklere downsample + Parquet/ZSTD; eski parça → kaldır

Dedup: events jsonl → sha256(line) & ts toleransıyla tekilleştir

TTL Enforce: retention penceresini aşan hot→warm→cold taşıma veya silme (keepForever= true ise dokunma)

Coldstore: büyük/kadim dosyaları S3/B2/MinIO’ya multipart yükle; checksum doğrula; yerelden kaldır

Index Optimize (L24): vektör & BM25 vacuum, frag>threshold → reindex; knowledge.metrics güncelle

DLQ Cleanup/Replay (L22): TTL > N gün olanları sil; replay etkinse sınırlı dene; başarılar silinir

Verify: sha256 ve byte sayımları; örnekleme ile okuma testleri; rapora yaz

Report/Emit: housekeeping.completed, housekeeping.metrics, rapor (Markdown+HTML) + kart (L22 için)

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (housekeeping.request | schedule) → PLAN

PLAN → EXEC (görev sırası: emergency→rollup→dedup→ttl→coldstore→index→dlq→verify)

EXEC → adım adım housekeeping.progress → VERIFY

VERIFY → EMIT (completed + rapor) → IDLE

Hata: her adımda ALERT + IDLE (kısmi başarı raporlanır)

8) Kenar Durumlar

Low disk space: freePct < minFreePct → emergencyTasks yalnız; coldstore zorunlu

Coldstore unavailable: coldstore_unavailable uyarısı; yerel compress+quarantine ile geçici park

Checksum mismatch: yeniden yükle; 2. kez de hatada ALERT ve park

Ethics/WORM: taşıma/silme girişimi → worm_protected uyarısı; yalnız verify yap

Secrets present: arşive giden dosya L27 sızıntı verirse block + secret.quarantine

Busy hours: high priority değilse throttle; p95 exec limitlerine saygı

Idempotency: aynı hkKey → ikinci çalıştırma planlanmaz

9) Telemetri
{
  "housekeeping.metrics": {
    "event":"housekeeping.metrics","timestamp":"iso8601",
    "planned":1,"completed":1,"failed":0,
    "p50ExecMs":540,"p95ExecMs":920,
    "bytesFreed":8240000000,"filesCompacted":540,"filesArchived":312,
    "dlqReplayed":18,"indexOptimized":{"vector":1,"bm25":1},
    "costEstimateUSD":4.12,"lowSpaceAuto":true
  }
}

10) Dosya Yapısı (öneri)
services/livia/runMetricsHousekeeper.ts          # FSM + orchestrator
services/livia/lib/hk/retention.ts               # planlama & TTL
services/livia/lib/hk/rollup.ts                  # timeseries downsample/compact
services/livia/lib/hk/dedup.ts                   # event jsonl tekilleştirme
services/livia/lib/hk/coldstore.ts               # s3/b2/minio adapter
services/livia/lib/hk/verify.ts                  # checksum & sample read
services/livia/lib/hk/indexOptimize.ts           # L24 köprüsü (vector/BM25)
services/livia/lib/hk/dlq.ts                     # L22 DLQ temizlik & replay
services/livia/lib/redact.ts                     # L21 köprüsü (rapor)
services/livia/state/housekeeperStore.ts         # idem index + geçmiş raporlar
services/livia/__tests__/runMetricsHousekeeper.test.ts
cfg/livia.housekeeping.yaml

11) Test İskeleti (Jest/Vitest)

Retention/TTL: hot→warm→cold geçişleri doğru; keepForever klasörlerine dokunulmadı

Rollup: 5s→1m→5m→1h seviyeleri Parquet’te doğru agg’lerle üretildi

Dedup: ±1s aynı event tek kopya kaldı

Coldstore: multipart upload + checksum doğrulandı; yerel silindi

Index Optimize: frag>%20 → reindex tetiklendi; knowledge.metrics güncellendi

DLQ Replay: en fazla 50 replay; başarılar temizlendi, TTL aşanlar silindi

Low Space: emergencyTasks çalıştı; bytesFreed>0

Secrets Block: arşive gidecek dosyada sızıntı → secret.quarantine + housekeeping.alert

Idempotency: aynı hkKey ikinci çalıştırmayı önledi

12) Örnek Akış (kısa)

03:30 cron → PLAN (low space tespit) → EXEC: ttl_enforce→coldstore→compact→index_optimize→dlq_cleanup → VERIFY → rapor yazıldı → housekeeping.completed + kart (L22) dağıtıldı.

13) SLO

p95 EXEC < 15 dk (derin haftalık bakım) / p95 günlük < 3 dk

checksum mismatch < %0.1

zero data loss (doğrulama başarısızsa kaldırma yok)

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-32 · realtimeUptimeSLOGuard.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Canlı besleme/servislerin uptime & tazelik SLO’larını anlık izleyip burn-rate (hata bütçesi tüketim hızı) üzerinden erken uyarı ve otomatik koruma uygula: çok pencereli (5m/1h/6h/24h) değerlendirme, failover (yedek feed/endpoint), degrade (özellik kıstırma), gate (L17) ve cooldown (L16) entegrasyonu; etik/uyuma (L26) uygun, dağıtım (L22) ve digest (L14) dostu çıktı. Tüm I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; TZ=Europe/Istanbul; pencereler: tumbling/sliding (konfig ile)

Güvenlik: HMAC/JWT; RBAC: ops|policy okur, yazım sistem

Gizlilik: PII yok; serbest metinler L21 ile redakte

İdempotency: sloGuardKey = serviceId + sloKind + triggerType + windowStartISO

Observability: OpenTelemetry spans (slo.collect, slo.eval, slo.trigger, slo.recover) + metrics

Uyum: L17 (gate), L16 (cooldown), L22 (dist), L14 (digest), L23 (policy), L26 (ethics) köprüleri

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "probe.http.result": {
    "event":"probe.http.result","timestamp":"iso8601",
    "serviceId":"order_api|auth_api|kb_api|feed_ws|feed_rest",
    "endpoint":"https://api.example.com/health",
    "ok":true,"status":200,"latencyMs":120
  },

  "feed.tick": {
    "event":"feed.tick","timestamp":"iso8601",
    "serviceId":"feed_ws","symbol":"AVAXUSDT",
    "lagMs": 420, "gapMs": 0
  },

  "heartbeat.missed": {
    "event":"heartbeat.missed","timestamp":"iso8601",
    "serviceId":"feed_ws","missedCount":1,"expectedEveryMs":5000
  },

  "error.event": {
    "event":"error.event","timestamp":"iso8601",
    "serviceId":"order_api","kind":"5xx|timeout|circuit_open",
    "details":"503 from upstream", "count":1
  },

  "circuit.state": {
    "event":"circuit.state","timestamp":"iso8601",
    "serviceId":"order_api","state":"open|half_open|closed","reason":"5xx_spike"
  },

  "failover.done": {
    "event":"failover.done","timestamp":"iso8601",
    "serviceId":"feed_ws","from":"primary","to":"secondary","latencyImpactMs":+40
  },

  "telemetry.slo.status": {
    "event":"telemetry.slo.status","timestamp":"iso8601",
    "slo":"uptime_feed|uptime_order_api|data_freshness|latency_p95",
    "state":"ok|at_risk|breach","window":"5m|1h|6h|24h","burnPct": 7.5
  }
}

3) Çıktılar (Out)
{
  "slo.guard.triggered": {
    "event":"slo.guard.triggered","timestamp":"iso8601",
    "serviceId":"feed_ws","slo":"uptime_feed",
    "windows":{"5m":{"avail":99.1,"burn":15.0},"1h":{"avail":99.6,"burn":6.2}},
    "trigger":"multi_window_burn",
    "actionPlan":{"failover":"secondary","degrade":["drop_optional_metrics"],"gate":"rate_limit"},
    "severity":"high","hash":"sha256:..."
  },

  "slo.guard.recovered": {
    "event":"slo.guard.recovered","timestamp":"iso8601",
    "serviceId":"feed_ws","slo":"uptime_feed",
    "since":"2025-09-13T18:22:00+03:00","durationMin":18,
    "actionsReverted":["rate_limit","degrade"],"failback":"primary"
  },

  "slo.guard.earlywarn": {
    "event":"slo.guard.earlywarn","timestamp":"iso8601",
    "serviceId":"order_api","slo":"uptime_order_api",
    "windows":{"5m":{"avail":99.7,"burn":8.0}},
    "hint":"If 1h burn > 6x threshold, trigger will fire."
  },

  "slo.guard.card": {
    "event":"slo.guard.card","timestamp":"iso8601",
    "title":"SLO Guard — feed_ws (burn 15×/5m)",
    "body":"Failover→secondary, gate rate-limit, optional metrics kapalı; gözlem sürüyor.",
    "severity":"warn","ttlSec":600
  },

  "slo.guard.alert": {
    "event":"slo.guard.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|calc_error|no_budget|failover_failed|circuit_open|recovery_timeout"
  },

  "slo.guard.metrics": {
    "event":"slo.guard.metrics","timestamp":"iso8601",
    "evaluated":320,"triggers":3,"recoveries":2,"earlyWarn":5,
    "p95EvalMs":6.4,"failovers":2,"gates":1,"degrades":2
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  services: {
    feed_ws: {
      sloTargets:{ uptime: 99.9, freshnessLagMsP95: 800 },
      errorBudgetDays: 30,
      windows:["5m","1h","6h","24h"],
      // Google SRE tarzı çok pencereli tetikleyiciler (örnek değerler)
      burnThresholds:{ "5m": 14.4, "1h": 6.0, "6h": 3.0, "24h": 1.0 },
      actions:{
        failover:{ to:"secondary" },
        degrade:{ drop:["optional_metrics","low_priority_topics"] },
        gate:{ type:"rate_limit", perMin: 60 }
      }
    },
    order_api: {
      sloTargets:{ uptime: 99.95, latencyP95Ms: 900 },
      errorBudgetDays: 30,
      windows:["5m","1h","6h","24h"],
      burnThresholds:{ "5m": 10.0, "1h": 5.0, "6h": 2.5, "24h": 1.0 },
      actions:{
        circuit:{ policy:"open_on_5xx_spike" },
        gate:{ type:"shed_load", dropPct: 0.2 },
        degrade:{ drop:["advanced_routes"] }
      }
    }
  },

  evaluation: {
    slideEverySec: 5,
    calcMode:"fast_ewma|exact",
    minSamplesPerWindow: 5,
    freshnessMetric: "lagMs",  // feed.tick üzerinden
    availabilityFrom: { httpProbe: true, heartbeat: true, errorEvent: true, circuit: true }
  },

  integrations: {
    gate: "LIVIA-17",     // rate-limit / shed-load
    cooldown: "LIVIA-16", // davranışsal uzun etkilerde
    dist: "LIVIA-22",     // kart/uyarı dağıt
    digest: "LIVIA-14",   // günlük özet
    policy: "LIVIA-23",   // kalıcı değişiklik önerisi
    ethics: "LIVIA-26"    // kritik bloklara etik onayı (gerekirse)
  },

  failover: {
    enable:true, prefer:"secondary", autoFailback:true,
    guard:{ minStableMin: 10, maxFailoverPerHour: 3 }
  },

  recovery: {
    stableAfterMin: 15, // bu süre boyunca burn<threshold
    revertActions:["gate","degrade"], // failback ayrıca kontrol edilir
    recoveryTimeoutMin: 60
  },

  idempotencyTtlSec: 3600
}

5) Hesaplama (özet)

Availability(window) = ok_samples / total_samples (probe+heartbeat+error sinyallerinden birleşik)

Error budget = 1 - SLO_target

Burn-rate(window) = (1 - availability(window)) / error_budget

Trigger kuralı: herhangi bir pencerede burn ≥ burnThresholds[window] → trigger

Early warn: en kısa pencerede burn ≥ 0.5 × threshold ve trend ↑ → earlywarn

Freshness (lag): p95(lagMs) > hedef → availability=0 gibi değerlendirilir (feed için)

6) Pipeline (Kompozisyon)

Collect: probe.http.result, feed.tick, heartbeat.missed, error.event, circuit.state

Aggregate: pencere başına availability & lag/latency metriklerini güncelle

Evaluate: burn-rate çok pencereli; earlywarn/trigger kararı

Plan Actions: failover/degrade/gate/circuit → etik (L26) gerektiriyorsa kontrol

Enforce: L17/L16 köprüleri ile uygulama; başarısızlıkta retry/backoff

Recover: stabilite sağlanınca eylemleri geri al; failback uygula

Emit: slo.guard.(triggered|recovered|earlywarn|card|metrics|alert); digest’e (L14) sinyal

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (data tick/slide) → EVAL

EVAL → (burn≥thr) TRIGGER | (warn) EARLYWARN | (ok && actionsActive) RECOVER_CHECK | else IDLE

TRIGGER → ENFORCE (failover/degrade/gate) → MONITOR

MONITOR → (stable≥N min) RECOVER | (timeout) ALERT(recovery_timeout)

RECOVER → revert + failback → IDLE

Hata: her adımda ALERT; idem koruması → aynı pencere & tetikte ikinci tetik yok

8) Kenar Durumlar

Örnek azlığı: minSamplesPerWindow altında → pencere “belirsiz”; yalnız earlywarn üretilir

Akış kaybı (flatline): heartbeat yok + probe yok → availability 0’a çekilir (fail-fast)

Üst üste failover: maxFailoverPerHour aşıldı → sadece degrade/gate

Sahte negatif risk: HTTP 200 ama feed lag yüksek → freshness p95 hedefi ihlal ise availability=0 gibi say

Çok yüksek burn kısa pencerede, uzun pencere normal: failover+gate sınırlı süre uygula; 6h pencere koruyucu

Circuit open: order_api için gate/degrade otomatik devrede; RECOVER’de half-open testleri geçerse failback

RBAC/observer: yalnız özet kart; teknik ayrıntı maskeli

Idempotency: aynı sloGuardKey ikinci kez eylem doğurmaz; yalnız card refresh

9) Telemetri
{
  "slo.guard.metrics": {
    "event":"slo.guard.metrics","timestamp":"iso8601",
    "evaluated":320,"triggers":3,"recoveries":2,"earlyWarn":5,
    "p50EvalMs":3.1,"p95EvalMs":6.4,
    "failovers":2,"gates":1,"degrades":2,
    "stableRecoverMinAvg":16
  }
}

10) Dosya Yapısı (öneri)
services/livia/realtimeUptimeSLOGuard.ts        # FSM + evaluator + enforcer
services/livia/lib/slo/aggregator.ts            # pencere metrik toplayıcı
services/livia/lib/slo/burn.ts                  # burn-rate hesaplayıcı
services/livia/lib/slo/actions.ts               # failover/degrade/gate/circuit
services/livia/lib/redact.ts                    # LIVIA-21 köprüsü
services/livia/lib/bridges.ts                   # L16/L17/L22/L23/L26 köprüleri
services/livia/state/sloGuardStore.ts           # idem index + aktif eylemler
services/livia/__tests__/realtimeUptimeSLOGuard.test.ts
cfg/livia.slo.guard.yaml

11) Test İskeleti (Jest/Vitest)

Burn 5m=15×, 1h=6.2×: trigger + failover + gate → card

Freshness p95>target: availability=0 sayıldı, trigger üretildi

Earlywarn: 5m burn 0.6×thr → earlywarn + card, trigger yok

Recovery: 15dk stabil → actions reverted + failback

Circuit open: order_api 5xx spike → circuit open + degrade; half-open sonrası recover

Idempotency: aynı pencere tetik tekrar eylem doğurmadı

Failover limiti: 1 saatte 4. deneme reddedildi, degrade ile yetindi

Low samples: minSamples altı → yalnız earlywarn

RBAC/observer: özet kartta teknik ayrıntı yok

12) Örnek Akış (kısa)

14:02 feed lag p95 ↑, probe 5xx → 5m burn=15× → TRIGGER: failover→secondary, gate rate-limit, optional metrics drop

14:20 stabil → RECOVER: gate/degrade kaldır, 14:25 failback→primary → slo.guard.recovered

Gün sonu L14 digest “SLO: at_risk→ok, 1 trigger, 1 recovery” özetini içerir.

13) SLO

p95 evaluate < 10 ms / pencere

yanlış tetik (false positive) ≤ %1; kaçırma (false negative) ≤ %1

recovery MTTR ≤ 20 dk (failover+gate ile)

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-33 · incidentDrillScheduler.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Gerçek olaylara hazırlanmak için düzenli tatbikatlar (drill/game-day) planlayıp yürütmek: senaryo seç, kaos enjeksiyonu (L29) veya sentetik olay üret, isteğe bağlı runbook yürüt (L28), ekip tepkisini ölç (TTD/TTA/TTR), puan kartı/rapor üret, liderlik tablosu güncelle, özeti dağıt (L22) ve KB’ye indeksle (L24). Tüm I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; üretimde güvenli/izole (“DRILL/SHADOW”) çalışır.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel pencere 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: qa|ops|policy başlatır/okur; observer sınırlı okur

Gizlilik: PII yok; serbest metinler LIVIA-21 ile redakte

İdempotency: drillKey = campaignId + scenarioSlug + forDate + mode

Observability: OpenTelemetry spans (drill.plan, drill.inject, drill.run, drill.score, drill.report) + metrics

Güvenli Modlar: shadow|sandbox (default) — prod karar/iş akışlarını etkilemez; live_fire sadece L05 onayı + L26 uygunluk ile

2) Girdiler (In) — Zod .strict() şemaları
{
  "drill.template.updated": {
    "event":"drill.template.updated","timestamp":"iso8601",
    "scenarioSlug":"feed-lag-canary-failover",
    "title":"Feed Lag → Canary Failover",
    "difficulty":"easy|medium|hard",
    "steps":[
      {"id":"t1","kind":"inject", "params":{"fault":{"type":"spike","series":"feed.lagMs","mult":1.8}}},
      {"id":"t2","kind":"expect", "params":{"signal":"slo.guard.triggered","withinMin":10}},
      {"id":"t3","kind":"runbook", "params":{"runbookId":"rb-latency-slip-hotfix","optional":true}}
    ],
    "successCriteria":{"TTA_min":10,"TTR_min":30,"expectSignals":["slo.guard.triggered","slo.guard.recovered"]}
  },

  "drill.plan.request": {
    "event":"drill.plan.request","timestamp":"iso8601",
    "campaignId":"dr-2025-09-15-A",
    "forDate":"2025-09-15","mode":"shadow|sandbox|live_fire",
    "scope":"global|desk|symbol","symbol":"AVAXUSDT|null",
    "scenarioSlug":"feed-lag-canary-failover",
    "notify":["ops","policy"],"stealth":false,"dryRun":false
  },

  "drill.run.request": {
    "event":"drill.run.request","timestamp":"iso8601",
    "campaignId":"dr-2025-09-15-A","startAt":"2025-09-15T14:05:00+03:00"
  },

  "calendar.blackout": {
    "event":"calendar.blackout","timestamp":"iso8601",
    "windows":[{"from":"09:55","to":"10:15"},{"from":"22:00","to":"07:00"}],
    "reason":"market open|night ops"
  },

  "incident.started": {
    "event":"incident.started","timestamp":"iso8601",
    "id":"inc-2025-09-15-1","severity":"high","title":"(real) slip spike"
  }
}

3) Çıktılar (Out)
{
  "drill.planned": {
    "event":"drill.planned","timestamp":"iso8601",
    "drillKey":"sha256:...","campaignId":"dr-2025-09-15-A",
    "scenarioSlug":"feed-lag-canary-failover","mode":"shadow",
    "startAt":"2025-09-15T14:05:00+03:00",
    "flags":{"DRILL":true,"SHADOW":true}
  },

  "drill.run.started": {
    "event":"drill.run.started","timestamp":"iso8601",
    "drillKey":"sha256:...","campaignId":"dr-2025-09-15-A",
    "steps":["t1","t2","t3"],"participants":["ops","policy"]
  },

  "drill.injection.emitted": {
    "event":"drill.injection.emitted","timestamp":"iso8601",
    "campaignId":"dr-2025-09-15-A",
    "via":"LIVIA-29","fault":{"type":"spike","series":"feed.lagMs","mult":1.8},
    "count":120,"flags":{"DRILL":true,"SHADOW":true}
  },

  "drill.step.progress": {
    "event":"drill.step.progress","timestamp":"iso8601",
    "campaignId":"dr-2025-09-15-A","stepId":"t2",
    "status":"ok|timeout|skipped","details":"slo.guard.triggered within 6m"
  },

  "drill.run.completed": {
    "event":"drill.run.completed","timestamp":"iso8601",
    "campaignId":"dr-2025-09-15-A",
    "result":"success|partial|failed",
    "kpis":{"TTD_sec":180,"TTA_sec":240,"TTR_min":22,"falsePositive":0},
    "score":86
  },

  "drill.report.ready": {
    "event":"drill.report.ready","timestamp":"iso8601",
    "campaignId":"dr-2025-09-15-A",
    "path":"data/drills/2025-09/dr-2025-09-15-A/report.md",
    "summary":"TTD 3dk • TTA 4dk • TTR 22dk • Beklenen sinyaller karşılandı • Skor 86/100.",
    "hash":"sha256:..."
  },

  "drill.leaderboard.updated": {
    "event":"drill.leaderboard.updated","timestamp":"iso8601",
    "period":"2025-Q3","entries":[{"team":"ops","avgScore":82.4},{"team":"policy","avgScore":79.1}]
  },

  "drill.card": {
    "event":"drill.card","timestamp":"iso8601",
    "title":"Tatbikat Tamam — dr-2025-09-15-A",
    "body":"Skor 86 • TTA 4dk • TTR 22dk • Beklenen sinyaller karşılandı.",
    "severity":"info","ttlSec":900
  },

  "drill.alert": {
    "event":"drill.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|blackout|real_incident_overlap|approval_required|ethics_denied|inject_failed|timeout"
  },

  "drill.metrics": {
    "event":"drill.metrics","timestamp":"iso8601",
    "planned":1,"started":1,"completed":1,"failed":0,
    "avgScore":86,"p95TTD_sec":220,"p95TTA_sec":300,"p95TTR_min":28
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  schedule:{
    cronWeekly:"Wed 14:00",         // haftalık tatbikat
    notifyBeforeMin: 15,
    avoidBlackouts:true,
    cancelOnRealIncident:true
  },

  modes:{
    default:"shadow",
    allow:["shadow","sandbox","live_fire"], // live_fire → L05 + L26 zorunlu
    liveFireGuards:{ maxPerQuarter:1, requireApprovers:["policy-lead","compliance-lead"] }
  },

  scoring:{
    weights:{ TTD:0.25, TTA:0.25, TTR:0.30, playbook:0.10, comms:0.05, signals:0.05 },
    bands:{ success: "score>=80", partial: "60<=score<80", failed: "<60" },
    srtTargets:{ TTD_sec:240, TTA_sec:300, TTR_min:30 }  // SRT = service response targets
  },

  integrations:{
    fuzzer:"LIVIA-29",
    runbook:"LIVIA-28",
    dist:"LIVIA-22",
    kb:"LIVIA-24",
    digest:"LIVIA-14",
    ethics:"LIVIA-26",
    approvals:"LIVIA-05"
  },

  redactionProfile:"generic",   // L21
  idempotencyTtlSec: 86400
}

5) KPI & Skor Hesabı (özet)

TTD (Time-to-Detect): ilk beklenen sinyalin (örn. slo.guard.triggered) drill başlangıcından süresi

TTA (Time-to-Acknowledge): ilk insan/onay/komut geri bildirimi (approval.granted|runbook.exec.started)

TTR (Time-to-Resolve): drill.successCriteria.expectSignals tamamlanana kadar süre (örn. slo.guard.recovered)

Playbook Uyum: L28 adımlarının zamanında/sıralı çalışması (% tamamlama)

Comms: L22 ile bilgilendirme sayısı/latency (ops/policy kanalları)

Signals: beklenen sinyallerin oranı (tam/eksik)

Skor = normalize(KPI) ⋅ weights → 0–100

6) Pipeline (Kompozisyon)

Plan: drill.plan.request veya weekly cron → blackout ve gerçek olay takvimiyle çakışma kontrolü → drill.planned

Authorize: live_fire ise L05 onay + L26 ethics; aksi halde DRILL/SHADOW bayrakları zorunlu

Inject: L29 ile kaos/sentetik olaylar (işaretli) veya yalnız “bekle-ve-doğrula” senaryoları

Runbook (opsiyonel): L28 ile şablon adımları tetikle (dryRun varsayılan)

Observe: Sinyal yakalama (L32/L17/L16/L23/L22 olay akışından)

Score: KPI’ları topla, başarı durumunu ve puanı hesapla

Report: Markdown/HTML rapor oluştur; L21 redaksiyon; dosyaya yaz

Distribute & Index: drill.card → L22; rapor → L24 KB

Emit Metrics: drill.metrics + dönemlik drill.leaderboard.updated

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (drill.plan.request | schedule) → PLAN

PLAN → (blackout/real incident?) CANCEL | else ARM

ARM → (drill.run.request | startAt reached) → INJECT

INJECT → (ok) OBSERVE | (inject_failed) ALERT

OBSERVE → (criteria met) SCORE | (timeout) SCORE(partial/failed)

SCORE → REPORT → EMIT → IDLE

Hata: her adımda drill.alert(...) + IDLE

8) Kenar Durumlar

Gerçek Olay Çakışması: incident.started geldiyse drill hemen iptal (cancel) + uyarı

Blackout Penceresi: plan/başlangıç blackout’a denk gelirse otomatik erteleme

Live-fire: yalnız explicit onay + etik geçiş ile; tüm eylemler geri alınabilir; riskli adımlar dryRun’a düşürülebilir

Katılımcı Bilgilendirme: stealth=false ise start’tan 15dk önce L22 ile uyarı kartı; stealth=true ise sadece QA/policy

İdempotent Plan: aynı drillKey ikinci kez planlanmaz; start çağrıları resume davranır

Veri Etkisi: DRILL/SHADOW bayrakları digest (L14) içinde ayrı raporlanır; prod KPI’lara katılmaz

9) Telemetri
{
  "drill.metrics": {
    "event":"drill.metrics","timestamp":"iso8601",
    "planned":1,"started":1,"completed":1,"failed":0,
    "avgScore":86,"p50TTD_sec":180,"p95TTD_sec":220,
    "p95TTA_sec":300,"p95TTR_min":28,"reports":1
  }
}

10) Dosya Yapısı (öneri)
services/livia/incidentDrillScheduler.ts        # FSM + scheduler + scorer
services/livia/lib/drill/templates.ts           # senaryo şablonları
services/livia/lib/drill/inject.ts              # L29 köprüsü
services/livia/lib/drill/observe.ts             # sinyal toplayıcı (L32/L17/L16/L23/L22)
services/livia/lib/drill/score.ts               # KPI & puan
services/livia/lib/drill/report.ts              # md/html raporlayıcı
services/livia/lib/redact.ts                    # LIVIA-21 köprüsü
services/livia/state/drillStore.ts              # idem index + leaderboard
services/livia/__tests__/incidentDrillScheduler.test.ts
cfg/livia.drill.yaml

11) Test İskeleti (Jest/Vitest)

Plan/Blackout: blackout penceresinde plan iptal/erteleme

Inject: L29 spike/delay/duplicate ile işaretli enjeksiyon; prod akış etkilenmedi

Observe: beklenen sinyaller bulundu; timeout senaryosunda partial/failed

Runbook: L28 adımları çalıştı; onay varsa gateway ile tamamlandı

Score: KPI→skor ağırlıkları doğru; success/partial/failed bandları

Report: md/html yazıldı; L24’e indekslendi; L22 kart dağıtıldı

Idempotency: aynı drillKey tekrar planlanmadı; run çağrısı resume etti

Live-fire güvenliği: L05/L26 onayı olmadan başlamaz

12) Örnek Akış (kısa)

Çar 14:00 otomatik plan → 14:05 start → L29 spike enjekte → 6 dk’da slo.guard.triggered → L28 runbook s1 tamam → 22 dk’da slo.guard.recovered → skor 86 → rapor yazıldı → kart dağıtıldı → KB’ye işlendi.

13) SLO

p95 plan→start koordinasyonu < 200 ms

yanlış pozitif prod etkisi = 0 (DRILL/SHADOW ayrımı)

Rapor üretim p95 < 90 ms

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-34 · realtimeCostGuard.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Bulut/LLM/vektör indeks/dağıtım/depolama maliyetlerini anlık izleyip bütçe/SLO hedeflerine göre erken uyarı ve otomatik frenleme uygulamak: çok pencereli (1h/6h/24h/7d) harcama-burn analizi, tahmin/forecast, aksiyon planı (downgrade, throttle, batch, erteleme), rapor ve kart üretimi. L22 (dağıtım), L24 (KB), L31 (housekeeper), L23 (policy), L26 (etik) ve L29/L33 (test/drill verisi ayırma) ile entegre. Tüm I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; TZ=Europe/Istanbul; pencereler: sliding (varsayılan)

Güvenlik: HMAC/JWT; RBAC: ops|policy|finance okur; yazım sistem

Gizlilik: PII yok; rapor metinleri L21 ile redakte

İdempotency: costGuardKey = scope + component + trigger + windowStartISO

Observability: OpenTelemetry spans (cost.collect, cost.eval, cost.plan, cost.enforce, cost.recover) + metrics

2) Girdiler (In) — Zod .strict() şemaları
{
  "billing.usage.sample": {
    "event":"billing.usage.sample","timestamp":"iso8601",
    "provider":"aws|gcp|azure|openai|local|vector|dist|storage",
    "component":"embeddings|reranker|vector_query|vector_upsert|dist_push|html_render|coldstore_put|compute_min",
    "unit":"tokens|req|GB|GB_day|min",
    "qty": 125000,
    "pricePerUnit": 0.0000005,
    "tags":{"namespace":"kb_default","channel":"slack|webhook|ui","DRILL":false,"SHADOW":false}
  },

  "billing.estimate.update": {
    "event":"billing.estimate.update","timestamp":"iso8601",
    "provider":"openai|vector|storage",
    "component":"embeddings|vector_query|coldstore_put",
    "window":"1h|6h|24h|7d",
    "estimateUSD": 12.34,
    "method":"ewma|mvavg|provider_report"
  },

  "provider.rate.update": {
    "event":"provider.rate.update","timestamp":"iso8601",
    "provider":"openai|vector|s3|slack","component":"embeddings|vector_query|coldstore_put|webhook",
    "unit":"tokens|req|GB|GB_day|min","pricePerUnit": 0.00000045,"currency":"USD"
  },

  "budget.config.updated": {
    "event":"budget.config.updated","timestamp":"iso8601",
    "scope":"global|desk|symbol","symbol":"AVAXUSDT|null",
    "period":"daily|weekly|monthly",
    "component":"*|embeddings|vector_query|dist_push|storage|compute|misc",
    "limitUSD": 150.0,
    "softGuardPct": 0.7, "hardGuardPct": 0.9
  },

  "job.cost.estimate": {
    "event":"job.cost.estimate","timestamp":"iso8601",
    "job":"kb.reindex|digest.compose|sim.run|dist.broadcast",
    "component":"vector_upsert|embeddings|html_render|dist_push",
    "expectedUSD": 4.20, "canDefer": true, "deadlineISO":"2025-09-16T03:00:00+03:00"
  },

  "dist.sent": {
    "event":"dist.sent","timestamp":"iso8601",
    "channel":"slack|webhook|email|ui","bytes": 24500,"messages": 3
  },

  "kb.query.executed": {
    "event":"kb.query.executed","timestamp":"iso8601",
    "namespace":"kb_default","mode":"hybrid|lexical|vector","topK":8,"reranker":true
  }
}


Not: tags.DRILL/SHADOW = true (L29/L33) olan ölçümler default olarak bütçe dışı raporlanır.

3) Çıktılar (Out)
{
  "cost.guard.triggered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "scope":"global","component":"embeddings",
    "windows":{"1h":{"spendUSD":6.2,"burnPct":1.8},"24h":{"spendUSD":92.4,"burnPct":0.93}},
    "budget":{"period":"daily","limitUSD":100,"softGuardPct":0.7,"hardGuardPct":0.9},
    "trigger":"hard_guard_cross|forecast_breach|rate_spike",
    "actionPlan":{
      "downgrade":{"model":"text-embedding-3-small"},
      "reduce":{"kb.topK":6,"bm25K":30},
      "disable":{"reranker":true},
      "batch":{"embeddings.batch":32},
      "deferJobs":["kb.reindex"]
    },
    "severity":"high","hash":"sha256:..."
  },

  "cost.guard.recovered": {
    "event":"cost.guard.recovered","timestamp":"iso8601",
    "scope":"global","component":"embeddings",
    "since":"2025-09-15T14:10:00+03:00","durationMin":26,
    "actionsReverted":["reranker_disable","topK_reduce"],"jobsResumed":["kb.reindex"]
  },

  "cost.guard.earlywarn": {
    "event":"cost.guard.earlywarn","timestamp":"iso8601",
    "scope":"global","component":"vector_query",
    "windows":{"6h":{"spendUSD":18.1,"burnPct":0.68}},
    "hint":"7d trend EWMA yukarı; topK=8→6 ve reranker kapatma ile %28 düşüş öngörülüyor."
  },

  "cost.report.ready": {
    "event":"cost.report.ready","timestamp":"iso8601",
    "period":"daily","forDate":"2025-09-15",
    "path":"data/cost/2025-09-15/report.md",
    "summary":"Günlük harcama $128 • Embeddings $92 (−%19 aksiyon sonrası) • Vector $24 • Dist $6 • Storage $6.",
    "hash":"sha256:..."
  },

  "cost.guard.card": {
    "event":"cost.guard.card","timestamp":"iso8601",
    "title":"Maliyet Guard — Embeddings (hard %90 aşıldı)",
    "body":"Model downgraded • topK 8→6 • reranker kapalı • reindex ertelendi.",
    "severity":"warn","ttlSec":900
  },

  "cost.guard.alert": {
    "event":"cost.guard.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|unknown_rate|forecast_error|enforce_failed|rbac_denied|ethics_denied"
  },

  "cost.guard.metrics": {
    "event":"cost.guard.metrics","timestamp":"iso8601",
    "evaluated":420,"triggers":3,"recoveries":2,"earlyWarn":6,
    "p95EvalMs":6.2,"savingsUSD":28.4,"jobsDeferred":2,"actions":{"downgrade":2,"reduce":3,"disable":2,"batch":2}
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul", currency:"USD" },

  windows:["1h","6h","24h","7d"],

  budgets:{
    daily:{ limitUSD: 100, softGuardPct: 0.7, hardGuardPct: 0.9 },
    weekly:{ limitUSD: 500, softGuardPct: 0.7, hardGuardPct: 0.9 },
    monthly:{ limitUSD: 2000, softGuardPct: 0.7, hardGuardPct: 0.9 }
  },

  perComponent:{
    embeddings:{ sharePctMaxDaily: 0.55, allowDowngrade:true, minBatch:16, maxBatch:64 },
    vector_query:{ topKDefault:8, topKMin:4, allowDisableReranker:true },
    vector_upsert:{ maxPerHour: 20000, deferIfHardGuard:true },
    dist_push:{ throttlePerMin: 30, bigMsgBytes: 48_000, dropChannels:["webhook"] },
    storage:{ preferColdstore:true, forceCompression:true },
    compute:{ capMinPerDay: 120 },
    html_render:{ limitRendersPerHr: 200 }
  },

  forecast:{
    method:"ewma",
    alpha:0.3,
    horizonHours:24,
    includeRates:true
  },

  exclusions:{
    drillShadowExclude:true,     // L29/L33 DRILL|SHADOW → bütçe dışı
    namespaces:["kb_default"]    // opsiyonel dahil/dışla listesi
  },

  actions:{
    downgrade:{ embeddings:{ model:"text-embedding-3-small" } },
    reduce:{ "kb.topK":6, "bm25K":30 },
    disable:{ reranker:true },
    batch:{ "embeddings.batch":32 },
    deferJobs:["kb.reindex","sim.run"],   // L24/L25
    throttle:{ "dist.push.perMin": 20 }
  },

  integrations:{
    dist:"LIVIA-22",
    kb:"LIVIA-24",
    housekeeping:"LIVIA-31",
    policy:"LIVIA-23",
    ethics:"LIVIA-26"
  },

  evaluation:{
    slideEverySec:5,
    minSamplesPerWindow:3,
    currency:"USD",
    rateFallback: { defaultPricePerUnit: 0.0 }   // oran bilinmezse estimate-only
  },

  idempotencyTtlSec: 3600
}

5) Hesaplama (özet)

Spend(window) = Σ(qty × pricePerUnit) [DRILL/SHADOW hariç]

Budget burn(window, period) = SpendPeriod / LimitPeriod

Forecast breach = EWMA(trend) ile t+H dönemde %soft|%hard aşım olasılığı > eşiğe gelirse erken uyarı

Rate spike = pricePerUnit değişimi %Δ > eşiğe → tetik

Savings estimate = aksiyon planı simülasyonuyla (topK↓, reranker off, downgrade, batch↑) düşüş yüzdesi

6) Pipeline (Kompozisyon)

Collect: billing.usage.sample|estimate.update|provider.rate.update|job.cost.estimate|dist.sent|kb.query.executed

Normalize: oran/para birimi; DRILL/SHADOW etiketli örnekleri ayrıştır

Aggregate: pencere ve dönem bazında spend/burn + EWMA forecast

Evaluate: soft/hard guard, forecast_breach, rate_spike kuralları

Plan Actions: perComponent + global actions birleşimi; çakışma varsa en maliyet düşürücü yol

Enforce:

L24: kb.search parametrelerini (topK/reranker) düşür

Embeddings: model downgrade + batch ayarı

L22: kanal throttle/drop (webhook gibi masraflı)

L31: coldstore+compression zorunlu

L23: kalıcı politika önerisi gerekiyorsa patch öner

L26: kritik kesintiler (ör. full disable) etik kapıdan geçer

Recover: burn normale dönünce aksiyonları geri al; ertelenen işleri sırala

Report: günlük cost.report.ready (MD/HTML) + kart; KB’ye indeksle (L24)

Emit: cost.guard.(triggered|recovered|earlywarn|card|metrics|alert)

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (veri akışı/slide) → EVAL

EVAL → (hard/soft/forecast/spike) TRIGGER | (warn) EARLYWARN | (ok && actionsActive) RECOVER_CHECK | else IDLE

TRIGGER → ENFORCE (downgrade/reduce/disable/batch/defer/throttle) → MONITOR

MONITOR → (stable≥N) RECOVER | (timeout) ALERT(enforce_failed)

RECOVER → revert + jobs resume → IDLE

Hata: ALERT + IDLE

8) Kenar Durumlar

Unknown rate: rateFallback.defaultPricePerUnit ile estimate; unknown_rate uyarısı

Provider credit/negatif satır: negatif qty×price → ayrı credits hanesine yaz; burn’den düş

Geç gelen faturalama: geriye dönük düzeltmeler → “retroactive” olarak işaretlenir; idempotency ile çift sayım yok

DRILL/SHADOW: bütçe dışında rapor; yine de cost.report’ta ayrı bölüm

Aşırı throttle riski: L32 SLO Guard ile çelişirse throttle derecesi düşür; SLO ≥ hedef korunur

Policy gerekiyorsa: kalıcı değişim (model/param) için L23’e patch önerisi

Finance görünümü: RBAC finance rolü tüm kalemleri görür; observer özet görür

Idempotency: aynı costGuardKey için ikinci tetik eylem doğurmaz; yalnız card yenilenir

9) Telemetri
{
  "cost.guard.metrics": {
    "event":"cost.guard.metrics","timestamp":"iso8601",
    "evaluated":420,"triggers":3,"recoveries":2,"earlyWarn":6,
    "p50EvalMs":3.0,"p95EvalMs":6.2,
    "savingsUSD":28.4,"jobsDeferred":2,
    "actions":{"downgrade":2,"reduce":3,"disable":2,"batch":2,"throttle":1}
  }
}

10) Dosya Yapısı (öneri)
services/livia/realtimeCostGuard.ts             # FSM + evaluator + enforcer
services/livia/lib/cost/aggregator.ts           # pencere & dönem toplama
services/livia/lib/cost/forecast.ts             # EWMA/MVAVG tahmin
services/livia/lib/cost/actions.ts              # downgrade/reduce/disable/batch/throttle/defer
services/livia/lib/cost/rates.ts                # provider rate cache & update
services/livia/lib/bridges.ts                   # L22/L24/L31/L23/L26 entegrasyonları
services/livia/state/costGuardStore.ts          # idem index + aktif aksiyonlar
services/livia/__tests__/realtimeCostGuard.test.ts
cfg/livia.cost.guard.yaml

11) Test İskeleti (Jest/Vitest)

Hard guard: günlük $100 limit, spend $92 + forecast $105 → trigger + aksiyon planı

Rate spike: price +%30 → trigger (reduce+downgrade)

Early warn: 6h burn 0.68 → earlywarn + öneri

Recover: burn < soft → aksiyonlar geri alındı, ertelenen işler devam

Unknown rate: fallback estimate + alert

DRILL/SHADOW: bütçe dışı; raporda ayrı

SLO uyumu: throttle SLO ile çelişmedi; L32 sinyalleriyle downgrade hafifletildi

Idempotency: aynı pencere tetikte tekrar eylem yok

RBAC: finance tam, observer özet görünür

12) Örnek Akış (kısa)

13:40 embeddings spend artışı → 24h burn 0.93 & forecast breach → TRIGGER

Aksiyon: model downgrade, topK 8→6, reranker off, reindex defer → card

14:10–14:36 harcama hızı düşer → RECOVER: parametreler geri, reindex süresi planlanır

Gün sonu cost.report.ready → L22 dağıtım, L24 indeks.

13) SLO

p95 evaluate < 10 ms / pencere

Yanlış tetik ≤ %1, kaçırma ≤ %1

Tasarruf etki (plan sonrası 1h) ≥ %15 hedefi

Idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-34 · realtimeCostGuard.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Bulut/LLM/vektör indeks/dağıtım/depolama maliyetlerini anlık izleyip bütçe/SLO hedeflerine göre erken uyarı ve otomatik frenleme uygulamak: çok pencereli (1h/6h/24h/7d) harcama-burn analizi, tahmin/forecast, aksiyon planı (downgrade, throttle, batch, erteleme), rapor ve kart üretimi. L22 (dağıtım), L24 (KB), L31 (housekeeper), L23 (policy), L26 (etik) ve L29/L33 (test/drill verisi ayırma) ile entegre. Tüm I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; TZ=Europe/Istanbul; pencereler: sliding (varsayılan)

Güvenlik: HMAC/JWT; RBAC: ops|policy|finance okur; yazım sistem

Gizlilik: PII yok; rapor metinleri L21 ile redakte

İdempotency: costGuardKey = scope + component + trigger + windowStartISO

Observability: OpenTelemetry spans (cost.collect, cost.eval, cost.plan, cost.enforce, cost.recover) + metrics

2) Girdiler (In) — Zod .strict() şemaları
{
  "billing.usage.sample": {
    "event":"billing.usage.sample","timestamp":"iso8601",
    "provider":"aws|gcp|azure|openai|local|vector|dist|storage",
    "component":"embeddings|reranker|vector_query|vector_upsert|dist_push|html_render|coldstore_put|compute_min",
    "unit":"tokens|req|GB|GB_day|min",
    "qty": 125000,
    "pricePerUnit": 0.0000005,
    "tags":{"namespace":"kb_default","channel":"slack|webhook|ui","DRILL":false,"SHADOW":false}
  },

  "billing.estimate.update": {
    "event":"billing.estimate.update","timestamp":"iso8601",
    "provider":"openai|vector|storage",
    "component":"embeddings|vector_query|coldstore_put",
    "window":"1h|6h|24h|7d",
    "estimateUSD": 12.34,
    "method":"ewma|mvavg|provider_report"
  },

  "provider.rate.update": {
    "event":"provider.rate.update","timestamp":"iso8601",
    "provider":"openai|vector|s3|slack","component":"embeddings|vector_query|coldstore_put|webhook",
    "unit":"tokens|req|GB|GB_day|min","pricePerUnit": 0.00000045,"currency":"USD"
  },

  "budget.config.updated": {
    "event":"budget.config.updated","timestamp":"iso8601",
    "scope":"global|desk|symbol","symbol":"AVAXUSDT|null",
    "period":"daily|weekly|monthly",
    "component":"*|embeddings|vector_query|dist_push|storage|compute|misc",
    "limitUSD": 150.0,
    "softGuardPct": 0.7, "hardGuardPct": 0.9
  },

  "job.cost.estimate": {
    "event":"job.cost.estimate","timestamp":"iso8601",
    "job":"kb.reindex|digest.compose|sim.run|dist.broadcast",
    "component":"vector_upsert|embeddings|html_render|dist_push",
    "expectedUSD": 4.20, "canDefer": true, "deadlineISO":"2025-09-16T03:00:00+03:00"
  },

  "dist.sent": {
    "event":"dist.sent","timestamp":"iso8601",
    "channel":"slack|webhook|email|ui","bytes": 24500,"messages": 3
  },

  "kb.query.executed": {
    "event":"kb.query.executed","timestamp":"iso8601",
    "namespace":"kb_default","mode":"hybrid|lexical|vector","topK":8,"reranker":true
  }
}


Not: tags.DRILL/SHADOW = true (L29/L33) olan ölçümler default olarak bütçe dışı raporlanır.

3) Çıktılar (Out)
{
  "cost.guard.triggered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "scope":"global","component":"embeddings",
    "windows":{"1h":{"spendUSD":6.2,"burnPct":1.8},"24h":{"spendUSD":92.4,"burnPct":0.93}},
    "budget":{"period":"daily","limitUSD":100,"softGuardPct":0.7,"hardGuardPct":0.9},
    "trigger":"hard_guard_cross|forecast_breach|rate_spike",
    "actionPlan":{
      "downgrade":{"model":"text-embedding-3-small"},
      "reduce":{"kb.topK":6,"bm25K":30},
      "disable":{"reranker":true},
      "batch":{"embeddings.batch":32},
      "deferJobs":["kb.reindex"]
    },
    "severity":"high","hash":"sha256:..."
  },

  "cost.guard.recovered": {
    "event":"cost.guard.recovered","timestamp":"iso8601",
    "scope":"global","component":"embeddings",
    "since":"2025-09-15T14:10:00+03:00","durationMin":26,
    "actionsReverted":["reranker_disable","topK_reduce"],"jobsResumed":["kb.reindex"]
  },

  "cost.guard.earlywarn": {
    "event":"cost.guard.earlywarn","timestamp":"iso8601",
    "scope":"global","component":"vector_query",
    "windows":{"6h":{"spendUSD":18.1,"burnPct":0.68}},
    "hint":"7d trend EWMA yukarı; topK=8→6 ve reranker kapatma ile %28 düşüş öngörülüyor."
  },

  "cost.report.ready": {
    "event":"cost.report.ready","timestamp":"iso8601",
    "period":"daily","forDate":"2025-09-15",
    "path":"data/cost/2025-09-15/report.md",
    "summary":"Günlük harcama $128 • Embeddings $92 (−%19 aksiyon sonrası) • Vector $24 • Dist $6 • Storage $6.",
    "hash":"sha256:..."
  },

  "cost.guard.card": {
    "event":"cost.guard.card","timestamp":"iso8601",
    "title":"Maliyet Guard — Embeddings (hard %90 aşıldı)",
    "body":"Model downgraded • topK 8→6 • reranker kapalı • reindex ertelendi.",
    "severity":"warn","ttlSec":900
  },

  "cost.guard.alert": {
    "event":"cost.guard.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|unknown_rate|forecast_error|enforce_failed|rbac_denied|ethics_denied"
  },

  "cost.guard.metrics": {
    "event":"cost.guard.metrics","timestamp":"iso8601",
    "evaluated":420,"triggers":3,"recoveries":2,"earlyWarn":6,
    "p95EvalMs":6.2,"savingsUSD":28.4,"jobsDeferred":2,"actions":{"downgrade":2,"reduce":3,"disable":2,"batch":2}
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul", currency:"USD" },

  windows:["1h","6h","24h","7d"],

  budgets:{
    daily:{ limitUSD: 100, softGuardPct: 0.7, hardGuardPct: 0.9 },
    weekly:{ limitUSD: 500, softGuardPct: 0.7, hardGuardPct: 0.9 },
    monthly:{ limitUSD: 2000, softGuardPct: 0.7, hardGuardPct: 0.9 }
  },

  perComponent:{
    embeddings:{ sharePctMaxDaily: 0.55, allowDowngrade:true, minBatch:16, maxBatch:64 },
    vector_query:{ topKDefault:8, topKMin:4, allowDisableReranker:true },
    vector_upsert:{ maxPerHour: 20000, deferIfHardGuard:true },
    dist_push:{ throttlePerMin: 30, bigMsgBytes: 48_000, dropChannels:["webhook"] },
    storage:{ preferColdstore:true, forceCompression:true },
    compute:{ capMinPerDay: 120 },
    html_render:{ limitRendersPerHr: 200 }
  },

  forecast:{
    method:"ewma",
    alpha:0.3,
    horizonHours:24,
    includeRates:true
  },

  exclusions:{
    drillShadowExclude:true,     // L29/L33 DRILL|SHADOW → bütçe dışı
    namespaces:["kb_default"]    // opsiyonel dahil/dışla listesi
  },

  actions:{
    downgrade:{ embeddings:{ model:"text-embedding-3-small" } },
    reduce:{ "kb.topK":6, "bm25K":30 },
    disable:{ reranker:true },
    batch:{ "embeddings.batch":32 },
    deferJobs:["kb.reindex","sim.run"],   // L24/L25
    throttle:{ "dist.push.perMin": 20 }
  },

  integrations:{
    dist:"LIVIA-22",
    kb:"LIVIA-24",
    housekeeping:"LIVIA-31",
    policy:"LIVIA-23",
    ethics:"LIVIA-26"
  },

  evaluation:{
    slideEverySec:5,
    minSamplesPerWindow:3,
    currency:"USD",
    rateFallback: { defaultPricePerUnit: 0.0 }   // oran bilinmezse estimate-only
  },

  idempotencyTtlSec: 3600
}

5) Hesaplama (özet)

Spend(window) = Σ(qty × pricePerUnit) [DRILL/SHADOW hariç]

Budget burn(window, period) = SpendPeriod / LimitPeriod

Forecast breach = EWMA(trend) ile t+H dönemde %soft|%hard aşım olasılığı > eşiğe gelirse erken uyarı

Rate spike = pricePerUnit değişimi %Δ > eşiğe → tetik

Savings estimate = aksiyon planı simülasyonuyla (topK↓, reranker off, downgrade, batch↑) düşüş yüzdesi

6) Pipeline (Kompozisyon)

Collect: billing.usage.sample|estimate.update|provider.rate.update|job.cost.estimate|dist.sent|kb.query.executed

Normalize: oran/para birimi; DRILL/SHADOW etiketli örnekleri ayrıştır

Aggregate: pencere ve dönem bazında spend/burn + EWMA forecast

Evaluate: soft/hard guard, forecast_breach, rate_spike kuralları

Plan Actions: perComponent + global actions birleşimi; çakışma varsa en maliyet düşürücü yol

Enforce:

L24: kb.search parametrelerini (topK/reranker) düşür

Embeddings: model downgrade + batch ayarı

L22: kanal throttle/drop (webhook gibi masraflı)

L31: coldstore+compression zorunlu

L23: kalıcı politika önerisi gerekiyorsa patch öner

L26: kritik kesintiler (ör. full disable) etik kapıdan geçer

Recover: burn normale dönünce aksiyonları geri al; ertelenen işleri sırala

Report: günlük cost.report.ready (MD/HTML) + kart; KB’ye indeksle (L24)

Emit: cost.guard.(triggered|recovered|earlywarn|card|metrics|alert)

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (veri akışı/slide) → EVAL

EVAL → (hard/soft/forecast/spike) TRIGGER | (warn) EARLYWARN | (ok && actionsActive) RECOVER_CHECK | else IDLE

TRIGGER → ENFORCE (downgrade/reduce/disable/batch/defer/throttle) → MONITOR

MONITOR → (stable≥N) RECOVER | (timeout) ALERT(enforce_failed)

RECOVER → revert + jobs resume → IDLE

Hata: ALERT + IDLE

8) Kenar Durumlar

Unknown rate: rateFallback.defaultPricePerUnit ile estimate; unknown_rate uyarısı

Provider credit/negatif satır: negatif qty×price → ayrı credits hanesine yaz; burn’den düş

Geç gelen faturalama: geriye dönük düzeltmeler → “retroactive” olarak işaretlenir; idempotency ile çift sayım yok

DRILL/SHADOW: bütçe dışında rapor; yine de cost.report’ta ayrı bölüm

Aşırı throttle riski: L32 SLO Guard ile çelişirse throttle derecesi düşür; SLO ≥ hedef korunur

Policy gerekiyorsa: kalıcı değişim (model/param) için L23’e patch önerisi

Finance görünümü: RBAC finance rolü tüm kalemleri görür; observer özet görür

Idempotency: aynı costGuardKey için ikinci tetik eylem doğurmaz; yalnız card yenilenir

9) Telemetri
{
  "cost.guard.metrics": {
    "event":"cost.guard.metrics","timestamp":"iso8601",
    "evaluated":420,"triggers":3,"recoveries":2,"earlyWarn":6,
    "p50EvalMs":3.0,"p95EvalMs":6.2,
    "savingsUSD":28.4,"jobsDeferred":2,
    "actions":{"downgrade":2,"reduce":3,"disable":2,"batch":2,"throttle":1}
  }
}

10) Dosya Yapısı (öneri)
services/livia/realtimeCostGuard.ts             # FSM + evaluator + enforcer
services/livia/lib/cost/aggregator.ts           # pencere & dönem toplama
services/livia/lib/cost/forecast.ts             # EWMA/MVAVG tahmin
services/livia/lib/cost/actions.ts              # downgrade/reduce/disable/batch/throttle/defer
services/livia/lib/cost/rates.ts                # provider rate cache & update
services/livia/lib/bridges.ts                   # L22/L24/L31/L23/L26 entegrasyonları
services/livia/state/costGuardStore.ts          # idem index + aktif aksiyonlar
services/livia/__tests__/realtimeCostGuard.test.ts
cfg/livia.cost.guard.yaml

11) Test İskeleti (Jest/Vitest)

Hard guard: günlük $100 limit, spend $92 + forecast $105 → trigger + aksiyon planı

Rate spike: price +%30 → trigger (reduce+downgrade)

Early warn: 6h burn 0.68 → earlywarn + öneri

Recover: burn < soft → aksiyonlar geri alındı, ertelenen işler devam

Unknown rate: fallback estimate + alert

DRILL/SHADOW: bütçe dışı; raporda ayrı

SLO uyumu: throttle SLO ile çelişmedi; L32 sinyalleriyle downgrade hafifletildi

Idempotency: aynı pencere tetikte tekrar eylem yok

RBAC: finance tam, observer özet görünür

12) Örnek Akış (kısa)

13:40 embeddings spend artışı → 24h burn 0.93 & forecast breach → TRIGGER

Aksiyon: model downgrade, topK 8→6, reranker off, reindex defer → card

14:10–14:36 harcama hızı düşer → RECOVER: parametreler geri, reindex süresi planlanır

Gün sonu cost.report.ready → L22 dağıtım, L24 indeks.

13) SLO

p95 evaluate < 10 ms / pencere

Yanlış tetik ≤ %1, kaçırma ≤ %1

Tasarruf etki (plan sonrası 1h) ≥ %15 hedefi

Idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-35 · featureFlagOrchestrator.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
LIVIA ekosisteminde özellik bayrakları (feature flags), kanarya/percentage rollout, deney varyantları ve uzaktan konfig’i güvenli, izlenebilir, idempotent ve etik/uyum kurallarıyla uyumlu biçimde orkestre etmek.
Bayraklar; kural tabanlı (segment/koşul), yapışkan (sticky hashing), zaman pencereli, bağımlılık/önkoşul destekli. Otomatik geri alma tetikleri SLO Guard (L32) ve Cost Guard (L34) ile bağlanır. Kart/uyarı L22, KB indeksleme L24, politika değişimi L23, etik/uyum L26, kaos/drill L29/L33 ile entegredir.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; OpenTelemetry; RBAC + HMAC/JWT.

1) Standartlar

Runtime: Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT, RBAC: policy|ops yazabilir, qa|observer sınırlı okur

Gizlilik: PII yok; subject kimlikleri salt’lı hash ile yapışkan; serbest metinler L21 ile redakte

İdempotency: flagKey = flagId + version + env + rolloutStage

Observability: Spans (ff.define,ff.publish,ff.eval,ff.rollout,ff.rollback) + metrics

Uyum: Hassas bayraklar L26 etik kapısından geçer; audit kayıtları append-only (WORM benzeri)

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "feature.flag.define": {
    "event":"feature.flag.define","timestamp":"iso8601",
    "flagId":"kb.hybridSearch.v2",
    "title":"KB Hybrid Search v2",
    "env":"dev|staging|prod",
    "variants":[{"name":"off"},{"name":"on"},{"name":"canary"}],
    "defaultVariant":"off",
    "rules":[
      {
        "when":"env==prod && segment in ['ops','policy'] && time.between('09:00','21:00')",
        "bucket":{"stickyBy":"subject","saltRef":"daily","percent":10,"variant":"canary"}
      }
    ],
    "dependencies":["kb.index.ready==true"],
    "killSwitch": {"enabled":true},
    "sensitive": true,
    "owner":"policy-lead",
    "tags":["kb","experiment","cost_sensitive"]
  },

  "feature.flag.update": {
    "event":"feature.flag.update","timestamp":"iso8601",
    "flagId":"kb.hybridSearch.v2","env":"prod",
    "patch":{
      "rules.append":[
        {"when":"segment=='ops' && region in ['eu-central','eu-west']",
         "bucket":{"stickyBy":"subject","saltRef":"static","percent":25,"variant":"on"}}
      ],
      "defaultVariant":"off"
    },
    "reason":"canary→%25"
  },

  "feature.flag.publish": {
    "event":"feature.flag.publish","timestamp":"iso8601",
    "flagId":"kb.hybridSearch.v2","env":"prod","version":"v3",
    "rolloutPlan":{"steps":[{"percent":10},{"percent":25},{"percent":50},{"percent":100}],"minStableMin":15}
  },

  "feature.flag.kill": {
    "event":"feature.flag.kill","timestamp":"iso8601",
    "flagId":"kb.hybridSearch.v2","env":"prod","reason":"slo_guard_trigger"
  },

  "segment.update": {
    "event":"segment.update","timestamp":"iso8601",
    "segments":{
      "ops":{"match":{"role":"ops"}},
      "policy":{"match":{"role":"policy"}},
      "observer":{"match":{"role":"observer"}}
    }
  },

  "feature.flag.evaluate.request": {
    "event":"feature.flag.evaluate.request","timestamp":"iso8601",
    "flagId":"kb.hybridSearch.v2","env":"prod",
    "context":{
      "subject":{"id":"user#9f3a","role":"ops","region":"eu-central"},
      "scope":"global|desk|symbol","symbol":"AVAXUSDT|null",
      "timeISO":"iso8601","extras":{"namespace":"kb_default"}
    },
    "want":"variant|bool|config",
    "cacheOk": true
  },

  "slo.guard.triggered": {
    "event":"slo.guard.triggered","timestamp":"iso8601",
    "serviceId":"kb_api","slo":"latency_p95","severity":"high","hash":"sha256:..."
  },

  "cost.guard.triggered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "component":"vector_query","severity":"high"
  }
}


Not: feature.flag.define/update/publish/kill → policy rolü; sensitive:true bayraklar publish/kill öncesi L26 kontrolü ister.

3) Çıktılar (Out)
{
  "feature.flag.evaluate.ready": {
    "event":"feature.flag.evaluate.ready","timestamp":"iso8601",
    "flagId":"kb.hybridSearch.v2","env":"prod",
    "decision":{"variant":"canary","enabled":true,"config":{"topK":8,"reranker":false}},
    "reasonCodes":["rule_match","bucket_hit","dependency_ok"],
    "sticky":{"by":"subject","bucket":"murmur3","slot":4213,"percent":10,"saltRef":"daily"},
    "ttlSec":300,"hash":"sha256:..."
  },

  "feature.flag.rollout.started": {
    "event":"feature.flag.rollout.started","timestamp":"iso8601",
    "flagId":"kb.hybridSearch.v2","env":"prod","version":"v3",
    "plan":{"steps":[10,25,50,100],"minStableMin":15}
  },

  "feature.flag.rollout.progress": {
    "event":"feature.flag.rollout.progress","timestamp":"iso8601",
    "flagId":"kb.hybridSearch.v2","env":"prod","step":{"percent":25},"nextInMin":15
  },

  "feature.flag.rollback": {
    "event":"feature.flag.rollback","timestamp":"iso8601",
    "flagId":"kb.hybridSearch.v2","env":"prod","toVersion":"v2","reason":"slo_guard_trigger"
  },

  "feature.flag.killed": {
    "event":"feature.flag.killed","timestamp":"iso8601",
    "flagId":"kb.hybridSearch.v2","env":"prod","reason":"kill_switch"
  },

  "feature.flag.card": {
    "event":"feature.flag.card","timestamp":"iso8601",
    "title":"Feature Flag — kb.hybridSearch.v2",
    "body":"Prod %25 canary aktif • 15dk stabil sonra %50.",
    "severity":"info","ttlSec":600
  },

  "feature.flag.alert": {
    "event":"feature.flag.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|rbac_denied|ethics_denied|dependency_missing|rollout_blocked|kill_switch|eval_error"
  },

  "feature.flag.metrics": {
    "event":"feature.flag.metrics","timestamp":"iso8601",
    "flags":48,"evals":18420,"p95EvalMs":0.9,"cacheHitRate":0.83,
    "rollouts":{"started":3,"progressed":8,"completed":2,"rollback":1},
    "kills":1,"autoRollbackBySLO":1,"autoRollbackByCost":1
  }
}

4) Konfig (varsayılanlar)
{
  i18n: { locale:"tr-TR", tz:"Europe/Istanbul" },

  envs: ["dev","staging","prod"],

  stickiness: {
    hash: "murmur3_128",
    subjectKey: "subject.id|ip|deviceId",   // sırayla ilk mevcut olan
    salts: { static:"static-salt", daily:"rotate-daily", weekly:"rotate-weekly" },
    rotateStrategy: "graceful",             // eski atamayı koru; yalnız yeni subject'ler yeni tuzla
    slots: 10000
  },

  evaluator: {
    dslVersion: "v1",
    functions: ["env","segment","region","time.between","scope","symbol","percentBucket","dependency"],
    defaultVariant: "off",
    cacheTtlSec: 300
  },

  rollout: {
    minStableMin: 15,
    abortOn: { sloGuard:true, costGuard:true },
    autoResume: false
  },

  dependencies: {
    // bayrak veya sistem koşulu
    "kb.index.ready": { probe:"kb_index_status", timeoutMs: 1500 }
  },

  ethics: {
    requireForSensitive: true,     // L26
    categories: { cost_sensitive:true, user_visible:true }
  },

  audit: {
    wormDir: "state/flags/worm/{YYYY-MM-DD}",
    hashChainFile: "chain.log"
  },

  distro: { channels:["ui","slack"], redactProfile:"generic" }, // L22 + L21
  knowledge: { index:true, tag:"flags" },                       // L24

  idempotencyTtlSec: 86400
}

5) Değerlendirme DSL (özet)

İfade örnekleri:

env==prod && segment in ['ops','policy'] && percentBucket(10,'subject','daily')

region in ['eu-central'] && time.between('09:00','21:00')

dependency('kb.index.ready') == true

Çıktı: variant, enabled:boolean, opsiyonel config (örn. topK, reranker:false).

Bucketleme: slot = murmur3(salt + subjectKey) % slots; slot < percent/100*slots ⇒ hit.

6) Pipeline (Kompozisyon)

Define/Update: feature.flag.define|update → Zod .strict() doğrula → DSL lint → ethics (L26) gerekliyse kontrol → taslak kaydet

Publish: versiyon oluştur; audit WORM’a append; feature.flag.rollout.started + card; plan adımlarını zamanlayıcıya yaz

Evaluate: feature.flag.evaluate.request → segment çöz → bağımlılık doğrula → bucket → karar; cache (ETag/TTL)

Rollout Progress: adım tamamla; SLO Guard (L32) ve Cost Guard (L34) sinyallerini izle → ihlal varsa rollback/kill

Kill Switch: acil durum; anında defaultVariant ve enabled=false → kart + alert

Distribute & Index: önemli olayları L22 ile dağıt, L24’e indeksle

Metrics: değerlendirme sayıları, p95 ms, cache hit, rollout sayacı, geri almalar

7) FSM — advance(state, event, cfg, now) → emissions[]

DRAFT ← feature.flag.define

PUBLISHED ← feature.flag.publish (plan kayıt)

RAMPING (adım adım % artışı)

slo.guard.triggered|cost.guard.triggered → ROLLBACK / PAUSE

adım stabil → RAMPING devam | %100 → STEADY

STEADY (tam yayında)

KILLED ← feature.flag.kill (kalıcı kapalı)

Hata: ALERT + durum korunur; idem: aynı adım ikinci kez çalışmaz

8) Kenar Durumlar

Hash tuzu rotasyonu: graceful modda mevcut atamalar korunur; reset gerekirse reasonCode:"salt_rotation" ile kart

Bağımlılık eksik: dependency_missing → default’a düş; card warn

Çakışan kurallar: en spesifik kural kazanır (daha çok predicate + dar segment > geniş)

Sahte segment: bilinmeyen segment → observer say; rules atlanır

Offline değerlendirme: cache/ETag ile evaluate döner; TTL dolunca zorunlu tazele

Drill/Chaos: L29/L33 etiketli bağlamlar ayrı bucket (salt:drill) → prod atamalarına karışmaz

Etik reddi: ethics_denied → publish/kill iptal; card error

RBAC: qa preview görebilir ama publish edemez

Idempotency: aynı flagKey ile ikinci publish/evaluate yan etkisiz

9) Telemetri
{
  "feature.flag.metrics": {
    "event":"feature.flag.metrics","timestamp":"iso8601",
    "flags":48,"evals":18420,"p50EvalMs":0.4,"p95EvalMs":0.9,
    "cacheHitRate":0.83,"rollouts":{"started":3,"progressed":8,"completed":2,"rollback":1},
    "kills":1,"autoRollbackBySLO":1,"autoRollbackByCost":1,
    "alerts":{"dependency_missing":2,"ethics_denied":0}
  }
}

10) Dosya Yapısı (öneri)
services/livia/featureFlagOrchestrator.ts        # FSM + orchestrator
services/livia/lib/ff/dsl.ts                     # kural dili parse/eval
services/livia/lib/ff/bucketer.ts                # murmur3 sticky bucketing
services/livia/lib/ff/segments.ts                # segment çözümleyici
services/livia/lib/ff/rollout.ts                 # planlayıcı + ilerletici
services/livia/lib/ff/deps.ts                    # bağımlılık doğrulayıcı
services/livia/lib/ff/cache.ts                   # ETag/TTL cache
services/livia/lib/bridges.ts                    # L22/L24/L23/L26/L32/L34 köprüleri
services/livia/lib/redact.ts                     # LIVIA-21
services/livia/state/featureFlagStore.ts         # idem index + aktif planlar + WORM
services/livia/__tests__/featureFlagOrchestrator.test.ts
cfg/livia.flags.yaml

11) Test İskeleti (Jest/Vitest)

Define/Publish: DSL doğrulama, WORM append, RBAC/ethics kontrol

Evaluate: segment+dependency+bucket doğru; cache TTL çalışıyor

Rollout: %10→%25→%50→%100 adımları; SLO guard sinyaliyle rollback

Kill switch: anında kapatma + card

Salt rotation: graceful → eski atamalar korunur; reset modunda yeniden bucket

Chaos/Drill izolasyonu: salt='drill' atamalar prod’dan ayrı

Idempotency: aynı flagKey ikinci publish/evaluate yan etkisiz

Observer görünümü: bayrak detayı sınırlı; PII yok

12) Örnek Akış (kısa)

feature.flag.define(kb.hybridSearch.v2) → DRAFT

publish(v3, plan=[10,25,50,100]) → RAMPING; kart: “%10 canary başladı”

15dk stabil → %25 → kart güncellendi

slo.guard.triggered(kb_api, latency) → ROLLBACK: v2’ye dön; killSwitch? false

İyileşme sonrası yeniden publish → %50 → %100 → STEADY

Gün sonu L14 digest; L24 KB’ye “flag değişim güncesi” indekslendi.

13) SLO

p95 evaluate < 1 ms (cache ısındığında)

yanlış atama (sticky hash drift) = 0 (aynı subject, aynı tuz → aynı slot)

otomatik rollback MTTR ≤ 60 s (SLO/Cost tetiklerinde)

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-36 · experimentAnalyzer.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Feature flag/deney (A/B/n) sonuçlarını doğru, hızlı ve güvenli biçimde analiz edip; uplift/etki tahmini, guardrail (SLO, maliyet, etik) denetimleri ve karar önerileri (promote, pause, rollback, ramp-up/down) üretmek.
Kaynaklar: L35 (featureFlag), L32 (SLO Guard), L34 (Cost Guard), L22 (distribution), L24 (knowledge), L21 (redact), L26 (ethics/WORM).
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; yerel gün penceresi 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: policy|ops|data okur/yazar, observer kısıtlı okur

Gizlilik: PII yok; subject kimlikleri salt’lı hash; raporlar L21 ile redakte

İdempotency: analysisKey = experimentId + version + windowISO + modelSpecHash

Observability: spans (exp.collect, exp.cuped, exp.estimate, exp.guard, exp.decide, exp.report) + metrics

Uyum: karar önerileri L26 üzerinden etik kontrol ile (gerekirse WORM append)

2) Girdiler (In) — Zod .strict() şemaları
{
  "experiment.define": {
    "event":"experiment.define","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1",
    "title":"Hybrid Search v2 — Retrieval tweaks",
    "env":"prod|staging|dev",
    "unit":"subject|session|request",
    "assignment":{"stickyBy":"subject.id|ip|deviceId","saltRef":"daily|static","variants":["control","v2"]},
    "audience":{"segment":["ops","policy"],"region":["eu-central","eu-west"]},
    "metrics":{
      "primary":{"name":"success_rate","kind":"ratio|binary|mean","def":"answers_accepted/answers"},
      "secondary":[{"name":"p95_latency_ms","kind":"mean"},{"name":"cost_usd","kind":"mean"}],
      "guardrails":[{"name":"p95_latency_ms","dir":"<= ","limit":900},{"name":"cost_usd","dir":"<= ","limit":100}]
    },
    "mde":{"success_rate":0.02}, "power":0.8, "alpha":0.05,
    "prePeriod":{"from":"iso8601","to":"iso8601"}            // CUPED/stratify için opsiyonel
  },

  "experiment.start": {
    "event":"experiment.start","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1","version":"v1","startAt":"iso8601"
  },

  "experiment.pause|experiment.resume|experiment.stop": {
    "event":"experiment.pause","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1","reason":"slo_guard|cost_guard|manual"
  },

  "exposure.logged": {
    "event":"exposure.logged","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1","variant":"control|v2",
    "subject":{"id":"user#9f3a","role":"ops","region":"eu-central"},
    "context":{"namespace":"kb_default","symbol":"AVAXUSDT|null"}
  },

  "outcome.logged": {
    "event":"outcome.logged","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1","variant":"control|v2",
    "metrics":{"answers":1,"answers_accepted":1,"latency_ms":820,"cost_usd":0.0018,"pnl_usd":0.00}
  },

  "slo.guard.triggered|slo.guard.recovered": {
    "event":"slo.guard.triggered","timestamp":"iso8601",
    "serviceId":"kb_api","slo":"latency_p95","severity":"high"
  },

  "cost.guard.triggered|cost.guard.recovered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "component":"vector_query|embeddings","severity":"high"
  },

  "feature.flag.rollout.progress": {
    "event":"feature.flag.rollout.progress","timestamp":"iso8601",
    "flagId":"kb.hybridSearch.v2","env":"prod","step":{"percent":25}
  }
}

3) Çıktılar (Out)
{
  "experiment.analysis.ready": {
    "event":"experiment.analysis.ready","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1","version":"v1",
    "window":{"from":"iso8601","to":"iso8601"},
    "method":"frequentist|bayesian|sequential",
    "samples":{"control":12450,"v2":12390,"units":"subject"},
    "estimates":{
      "success_rate":{"control":0.74,"v2":0.781,"uplift":0.041,"ci95":[0.018,0.064],"p":0.0012,"bayes_prob_v2_better":0.984},
      "p95_latency_ms":{"control":910,"v2":860,"diff":-50,"ci95":[-72,-28]},
      "cost_usd":{"control":0.0016,"v2":0.0013,"diff":-0.0003,"ci95":[-0.0004,-0.0001]}
    },
    "cuped":{"applied":true,"theta":0.42,"varianceReductionPct":18.5},
    "guardrails":{"slo_breach":false,"cost_overrun":false},
    "segments":[{"segment":"region=eu-central","uplift":0.053,"p":0.0008}],
    "decision":"promote|pause|rollback|increase_rollout|hold",
    "rationale":["uplift_sig","guardrails_ok","no_cost_risk"],
    "hash":"sha256:..."
  },

  "experiment.decision.suggested": {
    "event":"experiment.decision.suggested","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1","action":{
      "kind":"increase_rollout","toPercent":50,"minStableMin":30
    },
    "requiresApproval":false,"ethicsChecked":true
  },

  "experiment.report.ready": {
    "event":"experiment.report.ready","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1","format":"md|html",
    "path":"data/experiments/2025-09-15/kb.hybridSearch.v2.ab1/report.md",
    "summary":"v2 uplift +4.1pp (p=0.0012), p95 latency -50ms, cost -18%; guardrails OK; öneri: %25→%50.",
    "hash":"sha256:..."
  },

  "experiment.card": {
    "event":"experiment.card","timestamp":"iso8601",
    "title":"Deney Analizi — kb.hybridSearch.v2.ab1",
    "body":"Uplift +4.1pp • p95 -50ms • Cost -18% • Öneri: %25→%50 (30dk stabil).",
    "severity":"info","ttlSec":900
  },

  "experiment.alert": {
    "event":"experiment.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|guardrail_breach|underpowered|sequential_boundary|rbac_denied|ethics_denied|calc_error"
  },

  "experiment.metrics": {
    "event":"experiment.metrics","timestamp":"iso8601",
    "analyses":3,"decisions":2,"reports":3,
    "p95AnalyzeMs":78,"cupedVRPct":18.5,"underpowered":0,
    "guardrailTrips":{"slo":0,"cost":0}
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  methods:{
    frequentist:{ ratioTest:"welch_z|prop_z", meanTest:"welch_t", nonParam:"mann_whitney" },
    bayesian:{ binary:"beta_binomial", mean:"normal_inverse_gamma", draws:5000 },
    sequential:{ alphaSpend:"obrien_fleming|pocock", lookEveryMin:10, maxLooks:48 }
  },

  varianceReduction:{
    cuped:{ enabled:true, covariate:"pre_success_rate|pre_latency", minCorr:0.05 }
  },

  multipleTesting:{
    fdr:"bh", q:0.1, family:["primary","secondary","segments"]
  },

  metricsCatalog:{
    success_rate:{ kind:"ratio", num:"answers_accepted", den:"answers" },
    p95_latency_ms:{ kind:"mean_p95", source:"latency_ms" },
    cost_usd:{ kind:"mean", source:"cost_usd" },
    pnl_usd:{ kind:"mean", source:"pnl_usd" }
  },

  powerCalc:{
    minSamplePerVariant: 500,
    mdeDefault:{ success_rate:0.02, mean:0.03 },
    minDurationMin: 60
  },

  guardrails:{
    slo:{ relyOn:"L32", breachAction:"pause" },
    cost:{ relyOn:"L34", hardGuardPct:0.9, breachAction:"rollback" }
  },

  segments:{
    sliceBy:["region","role","symbol"],
    hetEffects:{ enabled:true, method:"simple_uplift_tree|bucketed" }
  },

  decisions:{
    promoteIf:{ pValue:"<=0.05", upliftSign:">0", guardrailsOk:true },
    increaseRolloutIf:{ pValue:"<=0.1", upliftSign:">=0", minStableMin:30 },
    pauseIf:{ guardrailBreach:true },
    rollbackIf:{ guardrailBreach:true, upliftSign:"<=0" }
  },

  reporting:{
    outputDir:"data/experiments/{YYYY-MM-DD}/{experimentId}",
    mdFile:"report.md", htmlFile:"report.html",
    html:{ embedMiniCSS:true, chartsInlineSvg:true },
    include:{ segmentsTopN:10, charts:["kpi_trend","cum_uplift","sequential_boundary"] }
  },

  integrations:{
    flags:"LIVIA-35", dist:"LIVIA-22", kb:"LIVIA-24", ethics:"LIVIA-26",
    sloGuard:"LIVIA-32", costGuard:"LIVIA-34"
  },

  redactionProfile:"generic",
  idempotencyTtlSec: 86400
}

5) Metodoloji (özet)

Atama/Sticky: L35 ile aynı murmur3 + salt; unit=subject önerilir.

CUPED: Y* = Y - θ(X - mean(X)), θ = cov(Y,X)/var(X); pre-period metriklerinden X.

Frequentist: oran için z-testi; ortalama için Welch t; p95 için Hodges–Lehmann / non-parametrik yaklaşım.

Bayesian: Beta–Binomial (binary/ratio), Normal–Inverse-Gamma (mean); P(v2>control) çıkar.

Sequential: O’Brien–Fleming/Pocock sınırları; erken durdurma & underpowered uyarısı.

FDR: Benjamini–Hochberg q=0.1; segment çoklamasını kontrol et.

6) Pipeline (Kompozisyon)

Collect: exposure.logged, outcome.logged, guardrail sinyalleri (L32/L34), flag rollout (L35)

Validate/Normalize: Zod .strict(); eksik/mükerrerler tekilleştirilir (same subject+ts ±1s → dedup)

Prepare: atama doğrulama (variant mix), pre-period bağlama, CUPED uygulama

Estimate: seçili metod(lar) ile uplift/CI/p; Bayes posterior; sequential sınırlar

Guardrails: SLO/cost ihlallerine bak; breach → pause/rollback sinyali

Decide: kurallara göre promote|increase_rollout|pause|rollback|hold önerisi

Report: Markdown/HTML (trend/cum_uplift/sequential sınır grafikleri, segment tablosu); L21 redaksiyon

Emit/Distribute: experiment.analysis.ready + experiment.decision.suggested + experiment.report.ready + experiment.card; L22 dağıt

Index: raporu L24 KB’ye “experiments” etiketiyle indeksle

Audit: önemli kararlar L26 etik kapısına ve WORM append

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (experiment.start|outcome.logged|exposure.logged) → COLLECT

COLLECT → ESTIMATE (per schedule/look)

ESTIMATE → (guardrail breach?) DECIDE(pause/rollback) | (sig & ok) DECIDE(promote/increase) | HOLD

DECIDE → REPORT → EMIT → IDLE (rolling)

Hata → ALERT + IDLE; idem: aynı analysisKey tekrarlanmaz

8) Kenar Durumlar

Underpowered: örnek < minSample veya süre < minDurationMin → underpowered uyarısı; karar “hold”

Variant dengesizliği: bucket sapması > %2 → uyarı; sticky/salt kontrol et

Carryover/Interference: aynı subject birden çok varyanta maruz → kayıt dışla

Guardrail drift: p95 latency yükselişi, cost artışı → pause/rollback öner

Segments: küçük dilimlerde FDR uygula; gizlilik için N<50 → “redacted”

Drill/Shadow: etiketli trafik analize dahil edilmez (ayrı rapor bölümü)

RBAC/Observer: yalnız özet KPI ve karar; ham metrik yok

9) Telemetri
{
  "experiment.metrics": {
    "event":"experiment.metrics","timestamp":"iso8601",
    "analyses":3,"decisions":2,"reports":3,
    "p50AnalyzeMs":42,"p95AnalyzeMs":78,
    "cupedVRPct":18.5,"underpowered":0,
    "guardrailTrips":{"slo":0,"cost":0}
  }
}

10) Dosya Yapısı (öneri)
services/livia/experimentAnalyzer.ts
services/livia/lib/exp/assign.ts          # sticky/bucket doğrulama (L35 ile uyumlu)
services/livia/lib/exp/cuped.ts           # variance reduction
services/livia/lib/exp/stats.ts           # tests & bayesian
services/livia/lib/exp/sequential.ts      # alpha spending sınırları
services/livia/lib/exp/segments.ts        # slice/HTE
services/livia/lib/exp/report.ts          # md/html + grafik (inline SVG)
services/livia/lib/redact.ts              # LIVIA-21
services/livia/lib/bridges.ts             # L22/L24/L26/L32/L34/L35 köprüleri
services/livia/state/experimentStore.ts   # idem index + geçmiş analizler
services/livia/__tests__/experimentAnalyzer.test.ts
cfg/livia.experiments.yaml

11) Test İskeleti (Jest/Vitest)

Frequentist & Bayes aynı işaretli sonuçta; p & bayes prob uyumlu

CUPED ile varyans düşümü >%10

Sequential boundary ihlali → erken durdurma & sequential_boundary uyarısı

Guardrail cost ihlali → pause/rollback önerisi

Segment FDR kontrolü; N<50 dilimler redacted

Idempotency: aynı analysisKey yeniden yazmıyor

RBAC/observer: özet görünüm; PII yok

Report yazımı: md/html + grafik; L24 indeks; L22 kart

12) Örnek Akış (kısa)

11:00 deney başladı; 12:10 ilk ESTIMATE → uplift +3.2pp (p=0.03), guardrails OK → increase_rollout %10→%25 önerisi

14:00 ikinci ESTIMATE → uplift +4.1pp (p=0.0012), cost −18%, p95 −50ms → promote/increase %50

Rapor & kart yayımlandı; L24 indeks; L26 etik kontrolünden geçti.

13) SLO

p95 analyze < 100 ms / pencere

Var. düşümü (CUPED) ≥ %10 medyan

Yanlış karar (guardrail ihmal) ≤ %1

İdempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-37 · guardrailBanditAllocator.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Canlı trafikte varyant paylaştırmayı (A/B/n, feature flag varyantları) bandit yaklaşımlarıyla otomatik ve güvenli yönetmek: Thompson Sampling / UCB / Epsilon-Greedy (bağlamsal özelliklerle), guardrail (SLO — L32, maliyet — L34, etik — L26) kısıtları ile emniyetli keşif (safe exploration). Trafik yapışkan (L35 ile aynı hash), süreklilik / adım adım ramp-up ve rollback destekli. Kararlar event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; yerel pencere 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: policy|ops|data yönetir, observer salt okur

Gizlilik: PII yok; subject kimlikleri salt’lı hash (L35 ile uyumlu); serbest metinler L21 redakte

İdempotency: banditKey = experimentId + version + windowISO + policyHash

Observability: spans (ba.collect,ba.update,ba.plan,ba.enforce) + metrics

Uyum: kararlar L26 etik kapısından geçebilir; kritik değişimler WORM benzeri append log

2) Girdiler (In) — Zod .strict() şemaları
{
  "bandit.policy.define": {
    "event":"bandit.policy.define","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1",
    "version":"v1",
    "objective":"maximize_success_rate|minimize_latency|multi_objective",
    "algo":"thompson|ucb|eps_greedy|linucb|linTS",
    "context":["region","role","hourOfDay","symbol"],            // bağlamsal özellikler (opsiyonel)
    "variants":[{"name":"control"},{"name":"v2"}],
    "priors":{"success_rate":{"alpha":1,"beta":1}},              // Thompson için örnek
    "constraints":{
      "guardrails":{"slo":{"ref":"L32"}, "cost":{"ref":"L34"}},
      "minTrafficPctPerVariant":5,
      "maxRampPerStepPct":15,
      "cooldownMin":15,
      "requireStableMin":15
    },
    "sticky":{"by":"subject","saltRef":"daily"},
    "safeExplorePct":5,                                         // her zaman güvenli keşif yüzdesi
    "segmentMode":"global|per_segment",                         // bağlama göre ayrı bandit
    "killOnBreach":true
  },

  "bandit.policy.update": {
    "event":"bandit.policy.update","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1","version":"v1",
    "patch":{"maxRampPerStepPct":10,"safeExplorePct":8},
    "reason":"faster ramp, keep safety"
  },

  "exposure.logged": {
    "event":"exposure.logged","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1","variant":"control|v2",
    "subject":{"id":"user#9f3a","role":"ops","region":"eu-central"},
    "context":{"hourOfDay":14,"symbol":"AVAXUSDT|null"}
  },

  "outcome.logged": {
    "event":"outcome.logged","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1","variant":"control|v2",
    "metrics":{"success":1,"latency_ms":820,"cost_usd":0.0018}
  },

  "slo.guard.triggered|slo.guard.recovered": {
    "event":"slo.guard.triggered","timestamp":"iso8601",
    "serviceId":"kb_api","slo":"latency_p95","severity":"high"
  },

  "cost.guard.triggered|cost.guard.recovered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "component":"vector_query|embeddings","severity":"high"
  },

  "feature.flag.evaluate.request": {
    "event":"feature.flag.evaluate.request","timestamp":"iso8601",
    "flagId":"kb.hybridSearch.v2","env":"prod",
    "context":{"subject":{"id":"user#9f3a","role":"ops","region":"eu-central"},
               "scope":"global","symbol":"AVAXUSDT|null"}
  }
}

3) Çıktılar (Out)
{
  "bandit.plan.ready": {
    "event":"bandit.plan.ready","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1","version":"v1",
    "weights":[{"variant":"control","pct":40},{"variant":"v2","pct":60}],
    "basis":"thompson_posterior|ucb_score|epsilon_schedule|lin_weights",
    "safeExplorePct":5,
    "segment":"global|region=eu-central|role=ops",
    "hash":"sha256:..."
  },

  "bandit.enforce.request": {
    "event":"bandit.enforce.request","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1","version":"v1",
    "via":"LIVIA-35","flagId":"kb.hybridSearch.v2","env":"prod",
    "weights":[{"variant":"control","pct":40},{"variant":"v2","pct":60}],
    "rampFromPrevPct":15,"cooldownUntil":"iso8601"
  },

  "bandit.rollback.request": {
    "event":"bandit.rollback.request","timestamp":"iso8601",
    "experimentId":"kb.hybridSearch.v2.ab1",
    "reason":"guardrail_breach|degradation|ethics_denied",
    "targetWeights":[{"variant":"control","pct":100}]
  },

  "bandit.card": {
    "event":"bandit.card","timestamp":"iso8601",
    "title":"Bandit Güncellendi — kb.hybridSearch.v2.ab1",
    "body":"v2 payı %45→%60 (TS), güvenli keşif %5; SLO/Cost guardrails OK.",
    "severity":"info","ttlSec":900
  },

  "bandit.alert": {
    "event":"bandit.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|under_min_samples|guardrail_breach|ethics_denied|ramp_rate_blocked|calc_error"
  },

  "bandit.metrics": {
    "event":"bandit.metrics","timestamp":"iso8601",
    "updates":3,"rollbacks":1,"segments":2,
    "p95UpdateMs":12.4,"safeExplorePct":5,"avgReward_v2":0.781,"avgReward_control":0.74
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  algo:{
    kind:"thompson",                     // thompson|ucb|eps_greedy|linucb|linTS
    reward:"success_rate",               // primary metrik
    secondary:["latency_ms","cost_usd"], // guardrail için izlenir (opt.)
    thompson:{ alpha0:1, beta0:1 },      // Beta-Binomial
    ucb:{ c:2.0 },                       // UCB1 param
    eps_greedy:{ epsStart:0.1, epsMin:0.02, halfLifeMin:120 },
    linucb:{ alpha:0.5, contextDimMax:16 },
    linTS:{ sigma:0.3 }
  },

  constraints:{
    minTrafficPctPerVariant: 5,
    maxRampPerStepPct: 15,
    cooldownMin: 15,
    requireStableMin: 15,                // guardrail ok kalma süresi
    minSamplesPerVariant: 200
  },

  context:{
    enabled:true,
    oneHot:["region","role","symbol"],
    cyclical:["hourOfDay"]               // sin/cos dönüşümü
  },

  sticky:{ by:"subject", saltRef:"daily" },   // L35 ile aynı

  safety:{
    safeExplorePct: 5,                   // daimi güvenli keşif
    killOnBreach: true,
    ethicsRequiredForBigJumpPct: 30      // L26 kapısı
  },

  integrations:{
    flags:"LIVIA-35",
    slo:"LIVIA-32",
    cost:"LIVIA-34",
    dist:"LIVIA-22",
    redact:"LIVIA-21",
    ethics:"LIVIA-26",
    experiments:"LIVIA-36"
  },

  schedule:{
    updateEverySec: 60,
    freezeDuringIncident: true           // L32/L15 gerçek olayda duraklat
  },

  idempotencyTtlSec: 3600
}

5) Ödül Modeli (reward) & Guardrail Mantığı

Primary reward (örnek): success_rate için Beta–Binomial (TS):
posterior ~ Beta(alpha0 + successes, beta0 + trials - successes)
Aday ağırlıklar, varyantın örnekleminden örneklenen başarı olasılıklarının sırasına göre verilir.

Multi-objective (opsiyonel): compositeReward = w1*success - w2*latency_norm - w3*cost_norm (w’lar policy’de)

Guardrails:

SLO (L32): p95 latency/uptime ihlali → ramp bloke; gerekiyorsa bandit.rollback.request

Cost (L34): hard guard ≥%90 → pay azalt veya freeze

Ethics (L26): büyük sıçrama (>%30) veya hassas etki → onay gerek

6) Pipeline (Kompozisyon)

Collect: exposure.logged + outcome.logged olaylarını çek; segment/bağlam ile eşle

Validate/Normalize: Zod .strict(); duplikasyon ±1s pencerede tekille; DRILL/SHADOW (L29/L33) harici say

Update Posteriors / Scores: seçilen algoritmaya göre varyant parametrelerini güncelle (TS/UCB/ε vb.)

Plan Weights: minTraffic, maxRampPerStep ve safeExplorePct koşullarını uygulayarak yeni hedef weights hesapla

Guardrail Check: L32/L34’den gelen tetiklere ve son pencereye bak; freeze / reduce / rollback kararları üret

Enforce: L35 üzerinden bayrak ağırlıklarını yayınla (bandit.enforce.request)

Cooldown & Stability: uygulandıktan sonra cooldownMin kadar freeze; requireStableMin sağlanırsa bir sonraki ramp

Emit & Distribute: bandit.plan.ready, kart, metrikler; rapor/özet L22; etik gerekirse L26

Feedback to Experiments: L36’ya bandit kararlarının özetini gönder (analiz raporlarına ek)

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (schedule tick | new data) → UPDATE

UPDATE → PLAN (weights)

PLAN → (guardrails OK) ENFORCE | (breach) ROLLBACK/FREEZE

ENFORCE → COOLDOWN (cooldownMin)

COOLDOWN → (requireStableMin OK) IDLE | (breach) ROLLBACK/FREEZE

FREEZE → (recovery) IDLE

ROLLBACK → COOLDOWN → IDLE

Hata: ALERT ve durum korunur; idem: aynı banditKey tekrar eylem doğurmaz

8) Kenar Durumlar

Underpowered: minSamplesPerVariant altı → ramp yok, yalnız safeExplorePct sürer

Variant açlık (starvation): minTraffic ile garanti; UCB/TS seçimi sırasında ağırlığı çok düşen varyant asla 0 olmaz

Büyük sıçrama: ramp>ethicsRequiredForBigJumpPct → L26 onayı zorunlu

Gerçek olay (incident): freezeDuringIncident=true → COOLDOWN/FREEZE

Segmentli mod: segmentMode='per_segment' → her segment için ayrı bandit ve ayrı ağırlık seti

Sticky drift: salt rotasyonu (L35) sırasında graceful geçiş; mevcut atamalar korumaya çalışılır

Cost/SLO çakışması: en emniyetli (daha düşük pay) kararı uygula; L34/L32 ile uyumlu

Observer görünümü: yalnız toplam ağırlıklar ve kart; parametre/priors gizli

DRILL/SHADOW: tatbikat verileri öğrenmeye katılmaz, raporda ayrı bölüm

9) Telemetri
{
  "bandit.metrics": {
    "event":"bandit.metrics","timestamp":"iso8601",
    "updates":3,"rollbacks":1,"segments":2,
    "p50UpdateMs":6.2,"p95UpdateMs":12.4,
    "safeExplorePct":5,
    "avgReward_control":0.740,"avgReward_v2":0.781,
    "guardrailBlocks":{"slo":0,"cost":0,"ethics":0}
  }
}

10) Dosya Yapısı (öneri)
services/livia/guardrailBanditAllocator.ts
services/livia/lib/bandit/posterior.ts          # TS/UCB/Eps/Linear modelleri
services/livia/lib/bandit/context.ts            # bağlamsal vektörleştirme (one-hot, cyclical)
services/livia/lib/bandit/plan.ts               # minTraffic, maxRamp, safeExplore, segment
services/livia/lib/bandit/guardrails.ts         # L32/L34 köprüsü
services/livia/lib/bridges.ts                   # L35/L22/L26/L36 köprüleri
services/livia/state/banditStore.ts             # idem index + posterior param + plan geçmişi
services/livia/__tests__/guardrailBanditAllocator.test.ts
cfg/livia.bandit.yaml

11) Test İskeleti (Jest/Vitest)

TS güncelleme: success akışında v2 posteriörü ↑ → ağırlık %45→%60

UCB modu: c=2.0 ile daha agresif keşif; minTraffic ihlali yok

Epsilon programı: 0.1→0.02 yarı-ömür 120dk; safeExplorePct ile birlikte çalışır

Ramp kısıtı: maxRampPerStepPct=15 → %40→%60 ok, %40→%70 blok

Guardrail ihlali: L32 p95 latency breach → rollback.request + FREEZE

Cost artışı: L34 hard guard → pay azalt, freeze

Segmentli bandit: region=eu-central için v2 %65 olurken global %55 kaldı

Underpowered: N<200 → yalnız safe explore; plan değişmedi

Idempotency: aynı banditKey tekrar yazmıyor; card yalnız güncelleniyor

12) Örnek Akış (kısa)

12:00 başlangıç: control %55 / v2 %45

12:30 TS güncellemesi: v2 uplift → plan %60; bandit.enforce.request → L35

12:45 cooldown tamam; guardrails OK → %60 kalır

13:10 cost early-warn yok; SLO normal → %60→%65 (segment=eu-central)

13:25 L32 breach geldi → bandit.rollback.request → control %100 → FREEZE 15dk → recovery sonrası yeniden %55/%45

13) SLO

p95 update+plan < 15 ms

guardrail kaçırma ≤ %1, yanlış blok ≤ %1

ramp uygunsuzluğu (maxRamp ihlali) = 0

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-38 · provenanceChainLogger.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
LIVIA ekosistemi içindeki tüm kritik kararlar, raporlar ve dağıtımlar için menşe zinciri (provenance) kaydı tutmak: hangi kaynak(lar)dan hangi dönüşüm adımları ile kim tetikledi, ne üretildi? Her adım hash’li, imzalı, zaman damgalı, append-only (WORM) zincire eklenir; günlük/oturum bazlı Merkle kökleri üretilip “seal” edilir. Doğrulama için zincir denetimi ve artifakt→zincir eşlemesi yapılır.
I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; L21 (redaksiyon), L27 (gizli anahtar tarama), L22 (dağıtım), L14 (digest), L15 (postmortem) ve L26 (etik/WORM) entegre.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün penceresi 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: ops|policy|compliance okur, yazım sistem

Gizlilik: PII yok; operatör kimlikleri salt’lı hash; serbest metinler L21 ile redakte

Kripto: sha256 içerik/parça hash’i, Merkle kökü, Ed25519 zincir imzası (KMS/HSM)

İdempotency: provKey = dayISO + chainId + sequenceNo

Observability: spans (prov.open,prov.append,prov.seal,prov.verify) + metrics

WORM: state/provenance/worm/{YYYY-MM-DD}/chain.log + seal.json; append-only kuralı

2) Girdiler (In) — Zod .strict() şemaları
{
  "provenance.open": {
    "event":"provenance.open","timestamp":"iso8601",
    "chainId":"daily|incident:{id}|release:{version}",
    "context":{"forDate":"2025-09-15","tz":"Europe/Istanbul","owner":"system"},
    "saltRef":"daily"  // operatör pseudonym tuzu
  },

  "provenance.append": {
    "event":"provenance.append","timestamp":"iso8601",
    "chainId":"daily",
    "kind":"ingest|transform|decision|distribution|policy_change|seal_hint",
    "actor":{"role":"system|ops|policy|qa","pseudo":"op#7f9a12"},
    "inputRefs":[
      {"refType":"file|event|artifact","path":"data/digest/2025-09-15/digest.md","hash":"sha256:..."},
      {"refType":"event","id":"slo.guard.triggered#...","hash":"sha256:..."}
    ],
    "transform":{"name":"markdown.compose|policy.patch|gate.apply|analyze","version":"vX","params":{"p95":920}},
    "outputRef":{"refType":"artifact","path":"data/digest/2025-09-15/digest.html","hash":"sha256:..."},
    "notes":"özet: SLO at_risk→ok",
    "flags":{"DRILL":false,"SHADOW":false}
  },

  "provenance.link": {
    "event":"provenance.link","timestamp":"iso8601",
    "from":{"chainId":"daily","sequenceNo":128},
    "to":{"chainId":"incident:inc-2025-09-15-1","sequenceNo":12},
    "reason":"incident_summary_reference"
  },

  "provenance.seal.request": {
    "event":"provenance.seal.request","timestamp":"iso8601",
    "chainId":"daily","sealMode":"daily|rolling|incident_close"
  },

  "artifact.ready": {
    "event":"artifact.ready","timestamp":"iso8601",
    "kind":"digest|postmortem|policy|cost.report|drill.report",
    "path":"data/postmortem/2025-09-15/inc-.../report.md",
    "hash":"sha256:...",
    "links":[{"chainId":"incident:inc-2025-09-15-1","sequenceNo":42}]
  },

  "provenance.verify.request": {
    "event":"provenance.verify.request","timestamp":"iso8601",
    "chainId":"daily","target":{"path":"data/digest/2025-09-15/digest.html","hash":"sha256:..."},
    "mode":"fast|full"
  }
}

3) Çıktılar (Out)
{
  "provenance.opened": {
    "event":"provenance.opened","timestamp":"iso8601",
    "chainId":"daily","chainPath":"state/provenance/worm/2025-09-15/chain.log",
    "sequenceStart":1,"prevSealHash":"sha256:..."
  },

  "provenance.appended": {
    "event":"provenance.appended","timestamp":"iso8601",
    "chainId":"daily","sequenceNo":129,
    "entryHash":"sha256:...","merkleLeaf":"sha256:...","chainTip":"sha256:..."
  },

  "provenance.sealed": {
    "event":"provenance.sealed","timestamp":"iso8601",
    "chainId":"daily",
    "merkleRoot":"sha256:...","entries":342,
    "seal":{"sig":"ed25519:...","signer":"kms:key/livia-prov","ts":"iso8601"},
    "sealPath":"state/provenance/worm/2025-09-15/seal.json",
    "optionalAnchors":[{"kind":"notary","txRef":"local:ots-2025-09-15.json"}]
  },

  "provenance.verify.result": {
    "event":"provenance.verify.result","timestamp":"iso8601",
    "chainId":"daily","target":{"path":"...","hash":"sha256:..."},
    "ok":true,"proof":{"merklePath":["sha256:...","sha256:..."],"root":"sha256:..."},
    "sealedAt":"iso8601","signer":"kms:key/livia-prov"
  },

  "provenance.alert": {
    "event":"provenance.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"worm_violation|hash_mismatch|seal_signature_invalid|idempotent_duplicate|rbac_denied|tsa_unavailable",
    "context":{"chainId":"daily","sequenceNo":130}
  },

  "provenance.metrics": {
    "event":"provenance.metrics","timestamp":"iso8601",
    "chainsOpen":2,"appends":342,"seals":1,"verifications":7,
    "p95AppendMs":3.8,"p95VerifyMs":6.1,"wormViolations":0
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  storage:{
    wormDir:"state/provenance/worm/{YYYY-MM-DD}",
    chainFile:"chain.log",           // JSONL append
    sealFile:"seal.json",
    indexFile:"index.json",          // sequenceNo→byteOffset haritası
    rotateDaily:true
  },

  crypto:{
    hash:"sha256",
    merkle:{ fanout:2 },             // binary merkle
    sign:{ algo:"ed25519", keyRef:"kms:key/livia-prov" },
    tsa:{ enabled:false, kind:"rfc3161|ots", endpoint:"", timeoutMs:2000 } // opsiyonel
  },

  redaction:{ profile:"generic" },    // L21
  secretScan:{ enabled:true },        // L27 – append edilen entry’lerde tarama
  ethics:{ enforceFor:"policy_change|distribution" }, // L26

  links:{
    autoFromArtifacts:true,           // artifact.ready→provenance.append
    acceptFrom:["L14","L15","L22","L23","L24","L31","L32","L34","L35","L36","L37"]
  },

  seal:{
    at:"23:59:30",                    // günlük otomatik seal
    onIncidentClose:true,
    requireMinEntries:1
  },

  verify:{
    modeDefault:"fast",               // merkle proof + imza kontrolü
    fullScanSchedule:"Sun 04:00"      // haftalık tüm zincir tam tarama
  },

  idempotencyTtlSec: 86400
}

5) Kayıt Şeması (entry formatı)

Her provenance.append çağrısı zincire tek satır JSON ekler (JSONL).
Alanlar:

seq (artırımlı), ts, chainId, prevHash, entryHash, merkleLeaf,

kind, actor.pseudo, inputRefs[], transform{}, outputRef, notes, flags{}.
entryHash = sha256(canonicalJson(entryWithoutEntryHash)).
Merkle yaprağı entryHash’tir; seal sırasında kök hesaplanır.

6) Pipeline (Kompozisyon)

Open: zincir mevcutsa devam; değilse provenance.open → provenance.opened

Append: gelen provenance.append ve artifact.ready olayları → redaksiyon (L21) + secret tarama (L27) → hash/leaf hesap → append (atomic fs) → provenance.appended

Link: zincirler arası bağ (provenance.link) append edilir; çapraz zincir kanıtı oluşur

Seal: planlı veya istek üzerine Merkle kökü + Ed25519 imza; opsiyonel TSA/OTS ânkoru → provenance.sealed

Verify: hedef artifaktın hash’i zincirde var mı? merkle path + imza doğrula → provenance.verify.result

Distribute/Index: önemli sealed/verify sonuçlarını L22 ile dağıt, L24’te “provenance” etiketiyle indeksle

Metrics: sayılar, p95 ms, WORM olayları

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (provenance.open | gün başı) → OPEN

OPEN → (provenance.append|artifact.ready|provenance.link) → APPEND (rolling)

APPEND → (schedule seal.at | provenance.seal.request) → SEAL

SEAL → IDLE

VERIFY (istek üzerine) → provenance.verify.result → IDLE

Hata: ALERT + IDLE; idem: aynı provKey ikinci kez yazmaz

8) Kenar Durumlar

WORM ihlali: dosya büyüklüğü/byte offset uyuşmaz → worm_violation + zincir kilitlenir, yalnız okuma

Hash mismatch: artifakt yeniden üretildi ancak hash aynı değil → hash_mismatch uyarı

Out-of-order append: sequence yanlış → reddet, idempotent_duplicate kontrolü

TSA unavailable: zincir yine seal edilir; TSA ânkoru “pending” kalır

Large chain: index file ile random-access; merkle fanout=2

Secrets/PII: secret taraması bulursa provenance.alert("secret_leak") + L27 yoluna karantinaya yönlendir

Observer görünümü: detay maskeli (actor pseudo), hashler görünür

Cross-link döngüleri: link’e izin var ama doğrulamada yalnız “a→b” yönü kanıtlanır; döngü kısıtlama uyarısı

9) Telemetri
{
  "provenance.metrics": {
    "event":"provenance.metrics","timestamp":"iso8601",
    "chainsOpen":2,"appends":342,"seals":1,"verifications":7,
    "p50AppendMs":1.9,"p95AppendMs":3.8,"p95VerifyMs":6.1,
    "wormViolations":0,"hashMismatches":0
  }
}

10) Dosya Yapısı (öneri)
services/livia/provenanceChainLogger.ts          # FSM + orchestrator
services/livia/lib/prov/hasher.ts                # canonical JSON + sha256 + merkle
services/livia/lib/prov/signer.ts                # ed25519 + KMS/HSM köprüsü
services/livia/lib/prov/worm.ts                  # append-only dosya, index yönetimi
services/livia/lib/prov/verify.ts                # proof oluşturma/doğrulama
services/livia/lib/redact.ts                     # LIVIA-21
services/livia/lib/bridges.ts                    # L22/L24/L26/L27/L14/L15 köprüleri
services/livia/state/provenanceStore.ts          # idem index + seal state
services/livia/__tests__/provenanceChainLogger.test.ts
cfg/livia.provenance.yaml

11) Test İskeleti (Jest/Vitest)

Open/Append: canonical JSON → entryHash sabit, sıralama/doğrulama doğru

Seal: Merkle kökü + ed25519 imza doğrulandı; seal.json yazıldı

Verify: artifact.ready hash’i zincirde; merkle path + imza OK

WORM: dış müdahalede büyüklük/offset bozuldu → worm_violation + kilit

Secret taraması: provenance.append notlarında gizli anahtar → secret_leak + karantina

Cross-link: daily ↔ incident zinciri link’i doğrulandı

Idempotency: aynı provKey ikinci yazıma izin yok

RBAC/Observer: maskeli görünüm; PII yok

12) Örnek Akış (kısa)

00:01 provenance.open(daily) → zincir açıldı

Gün içinde L14/L22/L32/L34 olayları → her biri provenance.append ile zincire işlendi

18:20 artifact.ready(digest.html) → append; link ile incident zincirine bağlandı

23:59 provenance.seal.request(daily) → Merkle root + ed25519 imza → provenance.sealed

Ertesi gün provenance.verify.request(target=digest.html) → verify.result(ok).

13) SLO

p95 append < 5 ms

p95 verify < 10 ms

WORM ihlali = 0

idempotent çakışma ≈ 0
_____________________________________________________________________________________________
LIVIA-39 · dataLineageIndexer.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
LIVIA ekosistemindeki uçtan uca veri soy kütüğünü (data lineage) kur, güncel tut ve sorgulanabilir hale getir: kaynak (stream/table/file) → özellik (feature) → model → politika/karar/rapor/artifakt zincirini zaman yolculuğu (as-of) ile çıkar; blast radius/impact analizi yap; provenance (L38) ile bağla; uyumsuzluk (schema drift, gizli anahtar sızıntısı) ve kalite (SLO/L32) sinyalleriyle uyar.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; WORM benzeri append log; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: ops|data|policy|compliance okuyabilir; yazım sistem

Gizlilik: PII yok; operatör kimlikleri salt’lı hash; serbest metinler L21 redaksiyon

İdempotency: lineageKey = eventId|sha256(payload); snapshot: snapshotKey = asOfISO + scope

Observability: spans (lin.ingest,lin.index,lin.query,lin.impact) + metrics

Uyumluluk: WORM benzeri append (state/lineage/worm/{YYYY-MM-DD}/graph.log); L38 ile çift yönlü link

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "dataset.registered": {
    "event":"dataset.registered","timestamp":"iso8601",
    "id":"ds:kinesis:feed_ticks",
    "kind":"stream|table|file|topic",
    "schema":{"fields":[{"name":"symbol","type":"string"},{"name":"price","type":"float"},{"name":"ts","type":"timestamp"}],"version":"v7"},
    "owner":"ops","sla":{"freshnessMsP95":800,"availabilityPct":99.9},
    "tags":["market","realtime"]
  },

  "dataset.schema.updated": {
    "event":"dataset.schema.updated","timestamp":"iso8601",
    "id":"ds:kinesis:feed_ticks","prevVersion":"v7","newVersion":"v8",
    "diff":[{"op":"add","path":"/fields/-","value":{"name":"venue","type":"string"}}]
  },

  "feature.registered": {
    "event":"feature.registered","timestamp":"iso8601",
    "id":"feat:slip.p95","owner":"ops",
    "source":{"datasetId":"ds:kinesis:feed_ticks","transforms":["groupBy(symbol,5m)","p95(slip)"]},
    "version":"v3","tags":["guard","anomaly"]
  },

  "model.trained": {
    "event":"model.trained","timestamp":"iso8601",
    "id":"model:slip_anomaly:v5",
    "inputs":{"features":["feat:slip.p95","feat:lat.p95"],"window":"14d"},
    "artifact":{"path":"artifacts/models/slip_anom/v5.onnx","hash":"sha256:..."},
    "metrics":{"auprc":0.81,"latencyMsP95":18}
  },

  "job.run": {
    "event":"job.run","timestamp":"iso8601",
    "id":"job:compose.digest.daily","inputs":[
      {"refType":"feature","id":"feat:slip.p95"},
      {"refType":"event","id":"telemetry.slo.status#..."}
    ],
    "outputs":[{"refType":"artifact","path":"data/digest/2025-09-15/digest.md","hash":"sha256:..."}],
    "status":"success|failed","durationMs":820
  },

  "policy.change.applied": {
    "event":"policy.change.applied","timestamp":"iso8601",
    "id":"policy:bounds:v42",
    "changes":[{"path":"/spread_max","from":0.003,"to":0.002}],
    "impactTargets":["guard.activity","confirmation.bounds"]
  },

  "decision.emitted": {
    "event":"decision.emitted","timestamp":"iso8601",
    "id":"dec:gate.rate_limit:2025-09-15T14:08:00+03:00",
    "reason":"slo.guard.triggered#hash","scope":"feed_ws","artifactRef":"state/gates/active.json"
  },

  "artifact.ready": {
    "event":"artifact.ready","timestamp":"iso8601",
    "kind":"digest|postmortem|policy|cost.report|drill.report|model",
    "path":"data/digest/2025-09-15/digest.html","hash":"sha256:...","links":[]
  },

  "provenance.appended": {
    "event":"provenance.appended","timestamp":"iso8601",
    "chainId":"daily","sequenceNo":129,"entryHash":"sha256:...","outputRef":{"path":"data/digest/2025-09-15/digest.html"}
  }
}


Notlar:

Kaynak olayların çoğu diğer modüllerden gelir (L14/L15/L22/L23/L32/L34/L35/L36/L37/L38).

Her id evrimseldir (SCD2): version alanı veya asOf zarfı ile izlenir.

3) Çıktılar (Out)
{
  "lineage.index.ready": {
    "event":"lineage.index.ready","timestamp":"iso8601",
    "asOf":"iso8601","nodes":1324,"edges":5340,
    "graphSig":"sha256:...","indexPath":"state/lineage/index/2025-09-15/asOf=.../graph.json"
  },

  "lineage.impact.ready": {
    "event":"lineage.impact.ready","timestamp":"iso8601",
    "source":"dataset.schema.updated#ds:kinesis:feed_ticks@v8",
    "blastRadius":{"downstreamArtifacts":9,"affectedModels":["model:slip_anomaly:v5"],"guards":["L32"],"flags":["kb.hybridSearch.v2"]},
    "recommendations":["notify:ops","run:tests:compat","freeze:bandit_for_segments"],
    "pathSample":[["ds:kinesis:feed_ticks","feat:slip.p95","model:slip_anomaly:v5","decision:gate.rate_limit"]]
  },

  "lineage.query.result": {
    "event":"lineage.query.result","timestamp":"iso8601",
    "requestId":"q#7f2a","mode":"downstream|upstream|both|why",
    "from":{"refType":"artifact","path":"data/digest/2025-09-15/digest.html"},
    "asOf":"iso8601","result":{"nodes":24,"edges":53,"subgraphPath":"state/lineage/queries/q#7f2a.json"}
  },

  "lineage.card": {
    "event":"lineage.card","timestamp":"iso8601",
    "title":"Lineage Güncellendi — as-of 15:40",
    "body":"Yeni şema v8: feed_ticks → 1 model, 2 guard, 9 artifakt etkilenebilir.",
    "severity":"info","ttlSec":600
  },

  "lineage.alert": {
    "event":"lineage.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"schema_drift|dangling_edge|cycle_detected|worm_violation|idempotent_duplicate|rbac_denied",
    "context":{"node":"feat:slip.p95"}
  },

  "lineage.metrics": {
    "event":"lineage.metrics","timestamp":"iso8601",
    "ingested":420,"nodes":1324,"edges":5340,
    "p95IngestMs":5.8,"p95QueryMs":8.1,"cycles":0,"dangling":3
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  storage:{
    wormDir:"state/lineage/worm/{YYYY-MM-DD}",
    appendFile:"graph.log",           // JSONL append (node/edge ops)
    snapshotDir:"state/lineage/index/{YYYY-MM-DD}",
    compactEvery:"1h"                 // snapshot/compact periyodu
  },

  graph:{
    // düğümler ve kenarlar için tip sözlüğü
    nodeTypes:["dataset","feature","model","job","policy","decision","artifact","event","flag","experiment","guard"],
    edgeTypes:["derives_from","consumes","produces","governs","emits","links_to","depends_on","explains"],
    maxInMemNodes: 200_000
  },

  sdc:{ // Slowly Changing Data
    trackVersions:true, mode:"type2", asOfQueries:true
  },

  quality:{
    onSchemaDrift:"warn_and_impact",
    onDanglingEdge:"repair_orphan|warn",
    onCycle:"break_with_virtual_node|error"
  },

  integrations:{
    provenance:"LIVIA-38",
    housekeeping:"LIVIA-31",
    sloGuard:"LIVIA-32",
    costGuard:"LIVIA-34",
    flags:"LIVIA-35",
    experiments:"LIVIA-36",
    bandit:"LIVIA-37",
    dist:"LIVIA-22",
    redact:"LIVIA-21",
    secrets:"LIVIA-27",
    kb:"LIVIA-24"
  },

  indexing:{
    buildReverseEdges:true,           // upstream/downstream hızlı
    keepAdjacencyLists:true,
    hashGraph:true                    // graphSig hesapla (Merkle benzeri)
  },

  query:{
    defaultMode:"both",
    limitNodes: 5000,
    allowWhyAnswer:true               // provenance üzerinden açıklama zinciri
  },

  retention:{
    hotDays: 14, warmDays: 90, coldDays: 365, keepForever:false
  },

  idempotencyTtlSec: 86400
}

5) Veri Modeli (özet)

Node: { id, type, version?, asOf?, attrs:{...} }

id örnek: ds:kinesis:feed_ticks, feat:slip.p95, model:slip_anomaly:v5, policy:bounds:v42, artifact:.../digest.html

Edge: { fromId, toId, type, atISO, attrs }

Örnek: ds → feat (derives_from), feat → model (consumes), model → decision (emits), policy → guard (governs), artifact → provenance (links_to)

6) Pipeline (Kompozisyon)

Ingest: gelen olayları Zod ile doğrula; node/edge çıkar; WORM graph.log a append et

Index: saatlik (veya tetikle) append log → snapshot (adjacency list + reverse index + as-of haritaları)

Link with Provenance (L38): artifact.ready ve provenance.appended olaylarından why-chain kenarları (explains)

Quality Checks: schema drift/dangling/cycle; drift varsa impact analizi yap

Impact Analyzer: değişen node için downstream artifacts/models/guards/flags setini ve blast radius ölç; öneriler üret

Query: lineage.query.request ile upstream/downstream/both/why; as-of anında alt-grafı çıkar, dosyaya yaz

Distribute/Index: kart/raporları L22 ile dağıt; L24 KB “lineage” altında indeksle

Metrics: ingest/query p95, node/edge sayıları, anomaly uyarıları

7) Sorgu API (olay olarak)
{
  "lineage.query.request": {
    "event":"lineage.query.request","timestamp":"iso8601",
    "requestId":"q#7f2a",
    "mode":"downstream|upstream|both|why",
    "from":{"refType":"node|artifact|dataset|feature|model|policy|decision","idOrPath":"feat:slip.p95"},
    "asOf":"2025-09-15T15:40:00+03:00",          // yoksa "now"
    "depthMax":6,
    "filters":{"nodeTypes":["model","artifact","guard"],"edgeTypes":["consumes","produces","emits","governs"]},
    "format":"json|dot|md", "includeAttrs":true
  }
}

8) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (*.registered|*.updated|job.run|artifact.ready|provenance.appended) → INGEST

INGEST → INDEX (planlı/sinyal ile)

INDEX → (lineage.query.request) → QUERY

QUERY → EMIT (query.result | impact.ready | card) → IDLE

Hata: ALERT + IDLE; idem: aynı lineageKey ikinci kez yazılmaz

9) Kenar Durumlar

Schema drift: dataset.schema.updated → quality.onSchemaDrift uygula; drift etkisi impact.ready ile rapor

Cycle: ETL yanlış eşleme → cycle_detected; alt-graf break_with_virtual_node ile kesilerek raporlanır

Dangling edge: toId yok → repair_orphan dene; olmazsa dangling_edge warn

Version forks: aynı id farklı version eş zamanlı → SCD2 “as-of” ile ayrıştır

Large graph: maxInMemNodes aşımı → streaming query; sonuçlar parçalı yazılır

Secrets/PII: append metinlerinde L27 sızıntısı → block+quarantine

Observer: yalnız özet kart ve why zinciri kısa listesi; ham path gizli

Drill/Shadow: L29/L33 işaretli node/edge’ler prod analizden ayrı tutulur

10) Telemetri
{
  "lineage.metrics": {
    "event":"lineage.metrics","timestamp":"iso8601",
    "ingested":420,"nodes":1324,"edges":5340,
    "p50IngestMs":2.3,"p95IngestMs":5.8,"p95QueryMs":8.1,
    "cycles":0,"dangling":3,"schemaDrifts":1
  }
}

11) Dosya Yapısı (öneri)
services/livia/dataLineageIndexer.ts              # FSM + orchestrator
services/livia/lib/lineage/parser.ts              # olay→node/edge çıkarıcı
services/livia/lib/lineage/store.ts               # WORM append + snapshot/compact
services/livia/lib/lineage/query.ts               # upstream/downstream/why/as-of
services/livia/lib/lineage/impact.ts              # blast radius & öneriler
services/livia/lib/lineage/quality.ts             # drift/cycle/dangling denetimleri
services/livia/lib/prov/linker.ts                 # L38 köprüsü (why-chain)
services/livia/lib/redact.ts                      # L21
services/livia/lib/bridges.ts                     # L22/L24/L27/L31/L32/L34/L35/L36/L37/L38
services/livia/state/lineageStore.ts              # idem index + snapshot bilgisi
services/livia/__tests__/dataLineageIndexer.test.ts
cfg/livia.lineage.yaml

12) Test İskeleti (Jest/Vitest)

Ingest/Index: dataset→feature→model→artifact zinciri oluşturuldu; snapshot üretildi

Schema drift: v7→v8 alan ekleme → impact.ready + kart

Why query: artifact→provenance→inputs zinciri doğru geri çözüldü

Downstream blast: dataset değişimi → model/guard/artifact seti listelendi

Cycle: yapay döngü algılandı ve sanal düğümle kırıldı

Dangling: orphan edge uyarıldı; self-heal çalıştı

Idempotency: aynı olay ikinci kez yazılmadı

Secrets: sızıntı denemesinde alert + karantina tetiklendi

Observer görünümü: özet kartta yalnız sayılar/başlıklar

13) Örnek Akış (kısa)

10:05 dataset.registered(feed_ticks@v7) → 10:10 feature.registered(slip.p95) → 10:20 model.trained(v5)

14:00 dataset.schema.updated v8 → impact: model:slip_anomaly:v5, L32, 9 artifakt potansiyel etki → lineage.card

18:15 job.run(digest.compose) → artifact.ready(digest.html) → provenance.appended ile why-chain kuruldu

18:20 lineage.query.request(both, from=artifact, asOf=18:20) → alt-graf JSON/DOT çıktı.

14) SLO

p95 ingest < 10 ms / olay

p95 query < 12 ms (≤5K düğüm alt-graf)

cycle yanlış pozitif ≤ %1; dangling self-heal ≥ %80

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-40 · privacyRiskScorer.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Metin/çıktı/rapor/telemetri/kaynak dosyalarındaki gizlilik riskini gerçek zamanlı hesapla; k-anonimlik / l-çeşitlilik / t-yakınlık esinli sezgisel ölçüler + PII dedektörleri (TR odaklı) + bağlam/audience kurallarıyla risk skoru üret. Skora göre redaksiyon (L21), maskeleme/downgrade, karantina/blok, onay/consent kontrolü ve (gerekirse) etik kapı (L26) tetikleyerek güvenli yayın/indeksleme sağlar. I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; provenance (L38) ve lineage (L39) ile izlenebilir.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: privacy|policy yazar, ops|observer sınırlı okur

Gizlilik: PII tespit edilen ham içerik memory-safe; yalnız redakte edilmiş örnekler dağıtılır

İdempotency: privacyKey = sourceId + contentHash + scope + windowISO

Observability: OpenTelemetry spans (priv.detect,priv.score,priv.decide,priv.enforce) + metrics

Uyumluluk: KVKK/GDPR sezgisel kurallar; WORM (L38/L26) için karar kayıtları append

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "text.submitted": {
    "event":"text.submitted","timestamp":"iso8601",
    "sourceId":"kb.ingest|ui.chat|runbook.log|postmortem|dist.msg",
    "content":"string",
    "lang":"tr|en|auto",
    "audience":"internal|partner|public",
    "tags":{"namespace":"kb_default","DRILL":false,"SHADOW":false}
  },

  "artifact.ready": {
    "event":"artifact.ready","timestamp":"iso8601",
    "kind":"digest|postmortem|policy|cost.report|drill.report|model.output",
    "path":"data/digest/2025-09-15/digest.html",
    "hash":"sha256:...","previewText":"kısa özet veya null",
    "audience":"internal|partner|public","tags":{"namespace":"kb_default"}
  },

  "model.output": {
    "event":"model.output","timestamp":"iso8601",
    "modelId":"gpt:chat|onnx:anomaly","requestId":"req#abc",
    "content":"string","purpose":"assist|decision|notify",
    "audience":"internal|partner|public"
  },

  "kb.ingest.request": {
    "event":"kb.ingest.request","timestamp":"iso8601",
    "path":"uploads/hr/avans_2024.xlsx","kind":"file|html|md|pdf",
    "namespace":"kb_default","audience":"internal"
  },

  "telemetry.sample": {
    "event":"telemetry.sample","timestamp":"iso8601",
    "series":"dialog.turn|dist.sent|guard.activity","payload":{"text":"... veya null","meta":{"email":"..."}}
  },

  "consent.ledger.query": {
    "event":"consent.ledger.query","timestamp":"iso8601",
    "subjectHash":"sub#7f9a12","purpose":"kb_index|notification|ops",
    "result":"granted|denied|unknown","expiresAt":"iso8601|null"
  }
}


Not: DRILL/SHADOW (L29/L33) etiketli içerikler ayrı skorlanır ve varsayılan olarak yayınlanmaz.

3) Çıktılar (Out)
{
  "privacy.score.ready": {
    "event":"privacy.score.ready","timestamp":"iso8601",
    "sourceId":"kb.ingest","contentHash":"sha256:...","audience":"internal",
    "score":0.78,"level":"low|medium|high|critical",
    "signals":{
      "pii":{"email":3,"phone":1,"tckn":1,"iban":0,"card":0,"address":2,"dob":1,"geo":0},
      "quasiIds":["zipcode","birth_year","gender"],
      "kAnonEst":4,"lDiv":1,"tClose":0.34
    },
    "actions":["redact","mask","consent_check","quarantine?false"],
    "hash":"sha256:..."
  },

  "privacy.action.proposed": {
    "event":"privacy.action.proposed","timestamp":"iso8601",
    "sourceId":"kb.ingest","level":"high",
    "plan":{"redact":["email","phone","tckn","address"],"mask":["iban"],"downgradeAudience":"internal","blockPublish":false}
  },

  "privacy.enforced": {
    "event":"privacy.enforced","timestamp":"iso8601",
    "sourceId":"kb.ingest","result":"ok|blocked|quarantined",
    "outputRef":{"path":"data/kb/redacted/2025-09-15/file.md","hash":"sha256:..."},
    "via":"LIVIA-21"
  },

  "privacy.card": {
    "event":"privacy.card","timestamp":"iso8601",
    "title":"Gizlilik Skoru — HIGH (0.78)",
    "body":"Email×3, TCKN×1, adres×2 bulundu • Redaksiyon uygulandı, audience=internal.",
    "severity":"warn","ttlSec":600
  },

  "privacy.alert": {
    "event":"privacy.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|consent_unknown|redact_failed|quarantine|rbac_denied|ethics_required"
  },

  "privacy.metrics": {
    "event":"privacy.metrics","timestamp":"iso8601",
    "scored":128,"redacted":54,"blocked":3,"quarantined":1,
    "p95DetectMs":7.8,"p95ScoreMs":2.6,"falsePosRate":0.02
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  detectors:{
    email:{ regex: true },
    phoneTR:{ pattern: "\\b(?:\\+90|0)?\\s?5\\d{2}[\\s-]?\\d{3}[\\s-]?\\d{2}[\\s-]?\\d{2}\\b" },
    tckn:{ algo:"mod11", allowFormatted:true },        // Türkiye Cumhuriyeti Kimlik No
    ibanTR:{ pattern:"\\bTR\\d{24}\\b" },
    card:{ luhn:true },
    address:{ ner:"address" },
    personName:{ ner:"person" },
    dob:{ pattern:"\\b\\d{2}[./-]\\d{2}[./-]\\d{4}\\b" },
    geo:{ pattern:"\\b(\\d{1,2}\\.\\d+),(\\d{1,2}\\.\\d+)\\b" }
  },

  quasiIdentifiers:["zipcode","birth_year","gender","city","employer","dept"],

  thresholds:{
    level:{ low:"score<0.3", medium:"0.3<=score<0.6", high:"0.6<=score<0.8", critical:"score>=0.8" },
    blockIf:{ level:"critical", tcknAny:true, cardAny:true },
    quarantineIf:{ massLeakFields: ["tckn","card","ibanTR"], countGte: 3 }
  },

  audiencePolicy:{
    publicMaxLevel:"low",
    partnerMaxLevel:"medium",
    internalMaxLevel:"high"
  },

  actions:{
    redactVia:"LIVIA-21",
    downgradeAudience:true,
    consentCheck:true,                 // unknown → escalate/info
    ethicsGateFor:"public_high|critical", // L26
    lineageLink:true,                  // L39
    provenanceAppend:true              // L38
  },

  storage:{
    redactedDir:"data/redacted/{YYYY-MM-DD}",
    quarantineDir:"data/quarantine/{YYYY-MM-DD}"
  },

  idempotencyTtlSec: 3600
}

5) Skor Modeli (özet)

score ∈ [0,1] — artan risk.

PII yoğunluğu (w=0.45): normalize(∑ tür_ağırlığı × adet)

Ağırlık örn.: tckn:1.0, card:1.0, iban:0.8, email:0.4, phone:0.4, address:0.6, dob:0.6, name:0.3

K-anonimlik kestirimi (w=0.25): kAnonEst = min_grup_boyutu(quasiId kombinasyonları) → katkı 1/kAnonEst (k≤5 riskli)

l-çeşitlilik (w=0.15): hassas nitelik (örn. hastalık/maaş kategorisi) çeşit sayısı; lDiv<2 → risk ↑

t-yakınlık (w=0.10): grup dağılımı ile evrensel dağılım arasındaki uzaklık (JS divergence ~ tClose)

Bağlam/audience (w=0.05): public > partner > internal cezaları

Consent etkisi: consent=denied/unknown → +0.1…+0.2 ceza

Not: K ve l, akışta örneklem/özetleme ile tahmin edilir (namespace bazlı counters). Küçük N → belirsizlik düzeltmesi (Bayes beta öncülü) uygulanır.

6) Pipeline (Kompozisyon)

Detect: içerikten PII tespiti (regex/NER/Luhn/algoritma); DRILL/SHADOW ayrıştır

Quasi-ID Aggregation: namespace içinde son 30 günde kAnon/lDiv/tClose için sayımlar/göstergeler güncellenir

Consent: varsa consent.ledger.query ile eşle (subject hash/alanlardan)

Score: 5 bileşenli skor; audience/consent cezaları

Decide:

blockIf → blok +/veya karantina

Aksi halde actions planı: redact (L21), mask, audience downgrade, gerekirse ethics gate (L26)

Enforce: L21 üzerinden redaksiyon/mask; çıktı yolu yazılır

Emit: privacy.score.ready + privacy.action.proposed + (uygulanınca) privacy.enforced + kart/alert/metrics

Provenance & Lineage: provenance.append (L38) ve lineage kenarları (L39) eklenir

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (text.submitted|artifact.ready|model.output|kb.ingest.request|telemetry.sample) → DETECT

DETECT → SCORE → DECIDE → (ENFORCE) → EMIT → IDLE

Hata: ALERT + IDLE; idem: aynı privacyKey tekrar yan etki doğurmaz

8) Kenar Durumlar

False positive düşürme: e-posta tarzı foo@local & test kartları masum listede → ceza düşür

Formatlanmış veriler: CSV/Excel sütun adları (e.g. TC_Kimlik_No) → otomatik yüksek risk

Maskelenmiş içerik: **** ile saklı veriler tespit edilirse risk katkısı yarıya iner

Çok küçük örnek: kAnon hesaplanamıyorsa belirsizlik → score += 0.05

Public audience ihlali: publicMaxLevel aşıldı → blockPublish + ethics_required uyarısı

Consent unknown: partner/public için warn + consent_check; internal için bilgi

DRILL/SHADOW: yayın yapma, yalnız rapora yaz; digest’te ayrı bölüm

RBAC/Observer: sadece özet kart; ham içerik gösterilmez

9) Telemetri
{
  "privacy.metrics": {
    "event":"privacy.metrics","timestamp":"iso8601",
    "scored":128,"levels":{"low":42,"medium":31,"high":45,"critical":10},
    "redacted":54,"blocked":3,"quarantined":1,
    "p50DetectMs":3.4,"p95DetectMs":7.8,"p95ScoreMs":2.6,
    "falsePosRate":0.02,"consentUnknown":12
  }
}

10) Dosya Yapısı (öneri)
services/livia/privacyRiskScorer.ts            # FSM + orchestrator
services/livia/lib/privacy/detectors.ts        # regex/NER/Luhn/TCKN/IBAN/TR phone
services/livia/lib/privacy/score.ts            # k-anon/l-div/t-close + bağlam/consent
services/livia/lib/privacy/actions.ts          # redact/mask/downgrade/quarantine
services/livia/lib/privacy/consent.ts          # consent ledger köprüsü
services/livia/lib/redact.ts                   # LIVIA-21
services/livia/lib/bridges.ts                  # L22/L24/L26/L38/L39 köprüleri
services/livia/state/privacyStore.ts           # idem index + counters + history
services/livia/__tests__/privacyRiskScorer.test.ts
cfg/livia.privacy.yaml

11) Test İskeleti (Jest/Vitest)

TCKN + email + adres: score ≥ 0.8 → critical → block/quarantine

IBAN maskeli: risk düşer, redact+mask uygulanır

Public audience: high → ethics_required + blockPublish

kAnon küçük (k=3): high seviye; redaksiyon sonrası mediuma iner

Consent unknown (partner): warn + consent_check

DRILL/SHADOW: yayın yok; yalnız metrics ve rapor

Idempotency: aynı içerik ikinci kez yan etki yok

False positive seti: test kart numarası (4111…1111) → düşük risk

Provenance/Lineage: append ve link çıktıları yazıldı

12) Örnek Akış (kısa)

kb.ingest.request(upload.pdf) → DETECT: email×3, TCKN×1, adres×2 → score=0.78 (HIGH)

DECIDE: redact(email, tckn, address), mask IBAN, audience public→internal

ENFORCE: L21 redaksiyon; çıktı data/redacted/... → privacy.enforced(ok)

privacy.card dağıtıldı (L22) → provenance.append + lineage bağlantısı oluşturuldu → digest (L14) özetine girdi.

13) SLO

p95 detect < 10 ms / 2KB metin

p95 score < 5 ms

yanlış blok ≤ %1, kaçırma ≤ %1

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-41 · dataQualitySentinel.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Tüm veri akışları ve tablolar için veri kalite bekçisi kur: tazelik (freshness), tamlık (completeness), tekillik (uniqueness/dedup), tutarlılık (consistency/RI), şema uyumu, dağılım/outlier ve iş kuralları kontrollerini gerçek zamanlı + pencere bazlı çalıştır; ihlalleri karantinaya al, replay/onarım (L31/L42) planla, rapor & kart üret, lineage/provenance (L39/L38) ile bağla, digest’e (L14) özet düş. I/O event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; yerel pencere 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: data|ops|policy yönetir, observer sınırlı okur

Gizlilik: PII yok; serbest metin özetleri L21 ile redakte; sızıntı şüphesinde L27/L40 köprüsü

İdempotency: dqKey = datasetId + windowISO + ruleId + scope

Observability: OpenTelemetry spans (dq.collect,dq.check,dq.quarantine,dq.replay,dq.report) + metrics

2) Girdiler (In) — Zod .strict() şemaları
{
  "dataset.registered": {
    "event":"dataset.registered","timestamp":"iso8601",
    "id":"ds:kinesis:feed_ticks|tbl:orders_daily|file:ingest/hr_2025-09.csv",
    "kind":"stream|table|file|topic",
    "schema":{"version":"v7","fields":[{"name":"ts","type":"timestamp"},{"name":"symbol","type":"string"},{"name":"price","type":"float"}]},
    "owner":"ops","sla":{"freshnessMsP95":800,"availabilityPct":99.9},
    "partitioning":{"by":"day|hour|none","field":"ts"}
  },

  "dq.rule.registered": {
    "event":"dq.rule.registered","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","ruleId":"r:feed_ticks.core",
    "dimensions":{
      "freshness":{"p95MsMax":900},
      "completeness":{"expectedPerMin":">=1200"},
      "uniqueness":{"key":["ts","symbol"],"toleranceDupPctMax":0.1},
      "schema":{"version":"v7"},
      "range":{"field":"price","min":0.0001,"max":100000},
      "consistency":[{"type":"ref_integrity","refDataset":"tbl:symbols","on":["symbol"]}]
    },
    "severity":"warn|error"
  },

  "dq.sample.ingested": {
    "event":"dq.sample.ingested","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","partitionKey":"2025-09-15T14:05:00+03:00",
    "count":1200,"minTs":"iso8601","maxTs":"iso8601",
    "dupCount":2,"nulls":{"symbol":0,"price":0},
    "badRows":[{"reason":"range_violation","rowHash":"sha256:...","ts":"iso8601","symbol":"AVAXUSDT","price":-1}]
  },

  "dataset.partition.ready": {
    "event":"dataset.partition.ready","timestamp":"iso8601",
    "datasetId":"tbl:orders_daily","partition":"2025-09-14"
  },

  "dataset.schema.updated": {
    "event":"dataset.schema.updated","timestamp":"iso8601",
    "id":"ds:kinesis:feed_ticks","prevVersion":"v7","newVersion":"v8",
    "diff":[{"op":"add","path":"/fields/-","value":{"name":"venue","type":"string"}}]
  },

  "dq.check.request": {
    "event":"dq.check.request","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks",
    "window":{"from":"2025-09-15T14:00:00+03:00","to":"2025-09-15T15:00:00+03:00"},
    "rules":["r:feed_ticks.core"],"dryRun":false
  },

  "dq.replay.request": {
    "event":"dq.replay.request","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","partitions":["2025-09-15T14:00:00+03:00/14:59:59"],
    "reason":"completeness_gap","priority":"high"
  }
}

3) Çıktılar (Out)
{
  "dq.check.ready": {
    "event":"dq.check.ready","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","window":{"from":"iso8601","to":"iso8601"},
    "ruleId":"r:feed_ticks.core",
    "score":0.94,"levels":{"freshness":"ok","completeness":"at_risk","uniqueness":"ok","schema":"ok","range":"ok","consistency":"ok"},
    "findings":{"completenessGapPct":0.7,"dupPct":0.09,"p95FreshnessMs":760},
    "actions":["monitor","replay?true","quarantine?false"],
    "hash":"sha256:..."
  },

  "dq.quarantine": {
    "event":"dq.quarantine","timestamp":"iso8601",
    "datasetId":"tbl:orders_daily","partitions":["2025-09-14"],
    "reason":"uniqueness_violation","path":"data/quarantine/tbl_orders_daily/2025-09-14",
    "ttlDays":7
  },

  "dq.replay.enqueued": {
    "event":"dq.replay.enqueued","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks",
    "partitions":["2025-09-15T14:00:00+03:00/14:59:59"],
    "via":"LIVIA-31|LIVIA-42","jobId":"replay#7f9a12"
  },

  "dq.report.ready": {
    "event":"dq.report.ready","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","forDate":"2025-09-15",
    "path":"data/dq/2025-09-15/ds_kinesis_feed_ticks/report.md",
    "summary":"Freshness p95 760ms • Completeness -%0.7 gap (replay queued) • Dup %0.09 • Şema OK.",
    "hash":"sha256:..."
  },

  "dq.card": {
    "event":"dq.card","timestamp":"iso8601",
    "title":"DQ — feed_ticks (14:00–15:00)",
    "body":"Freshness OK • Completeness -%0.7 → replay • Diğerleri OK.",
    "severity":"info","ttlSec":600
  },

  "dq.alert": {
    "event":"dq.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"schema_drift|freshness_breach|completeness_gap|dup_spike|range_violation|consistency_fail|quarantine|replay_failed|idem_duplicate|rbac_denied"
  },

  "dq.metrics": {
    "event":"dq.metrics","timestamp":"iso8601",
    "checks":84,"violations":5,"quarantinedPartitions":2,"replays":3,
    "p95CheckMs":8.2,"dupPctAvg":0.04,"freshnessP95MsAvg":720
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  windows:["5m","1h","24h"],                // stream: 5m/1h; batch: 24h
  sampling:{ rate:1.0, maxBadRowsPerWin:100 },

  defaults:{
    freshness:{ p95MsMax:900 },
    completeness:{ expectedPerMin:">=1200" },  // stream örneği
    uniqueness:{ toleranceDupPctMax:0.1 },
    range:{}, schema:{}, consistency:{}
  },

  quarantine:{
    enabled:true, dir:"data/quarantine/{datasetId}/{partition}",
    ttlDays:7, redactPreview:true   // L21
  },

  replay:{
    enabled:true, via:["LIVIA-31","LIVIA-42"], // housekeeper + şema adaptörü
    maxPerRun:20, backoffMs:500
  },

  reporting:{
    outputDir:"data/dq/{YYYY-MM-DD}/{datasetId_sanitized}",
    mdFile:"report.md", htmlFile:"report.html",
    html:{ embedMiniCSS:true, chartsInlineSvg:true },
    include:{ topViolations:10, sampleBadRows:10 }
  },

  integrations:{
    digest:"LIVIA-14", dist:"LIVIA-22", lineage:"LIVIA-39", provenance:"LIVIA-38",
    privacy:"LIVIA-40", secrets:"LIVIA-27", housekeeper:"LIVIA-31", schemaMitigator:"LIVIA-42",
    sloGuard:"LIVIA-32"
  },

  scoring:{
    weights:{ freshness:0.25, completeness:0.30, uniqueness:0.20, schema:0.10, range:0.10, consistency:0.05 },
    bands:{ ok:"score>=0.95", at_risk:"0.85<=score<0.95", breach:"score<0.85" }
  },

  rbacViews:{
    observer:{ showBadRowSamples:false, showOnlySummary:true }
  },

  idempotencyTtlSec: 3600
}

5) Kontrol Mantığı (özet)

Freshness: p95(now - event.ts) ≤ p95MsMax (stream) / “partition arrived by” SLA (batch)

Completeness: stream → dakikada en az expectedPerMin; batch → partition satır sayısı eşik/istatistik

Uniqueness: key’e göre görülmüş-hash seti; dupPct ≤ tolerance

Schema: schema.version karşılaştır; drift → L42’yi bilgilendir

Range/Outlier: alan bazlı min/max; z-skor/IQR ile uç değer uyarıları

Consistency: referans veri/RI; eşleşmeyen anahtar oranı

Skor: her boyut 0…1 normalize; weights ile birleşik skor

6) Pipeline (Kompozisyon)

Collect: dq.sample.ingested|dataset.partition.ready|dataset.schema.updated

Aggregate: pencere/partition bazlı sayaçlar, p95 tazelik, dup %, null haritaları

Evaluate: kayıtlı dq.rule.* + defaults → seviye/score + bulgular

Decide: quarantine & replay koşulları; schema drift → L42; freshness breach → L32 early-warn

Enforce: karantina dizinine taşı, erişimi kısıtla; replay kuyruğa at (L31/L42)

Report: md/html rapor oluştur; L21 ile redaksiyon; dosyaya yaz

Emit & Distribute: dq.check.ready, dq.report.ready, dq.card, dq.alert, dq.metrics; L22 ile kart

Link: provenance.append (L38) + lineage kenarları (L39)

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (örnek/partition/istek) → COLLECT

COLLECT → EVAL → (ENFORCE) → REPORT → EMIT → IDLE

Hata: ALERT + IDLE; idem: aynı dqKey için ikinci yan etki yok

8) Kenar Durumlar

Pencere boşluğu: veri gelmezse completeness gap → replay.enqueued (stream re-download)

Şema drift: minor (ek alan) → warn + L42 adapt; breaking (alan tipi değişimi) → error + quarantine

Aşırı dup: dupPct > eşik ×2 → halt ingest (policy sinyali)

Ağırlıklandırma: geçici pike karşı EWMA ile yumuşatma

Observer: kötü satır örnekleri gizli; yalnız sayılar

Gizlilik riski: kötü satırda PII → L40 ile skorla, public raporda maskeli

Idempotency: aynı partition/ts için tekrar karantina yapılmaz, yalnız rapor güncellenir

9) Telemetri
{
  "dq.metrics": {
    "event":"dq.metrics","timestamp":"iso8601",
    "checks":84,"violations":5,"quarantinedPartitions":2,"replays":3,
    "p50CheckMs":3.6,"p95CheckMs":8.2,"freshnessP95MsAvg":720,
    "dupPctAvg":0.04,"schemaDrifts":1
  }
}

10) Dosya Yapısı (öneri)
services/livia/dataQualitySentinel.ts           # FSM + orchestrator
services/livia/lib/dq/rules.ts                  # boyut kontrolleri (fresh/completeness/uniqueness/...)
services/livia/lib/dq/aggregate.ts              # pencere sayaçları & p95 hesaplar
services/livia/lib/dq/enforce.ts                # quarantine & replay köprüleri
services/livia/lib/dq/report.ts                 # md/html raporlama
services/livia/lib/bridges.ts                   # L14/L21/L22/L31/L32/L38/L39/L40/L42
services/livia/state/dqStore.ts                 # idem index + counters + history
services/livia/__tests__/dataQualitySentinel.test.ts
cfg/livia.dq.yaml

11) Test İskeleti (Jest/Vitest)

Freshness breach: p95>900ms → level=breach, card warn

Completeness gap: beklenen/dakika < eşik → replay.enqueued

Uniqueness: dupPct>0.1 → quarantine ve halt ingest sinyali

Schema drift: v7→v8; minor → warn, breaking → quarantine

Consistency: RI miss >%1 → consistency_fail uyarısı

Report/Redaction: md/html yazıldı, PII saklı örnekler maskelendi

Idempotency: aynı dqKey ikinci kez yan etki yok

Observer görünümü: örnek satırlar gizli

12) Örnek Akış (kısa)

14:00–15:00 feed örnekleri toplandı → EVAL: freshness OK, completeness −%0.7 → replay.enqueued

15:05 dataset.schema.updated v8 → minor drift → warn + L42’ye işaret

18:00 gün sonu dq.report.ready → L22 ile dağıtıldı, L14 digest’e özet girdi, L38/L39 zincirleri işlendi.

13) SLO

p95 check < 10 ms / pencere

yanlış karantina ≤ %1, kaçırılan ihlal ≤ %1

replay başarı oranı ≥ %95 (sağlayıcı müsaitken)

idempotent çakışma ≈ 0
______________________________________________________________________________________________
ChatGPT:
12s boyunca düşündüm
LIVIA-42 · schemaChangeAutoMitigator.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Akış/tablo/konu dosyalarında şema değişimini (schema drift/evolution) otomatik tespit, risk sınıflama, adaptör üretimi (projection/cast/default/derive/rename/merge-split), gölge doğrulama (shadow), kanarya yayılım, backfill/replay ve rollback ile kesintisiz veri sürekliliği sağlamak.
Kaynak: L41 (DQ drift), L39 (lineage/impact), L38 (provenance), L31 (housekeeper), L32 (SLO guard).
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: data|ops|policy yazar, observer sınırlı okur

Gizlilik: PII yok; metin özetler L21 redakte

İdempotency: schemaKey = datasetId + newSchemaVer + planHash + windowISO

Observability: Spans (sch.diff,sch.plan,sch.shadow,sch.apply,sch.backfill,sch.rollback) + metrics

Uyumluluk: Karar kayıtları L38 WORM; etkiler L39 lineage’a işlenir

2) Girdiler (In) — Zod .strict() şemaları
{
  "dataset.schema.updated": {
    "event":"dataset.schema.updated","timestamp":"iso8601",
    "id":"ds:kinesis:feed_ticks|tbl:orders_daily|topic:events_v2",
    "prevVersion":"v7","newVersion":"v8",
    "diff":[
      {"op":"add","path":"/fields/-","value":{"name":"venue","type":"string"}},
      {"op":"modify","path":"/fields/price/type","from":"float","to":"decimal(20,8)"},
      {"op":"rename","path":"/fields/sym","to":"symbol"}
    ],
    "breakingHint":false
  },

  "dq.alert": {
    "event":"dq.alert","timestamp":"iso8601",
    "level":"warn|error","message":"schema_drift",
    "context":{"datasetId":"ds:kinesis:feed_ticks","expectedVer":"v7","seenVer":"v8"}
  },

  "lineage.impact.ready": {
    "event":"lineage.impact.ready","timestamp":"iso8601",
    "source":"dataset.schema.updated#ds:kinesis:feed_ticks@v8",
    "blastRadius":{"downstreamArtifacts":9,"affectedModels":["model:slip_anomaly:v5"],"guards":["L32"]}
  },

  "schema.adapter.apply.request": {
    "event":"schema.adapter.apply.request","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","newSchema":"v8",
    "mode":"shadow|canary|full","dryRun":true,
    "plan":{"dsl":"...","hash":"sha256:plan"}
  },

  "schema.backfill.request": {
    "event":"schema.backfill.request","timestamp":"iso8601",
    "datasetId":"tbl:orders_daily","from":"2025-09-01","to":"2025-09-15",
    "reason":"type_widen|rename|add_field_default","priority":"normal|high"
  },

  "schema.rollback.request": {
    "event":"schema.rollback.request","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","targetSchema":"v7","reason":"shadow_mismatch|sla_breach|downstream_break"
  }
}

3) Çıktılar (Out)
{
  "schema.adapter.suggested": {
    "event":"schema.adapter.suggested","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","from":"v7","to":"v8",
    "risk":"low|medium|high|breaking","plan":{"dsl":"...", "hash":"sha256:plan"},
    "actions":["shadow_validate","canary_10pct","notify_downstream"],"notes":"price cast decimal(20,8); sym→symbol rename; venue add default=null"
  },

  "schema.shadow.result": {
    "event":"schema.shadow.result","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","newSchema":"v8",
    "window":{"from":"iso8601","to":"iso8601"},
    "mismatchPct":0.0,"castErrors":0,"nullInflation":{"venue":0.0},
    "perf":{"p95ProcMs":2.1},"ok":true
  },

  "schema.adapter.applied": {
    "event":"schema.adapter.applied","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","mode":"canary|full","planHash":"sha256:plan",
    "rollout":{"percent":25,"minStableMin":20},"ok":true
  },

  "schema.backfill.enqueued": {
    "event":"schema.backfill.enqueued","timestamp":"iso8601",
    "datasetId":"tbl:orders_daily","range":{"from":"2025-09-01","to":"2025-09-15"},
    "via":"LIVIA-31","jobId":"bf#7f9a12","partitions":15
  },

  "schema.migration.report.ready": {
    "event":"schema.migration.report.ready","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","from":"v7","to":"v8",
    "path":"data/schema/2025-09-15/ds_kinesis_feed_ticks/migration.md",
    "summary":"Risk=low; shadow OK; canary %25; backfill gereksiz; downstream 1 model uyumlu.",
    "hash":"sha256:..."
  },

  "schema.rollback.done": {
    "event":"schema.rollback.done","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","to":"v7","reason":"sla_breach","ok":true
  },

  "schema.card": {
    "event":"schema.card","timestamp":"iso8601",
    "title":"Şema Adaptörü — ds:kinesis:feed_ticks (v7→v8)",
    "body":"Risk: düşük • Shadow OK • Canary %25 • Sonraki adım: %50 (20dk stabil).",
    "severity":"info","ttlSec":900
  },

  "schema.alert": {
    "event":"schema.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"breaking_change|shadow_mismatch|cast_error|downstream_break|rollback|idem_duplicate|rbac_denied"
  },

  "schema.metrics": {
    "event":"schema.metrics","timestamp":"iso8601",
    "adaptersSuggested":3,"shadowRuns":4,"canaries":2,"fullApplies":1,"rollbacks":0,
    "p95PlanMs":11.2,"p95ShadowMs":6.1,"castErrorRate":0.0001
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  classification:{
    rules:[
      { kind:"add_field", risk:"low", action:["default_null|constant|derive"] },
      { kind:"type_widen", from:["int","float"], to:["decimal*","double"], risk:"low", action:["cast_safe"] },
      { kind:"rename", risk:"medium", action:["map_field","update_downstream_refs"] },
      { kind:"type_narrow", risk:"high", action:["cast_check","shadow_required","canary_required"] },
      { kind:"drop_field", risk:"high", action:["projection_warn","backfill_optional"] },
      { kind:"semver_break", risk:"breaking", action:["block","manual_approval"] }
    ]
  },

  dsl:{
    version:"v1",
    // örnek: map/cast/default/derive/merge/split
    functions:["map","cast","default","derive","rename","merge","split","drop","coalesce","parse_json","format_ts","hash"],
    validateStrict:true
  },

  defaults:{
    onAddField:{ default:"null" },
    onRename:{ updateDownstream:true },
    onTypeCast:{ mode:"safe", onError:"to_null|to_default|drop_row" }
  },

  rollout:{
    steps:[10,25,50,100], minStableMin:20,
    abortOn:{ dqBreach:true, sloGuard:true }
  },

  shadow:{
    enabled:true, percent:10, compareMode:"row_shape|value_sample",
    mismatchTolerancePct:0.01
  },

  backfill:{
    enable:true, partitionsPerJob:20, parallel:4, via:"LIVIA-31",
    throttleIO:"medium"
  },

  integrations:{
    dq:"LIVIA-41", lineage:"LIVIA-39", provenance:"LIVIA-38",
    housekeeper:"LIVIA-31", sloGuard:"LIVIA-32", dist:"LIVIA-22"
  },

  reporting:{
    outputDir:"data/schema/{YYYY-MM-DD}/{datasetId_sanitized}",
    mdFile:"migration.md", htmlFile:"migration.html",
    html:{ embedMiniCSS:true, chartsInlineSvg:true }
  },

  idempotencyTtlSec: 86400
}

5) Adaptör DSL (özet)

Şablon:

version: v1
from: v7
to: v8
mappings:
  - map: { from: "sym", to: "symbol" }
  - cast: { field: "price", to: "decimal(20,8)", onError: "to_null" }
  - default: { field: "venue", value: null }
  - derive: { field: "price_usd", expr: "price * fx('TRYUSD')" }
  - drop: { field: "legacy_flag" }
  - split: { field: "user_fullname", into: ["name","surname"], by: " " }
  - merge: { fields: ["city","country"], to: "location", sep: ", " }


Doğrulama: zorunlu alanlar var mı? tür uyumu? onError politikası?

Yan etkiler: rename sonrası downstream referansları güncellenebilir (L39).

Performans: format_ts/parse_json gibi ağır fonksiyonlar canary’de ölçülür.

6) Risk Skoru (özet)

risk ∈ {low, medium, high, breaking} → sınıflandırma kuralları + bulgular:

Field add ⇒ low (default/derive ile telafi)

Type widen ⇒ low (cast safe)

Rename ⇒ medium (downstream mapping gerekir)

Type narrow / drop ⇒ high (veri kaybı riski)

Semver break / primary key change ⇒ breaking (manuel onay şart)

7) Pipeline (Kompozisyon)

Diff & Classify: dataset.schema.updated|dq.alert(schema_drift) → farkı çıkar, risk sınıfı ata

Plan: DSL tabanlı adaptör planını synthesize et (rename/map/cast/default/derive…); schema.adapter.suggested yay

Shadow: planı shadow modda uygula; mismatchPct, castErrors, performans ölç → schema.shadow.result

Canary/Full: shadow OK ise rollout.steps ile canary → full; abortOn koşullarında dur/geri al

Backfill/Replay: batch tablolarında tarih aralıkları için backfill kuyrukla (L31)

Rollback: SLA/DQ ihlalinde eski şemaya dön; lineage/provenance güncelle

Report & Distribute: migration raporu md/html; kart/uyarı; L22 dağıtım, L39/L38 bağlantıları

Metrics: plan/uygulama/geri alma sayaçları, p95 süreler

8) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (dataset.schema.updated|dq.alert) → DIFF

DIFF → PLAN (adapter DSL) → SHADOW

SHADOW → (ok) CANARY | (mismatch) ROLLBACK

CANARY → (stabil) FULL | (dq/slo breach) ROLLBACK

FULL → BACKFILL? → REPORT → IDLE

ROLLBACK → REPORT → IDLE

Hata: ALERT + IDLE; idem: aynı schemaKey ikinci kez yan etki yok

9) Kenar Durumlar

JSON/Variant alan: şema dışı serbest alanlar için parse_json + derive ile normalize

PK/Ordering değişimi: ingestion sırası bozulursa breaking; yalnız gölge doğrulama ve manuel onay

Null şişmesi: yeni alanlarda aşırı null → default/derive stratejisini değiştir

Cast hataları: to_null yerine to_default geçici; hata oranı eşiği aşarsa canary durdur

Downstream kırılma: L39 blast radius büyükse rollout adımları küçült (%5, %10…)

SLO etkisi: L32 p95 işlem süresi yükselirse adım geri alınır

Observer görünümü: plan özet; DSL detayları kapalı (RBAC)

DRILL/SHADOW verisi: prod metriklerinden ayrıştır (etiket)

10) Telemetri
{
  "schema.metrics": {
    "event":"schema.metrics","timestamp":"iso8601",
    "adaptersSuggested":3,"shadowRuns":4,"canaries":2,"fullApplies":1,"rollbacks":0,
    "p50PlanMs":5.6,"p95PlanMs":11.2,"p95ShadowMs":6.1,
    "castErrorRate":0.0001,"nullInflationMax":0.01
  }
}

11) Dosya Yapısı (öneri)
services/livia/schemaChangeAutoMitigator.ts     # FSM + orchestrator
services/livia/lib/schema/diff.ts               # şema diff & sınıflandırma
services/livia/lib/schema/dsl.ts                # adaptör DSL parse/validate/suggest
services/livia/lib/schema/shadow.ts             # gölge doğrulama yürütücüsü
services/livia/lib/schema/rollout.ts            # canary/full uygulatıcı
services/livia/lib/schema/backfill.ts           # L31 kuyruklama & izleme
services/livia/lib/bridges.ts                   # L41/L39/L38/L31/L32/L22 köprüleri
services/livia/lib/redact.ts                    # LIVIA-21
services/livia/state/schemaStore.ts             # idem index + aktif planlar
services/livia/__tests__/schemaChangeAutoMitigator.test.ts
cfg/livia.schema.yaml

12) Test İskeleti (Jest/Vitest)

Add field (venue) → risk low, plan default=null, shadow OK, canary %10→%25→%100

Rename (sym→symbol) → downstream referansları güncellendi (lineage), shadow 0 mismatch

Type widen (float→decimal) → cast hatası yok, p95 proc < 10ms

Type narrow (decimal→int) → risk high, canary durduruldu, rollback

Drop field → risk high, backfill opsiyonlu uyarı

Breaking (PK değişimi) → blocking + manuel onay gereği

DQ entegrasyonu: L41 schema_drift uyarısı geldikten sonra plan üretildi

SLO entegrasyonu: L32 lat p95 yükselişi → rollout durdu → rollback

Idempotency: aynı schemaKey ikinci yan etki yok

Observer görünümü: DSL gizlendi, yalnız özet

13) Örnek Akış (kısa)

14:05 dataset.schema.updated(v7→v8) → DIFF risk=low/medium → PLAN DSL üretildi → schema.adapter.suggested

14:10 SHADOW 10% → mismatch 0% → CANARY %25 (20dk stabil) → FULL

14:45 REPORT yazıldı; kart dağıtıldı; L39 etkiler, L38 kayıtları işlendi.

14) SLO

p95 plan < 12 ms

p95 shadow validate < 8 ms (pencere/partisyon başına)

yanlış rollout ≤ %1, kaçırılan breaking ≤ %1

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-43 · modelDriftWatcher.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Üretimdeki modeller için covariate drift (özellik dağılımı kayması) ve concept drift (etiket/ilişki kayması) ile performans/kalibrasyon bozulmalarını erken saptamak; risk seviyesine göre aksiyon planı (uyarı, eşik ayarı, scope daraltma, fallback/champion’e dönüş, L44 otomatik yeniden-eğitim, L45 kanarya/kademeli geçiş) üretmek. Lineage (L39) ve Provenance (L38) zincirlerine bağla; rapor & kart (L22) üret; SLO (L32) ve Maliyet (L34) guard’larıyla çelişmeden hareket et. I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; gün penceresi 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: data|mlops|policy yönetir; observer sınırlı okur

Gizlilik: PII yok; serbest metinler L21 ile redakte

İdempotency: driftKey = modelId + version + windowISO + detector + scope

Observability: Spans (drift.collect,drift.detect,drift.decide,drift.enforce,drift.report) + metrics

Uyum: kritik aksiyonlar L26 etik/WORM; kayıtlar L38 append

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "model.registered": {
    "event":"model.registered","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","version":"v5",
    "task":"binary|multiclass|regression|ranking",
    "features":[
      {"name":"slip_p95","type":"float"},
      {"name":"lat_p95","type":"float"},
      {"name":"symbol","type":"categorical"}
    ],
    "baseline":{
      "window":"train|holdout|first_7d_prod",
      "metrics":{"auc":0.86,"auprc":0.81,"ece":0.03,"rmse":null},
      "featureStats":{
        "slip_p95":{"mean":1.2,"std":0.4,"hist":[[0.0,0.5,0.1],[0.5,1.0,0.3],[1.0,2.0,0.6]]},
        "symbol":{"counts":{"AVAXUSDT":0.22,"SOLUSDT":0.18,"...":"..."}}
      }
    },
    "thresholds":{"score_alert":0.2,"score_block":0.35}
  },

  "model.prediction.logged": {
    "event":"model.prediction.logged","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","version":"v5",
    "sampleId":"s#7f9a12",
    "features":{"slip_p95":1.8,"lat_p95":0.92,"symbol":"AVAXUSDT"},
    "pred":{"score":0.71,"label_hat":1},
    "segment":{"region":"eu-central","desk":"default","symbol":"AVAXUSDT"}
  },

  "groundtruth.logged": {
    "event":"groundtruth.logged","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","version":"v5",
    "sampleId":"s#7f9a12","y_true":1,"labelAt":"iso8601"
  },

  "feature.snapshot": {
    "event":"feature.snapshot","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","version":"v5","window":"1h|24h|7d",
    "stats":{
      "slip_p95":{"mean":1.35,"std":0.52,"hist":[[0.0,0.5,0.06],[0.5,1.0,0.22],[1.0,2.0,0.72]]},
      "lat_p95":{"mean":0.88,"std":0.31},
      "symbol":{"counts":{"AVAXUSDT":0.34,"SOLUSDT":0.09,"...":"..."}}
    },
    "n": 12450
  },

  "model.canary.metrics": {
    "event":"model.canary.metrics","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","champion":"v5","challenger":"v6",
    "window":"1h","metrics":{"auc_delta":-0.04,"ece_challenger":0.07,"latency_ms_p95":18}
  },

  "dq.finding": {
    "event":"dq.finding","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","kind":"schema_drift|freshness|completeness",
    "details":{"newField":"venue"}
  },

  "fsync.lag": {
    "event":"fsync.lag","timestamp":"iso8601",
    "featureStore":"online","lagMsP95":160,"namespace":"kb_default"
  }
}

3) Çıktılar (Out)
{
  "model.drift.covariate": {
    "event":"model.drift.covariate","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","version":"v5","window":"24h",
    "detectors":{"psi":{"slip_p95":0.32,"symbol":0.28},"ks":{"lat_p95":0.19}},
    "overall":{"domainAUC":0.78,"mmd":0.21},
    "level":"low|medium|high|critical",
    "topShift":["symbol","slip_p95"],
    "hash":"sha256:..."
  },

  "model.drift.concept": {
    "event":"model.drift.concept","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","version":"v5","window":"24h",
    "metrics":{"auc":0.79,"delta_auc":-0.07,"ece":0.06,"ppv":0.68,"fnr":0.22},
    "tests":{"page_hinkley":"alarm|ok","ddm":"warn","calibration":"off"},
    "level":"medium|high|critical",
    "segments":[{"segment":"region=eu-central","delta_auc":-0.11}]
  },

  "model.guard.triggered": {
    "event":"model.guard.triggered","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","version":"v5",
    "kind":"covariate|concept|calibration","level":"high",
    "trigger":"psi>0.25|ΔAUC<-0.05|ECE>0.05",
    "actionPlan":{
      "fallback":{"to":"v4","mode":"immediate|graceful"},
      "flag":{"reduce_traffic_pct":25},        // L35/L37
      "retrain":{"kick":"LIVIA-44","priority":"high"},
      "canary":{"deploy":"v6","via":"LIVIA-45","ramp":[10,25]},
      "threshold":{"adjust":{"score_block":0.33}}
    },
    "hash":"sha256:..."
  },

  "model.health.report.ready": {
    "event":"model.health.report.ready","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","version":"v5",
    "path":"data/model-health/2025-09-15/slip_anomaly_v5/report.md",
    "summary":"Covariate drift: PSI symbol 0.28, slip_p95 0.32 (high). Concept: ΔAUC -0.07; ECE 0.06. Öneri: v6 canary %10, retrain kick, threshold -0.02.",
    "hash":"sha256:..."
  },

  "model.drift.card": {
    "event":"model.drift.card","timestamp":"iso8601",
    "title":"Model Drift — slip_anomaly v5",
    "body":"Covariate HIGH (PSI 0.32) • Concept MEDIUM (ΔAUC -0.07) • Aksiyon: v6 canary %10 + retrain.",
    "severity":"warn","ttlSec":900
  },

  "model.drift.alert": {
    "event":"model.drift.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|underpowered|label_delay|dq_block|guard_triggered|rollback|rbac_denied|calc_error"
  },

  "model.drift.metrics": {
    "event":"model.drift.metrics","timestamp":"iso8601",
    "evaluations":84,"covariateHigh":6,"conceptHigh":3,"guards":4,
    "p95EvalMs":12.8,"labelLatencyP95Min":45,"segmentsFlagged":5
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  windows:["1h","6h","24h","7d"],

  detectors:{
    psi:{ enabled:true, threshold:{ low:0.1, medium:0.2, high:0.25, critical:0.35 } },           // Population Stability Index
    ks:{ enabled:true, pValueMax:0.01 },                                                           // Kolmogorov–Smirnov
    jsd:{ enabled:true, threshold:{ high:0.15 } },                                                 // Jensen–Shannon
    domainClassifier:{ enabled:true, aucHigh:0.75 },                                               // train(prod vs base)
    mmd:{ enabled:false, threshold:0.15 },                                                         // Maximum Mean Discrepancy
    shapDrift:{ enabled:true, topK:10, popCorrDrop:0.2 }                                           // açıklanabilirlik kayması
  },

  concept:{
    labelPolicy:{ maxDelayMin:1440, requireMinPositives:200, requireMinSamples:1000 },
    tests:{ pageHinkley:{ delta:0.005, lambda:50 }, ddm:{ warn:2.0, alarm:3.0 } },
    performance:{ aucDropHigh:0.05, eceHigh:0.05, rmseWorsePct:0.1 }
  },

  segments:{ sliceBy:["region","desk","symbol"], topN:10, minSamples:300 },

  actions:{
    fallback:{ enabled:true, mode:"immediate", minLevel:"critical" },
    thresholdAdjust:{ enabled:true, maxDelta:0.05 },
    retrain:{ onLevel:"medium", via:"LIVIA-44", priority:"high" },
    canary:{ onLevel:"medium", via:"LIVIA-45", steps:[10,25,50], minStableMin:20 },
    trafficAllocator:{ via:"LIVIA-37", minPctPerVariant:5 }
  },

  integrations:{
    dq:"LIVIA-41",
    schemaMig:"LIVIA-42",
    slo:"LIVIA-32",
    cost:"LIVIA-34",
    flags:"LIVIA-35",
    experiments:"LIVIA-36",
    bandit:"LIVIA-37",
    retrain:"LIVIA-44",
    canary:"LIVIA-45",
    fsync:"LIVIA-46",
    lineage:"LIVIA-39",
    provenance:"LIVIA-38",
    dist:"LIVIA-22",
    redact:"LIVIA-21"
  },

  reporting:{
    outputDir:"data/model-health/{YYYY-MM-DD}/{modelId}_{version}",
    mdFile:"report.md", htmlFile:"report.html",
    html:{ embedMiniCSS:true, chartsInlineSvg:true },
    include:{ topShiftFeatures:10, segmentTables:true, calibrationPlot:true }
  },

  rbacViews:{ observer:{ hideFeatureNames:false, hideSHAPValues:true } },

  idempotencyTtlSec: 3600
}

5) Tespit Yöntemleri (özet)

PSI (Population Stability Index): bucket’lı dağılımda PSI = Σ (p_i - q_i) * ln(p_i / q_i), q=baseline, p=prod.

KS (sürekli özellik): D = sup_x |F_p(x) - F_q(x)|, p-value≤0.01 uyarı.

JSD (kategori): JSD(P||Q) = 0.5*KL(P||M)+0.5*KL(Q||M), M=(P+Q)/2.

Domain Classifier AUC: prod vs baseline ayrımı; AUC yüksekse dağılım ayrışmış.

MMD: çekirdek tabanlı genel uzaklık.

Concept Drift:

Prequential: akışta hatalara Page-Hinkley / DDM ile alarm.

Performans: AUC/PR/Accuracy farkı; Calibration (ECE/Brier) artışı.

Segment Uçurumları: sliceBy’larda ΔAUC büyükse lokal drift.

SHAP Drift: ortalama |SHAP| sıralamasındaki korelasyon düşüşü (örn. Spearman < (1-0.2)).

6) Pipeline (Kompozisyon)

Collect: model.prediction.logged, feature.snapshot, etiketler (groundtruth.logged), canary/champion karşılaştırmaları

Validate/Normalize: Zod .strict(); eksik/tekrar kayıtlar tekilleştirilir; DRILL/SHADOW ayrıştırılır

Covariate Detect: PSI/KS/JSD/Domain AUC/MMD + SHAP drift; üst 10 kaymış özellik listesi

Concept Detect: prequential testler + etiketli pencerede AUC/ECE/PPV/FNR (yeterli örnek şartı)

Segment Analysis: sliceBy segmentlerde drift/performans farkları

Decide: seviye (low/medium/high/critical) → actionPlan (fallback, threshold adjust, retrain, canary, traffic shift)

Enforce (koşullu):

L37/L35 ile trafik/flag ayarı, L45 ile challenger canary, L44 ile retrain kick

SLO/L32 ihlali varsa agresif fallback; Cost/L34 ile pahalı aksiyonlar (ör. geniş canary) sınırlanır

Report: model sağlık raporu (MD/HTML + kalibrasyon, lift, PSI/KS grafikleri) → dosyaya yaz

Emit & Distribute: model.drift.*, model.guard.triggered, model.health.report.ready, kart/alert/metrics; L22 ile dağıt

Provenance & Lineage: tüm karar/raporlar L38 ve L39 ile zincire eklenir

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (örnek/özet/etiket/planlı saat) → EVAL

EVAL → (drift≥threshold) DECIDE → (ENFORCE) → REPORT → EMIT → IDLE

Hata: ALERT + IDLE; idem: aynı driftKey ikinci kez yan etki yok

8) Kenar Durumlar

Label gecikmesi: yetersiz etiket → underpowered|label_delay; concept kararları hold, yalnız covariate raporu

DQ engeli: L41 “schema/freshness breach” → drift kararı beklet ve dq_block uyarısı

FS gecikmesi: L46 lagMsP95 yüksek → skorlar gözaltı (confidence düşür)

Regime shift (L54 sinyali): global dağılım değişimi → temporary thresholds + hızlandırılmış retrain

Drill/Shadow: işaretli örnekler öğrenmeye katılmaz; raporda ayrı bölüm

Observer görünümü: ham özellik dağılımı yerine özet/anonim bucketlar

Idempotency: aynı pencere/detector için tekrar aksiyon yok; yalnız kart yenilenir

9) Telemetri
{
  "model.drift.metrics": {
    "event":"model.drift.metrics","timestamp":"iso8601",
    "evaluations":84,"covariateHigh":6,"conceptHigh":3,"guards":4,
    "p50EvalMs":6.3,"p95EvalMs":12.8,"labelLatencyP95Min":45,
    "segmentsFlagged":5,"actions":{"fallback":1,"retrain":2,"canary":2,"threshold":1}
  }
}

10) Dosya Yapısı (öneri)
services/livia/modelDriftWatcher.ts
services/livia/lib/drift/covariate.ts            # PSI/KS/JSD/DomainAUC/MMD
services/livia/lib/drift/concept.ts              # prequential + performans + kalibrasyon
services/livia/lib/drift/shap.ts                 # SHAP drift ölçer
services/livia/lib/drift/segments.ts             # dilim bazlı analiz
services/livia/lib/drift/decider.ts              # seviye & aksiyon planı
services/livia/lib/drift/report.ts               # md/html + grafikleri (inline SVG)
services/livia/lib/bridges.ts                    # L22/L32/L34/L35/L37/L38/L39/L44/L45/L46
services/livia/state/driftStore.ts               # idem index + baselines + pencere cache
services/livia/__tests__/modelDriftWatcher.test.ts
cfg/livia.drift.yaml

11) Test İskeleti (Jest/Vitest)

PSI yüksek: slip_p95 PSI=0.32 → covariate high, kart warn

Concept düşüşü: ΔAUC=-0.07, ECE=0.06 → concept medium/high + model.guard.triggered

Segment uçurumu: region=eu-central ΔAUC=-0.11 işaretlendi

Label gecikmesi: yetersiz örnek → underpowered ve concept kararı hold

DQ blok: L41 drift öncesi “freshness breach” → karar bekletildi

Aksiyonlar: retrain kick, canary v6 %10, threshold -0.02 uygulandı

Idempotency: aynı driftKey tekrarı yan etki üretmedi

Report yazımı: md/html, kalibrasyon grafiği, PSI histogramları üretildi

Observer görünümü: SHAP değerleri gizli; yalnız sıralama

12) Örnek Akış (kısa)

11:00–12:00 feature.snapshot(1h) + model.prediction.logged → PSI yüksek (symbol 0.28, slip_p95 0.32)

13:30 ilk etiketler geldi → ΔAUC=-0.07, ECE=0.06 → model.guard.triggered

Aksiyon: L45 v6 canary %10, L44 retrain kick, L37 trafik %25 azalt → kart/rapor → L38/L39 zincirleri işlendi.

13) SLO

p95 EVAL < 15 ms / pencere

drift kaçırma ≤ %1, yanlış alarm ≤ %1

guard→aksiyon MTTA ≤ 60 s

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-44 · autoRetrainOrchestrator.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Model yeniden-eğitimini (auto retrain) tetik‐planla‐yürüt: drift/schedule/manuel tetiklerle veri malzemeleme → HPO (HyperParam Opt.) → eğitim → değerlendirme → paketleme → kanarya (L45) → terfi/geri alma sürecini uçtan uca orkestre et. DQ (L41), Şema Mitigasyonu (L42), Drift (L43), Maliyet (L34), SLO (L32), Bayrak/Bandit (L35/L37), Soykütük (L39) ve Provenance (L38) ile entegre.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Runtime: Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: mlops|data|policy yönetir, observer kısıtlı okur

Gizlilik: PII yok; serbest metin özetleri L21 ile redakte

İdempotency: retrainKey = modelId + targetTag + dataHash + hpoPlanHash

Observability: spans (rt.plan,rt.materialize,rt.train,rt.eval,rt.package,rt.publish,rt.canary) + metrics

Uyum: kritik kararlar L26 etik/WORM; tüm artefakt akışı L38 append

2) Girdiler (In) — Zod .strict() şemaları
{
  "retrain.triggered": {
    "event":"retrain.triggered","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","reason":"drift|schedule|manual",
    "source":{"ref":"model.drift.guard|cron|user#hashed"},
    "priority":"low|normal|high|urgent",
    "hints":{"targetTag":"v6-candidate","minDataDays":14,"segments":["region=eu-central"]}
  },

  "retrain.plan.request": {
    "event":"retrain.plan.request","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","targetTag":"v6-candidate",
    "objective":{"metric":"auprc|auc|rmse","direction":"max|min"},
    "constraints":{"maxTrainMin":60,"maxBudgetUSD":80,"maxConcurrent":2},
    "hpo":{"algo":"tpe|bayes|grid|hyperband","maxTrials":40,"earlyStop":{"kind":"median","minSteps":5}}
  },

  "dataset.snapshot.ready": {
    "event":"dataset.snapshot.ready","timestamp":"iso8601",
    "namespace":"kb_default","window":{"from":"iso8601","to":"iso8601"},
    "features":["feat:slip.p95","feat:lat.p95"],"labels":{"name":"y_true","positiveRate":0.21},
    "exclusions":{"DRILL":true,"incidentIds":["inc-2025-09-13-1"]},
    "stats":{"rows":240000,"missingPct":{"y_true":0.08}}
  },

  "fsync.lag": {
    "event":"fsync.lag","timestamp":"iso8601",
    "featureStore":"online|offline","lagMsP95":130
  },

  "dq.finding": {
    "event":"dq.finding","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","kind":"freshness|completeness|schema_drift","severity":"warn|error"
  },

  "schema.migration.classified": {
    "event":"schema.migration.classified","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","classification":"additive|breaking|mixed"
  },

  "training.job.progress": {
    "event":"training.job.progress","timestamp":"iso8601",
    "jobId":"train#7f9a12","trial":7,"step":42,
    "metrics":{"val_auprc":0.802,"val_auc":0.86,"loss":0.41}
  },

  "training.job.completed": {
    "event":"training.job.completed","timestamp":"iso8601",
    "jobId":"train#7f9a12","bestTrial":9,
    "artifact":{"path":"artifacts/train/slip_anom/v6-cand/best.ckpt","hash":"sha256:..."},
    "metrics":{"val_auprc":0.814,"val_auc":0.873,"train_min":48}
  },

  "eval.job.completed": {
    "event":"eval.job.completed","timestamp":"iso8601",
    "candidateTag":"v6-candidate",
    "holdout":{"auprc":0.812,"auc":0.871,"ece":0.028,"latency_ms_p95":19},
    "offlineCanary":{"delta_auc_vs_v5":+0.031,"delta_ece_vs_v5":-0.006}
  },

  "package.request": {
    "event":"package.request","timestamp":"iso8601",
    "candidateTag":"v6-candidate","formats":["onnx","torchscript","docker"],
    "opt":{"quantize":"int8|none","sig":"ed25519","repeatableSeed":42}
  }
}

3) Çıktılar (Out)
{
  "retrain.plan.ready": {
    "event":"retrain.plan.ready","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","targetTag":"v6-candidate",
    "data":{"window":{"from":"iso8601","to":"iso8601"},"segments":["global","region=eu-central"],"rows":240000,
            "exclusions":{"DRILL":true,"incidents":1}},
    "splits":{"method":"time_series","train":"70%","val":"15%","holdout":"15%"},
    "hpo":{"algo":"tpe","maxTrials":40,"searchSpace":{"lr":"[1e-5,1e-2]","depth":"[2,6]","dropout":"[0.0,0.5]"}},
    "constraints":{"maxTrainMin":60,"maxBudgetUSD":80},
    "gates":{"dq":"L41","schema":"L42","cost":"L34","slo":"L32","ethics":"L26"},
    "hash":"sha256:..."
  },

  "retrain.materialize.ready": {
    "event":"retrain.materialize.ready","timestamp":"iso8601",
    "manifest":{"features":["feat:slip.p95","feat:lat.p95"],"label":"y_true","rows":240000,
                "dataHash":"sha256:...","lineageRef":"state/lineage/.../manifest.json"},
    "path":"artifacts/data/slip_anom/v6-cand/manifest.json"
  },

  "training.job.enqueued": {
    "event":"training.job.enqueued","timestamp":"iso8601",
    "jobId":"train#7f9a12","targetTag":"v6-candidate","trials":40,"resources":{"gpu":1,"cpu":4}
  },

  "hpo.progress": {
    "event":"hpo.progress","timestamp":"iso8601",
    "jobId":"train#7f9a12","completed":18,"total":40,
    "best":{"trial":12,"val_auprc":0.813,"params":{"lr":0.0007,"depth":4,"dropout":0.2}}
  },

  "model.candidate.ready": {
    "event":"model.candidate.ready","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","candidateTag":"v6-candidate",
    "artifact":{"onnx":"artifacts/models/slip_anom/v6.onnx","hash":"sha256:..."},
    "metrics":{"holdout_auprc":0.812,"holdout_auc":0.871,"ece":0.028,"p95_ms":19},
    "meetsPromotion":"true|false","rationale":[">champion by +0.031 AUC","ECE improved","latency OK"]
  },

  "model.publish.proposed": {
    "event":"model.publish.proposed","timestamp":"iso8601",
    "candidateTag":"v6-candidate","champion":"v5",
    "gates":{"dq":"pass","schema":"pass","cost":"pass","ethics":"pass"},
    "proposal":{"canarySteps":[10,25,50],"minStableMin":20,"flagId":"kb.hybridSearch.v2"},
    "requiresApproval":["policy-lead"],"hash":"sha256:..."
  },

  "canary.deploy.request": {
    "event":"canary.deploy.request","timestamp":"iso8601",
    "candidateTag":"v6-candidate","steps":[10,25,50],"via":"LIVIA-45","minStableMin":20
  },

  "retrain.report.ready": {
    "event":"retrain.report.ready","timestamp":"iso8601",
    "modelId":"model:slip_anomaly","candidateTag":"v6-candidate","format":"md|html",
    "path":"data/retrain/2025-09-15/slip_anom_v6/report.md",
    "summary":"AUCPR +0.018, AUC +0.031, ECE -0.006 • Latency p95 19ms • Canary önerildi (%10→%25→%50).",
    "hash":"sha256:..."
  },

  "retrain.card": {
    "event":"retrain.card","timestamp":"iso8601",
    "title":"Retrain Hazır — slip_anomaly v6 aday",
    "body":"Holdout AUC +0.031 • ECE 0.028 • p95 19ms • Canary %10 önerildi.",
    "severity":"info","ttlSec":900
  },

  "retrain.alert": {
    "event":"retrain.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"dq_block|schema_block|cost_exceeded|capacity_unavailable|underpowered|hpo_early_stop|train_fail|eval_fail|pack_fail|publish_denied|idem_duplicate|rbac_denied"
  },

  "retrain.metrics": {
    "event":"retrain.metrics","timestamp":"iso8601",
    "plans":3,"jobs":2,"completed":1,"hpoTrials":40,
    "p95PlanMs":22,"p95MaterializeMin":6,"p95TrainMin":48,
    "budgetUSD":54.2,"costGuardTrips":0
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  triggers:{
    fromDrift:{ minLevel:"medium", cooldownHours:12 },   // L43
    schedule:{ cron:"Mon,Thu 03:00" },
    manual:{ requireRole:"mlops|policy" }
  },

  data:{
    windowDays: 14,
    exclude:{ DRILL:true, incident:true },
    minRows: 100_000,
    labelLatencyMaxMin: 1440,
    splits:{ method:"time_series", train:0.7, val:0.15, holdout:0.15 },
    balance:{ enabled:true, method:"class_weight|downsample", targetPosRate:0.25 }
  },

  hpo:{
    algo:"tpe", maxTrials:40, parallel:2,
    earlyStop:{ kind:"median", minSteps:5 },
    searchSpace:{
      lr:"[1e-5,1e-2]", depth:"[2,6]", dropout:"[0.0,0.5]", l2:"[0.0,0.01]"
    }
  },

  training:{
    framework:"pytorch|xgboost",
    resources:{ gpu:1, cpu:4, memGB:16 },
    maxTrainMin: 60,
    seed: 42,
    checkpoint:{ everyMin:5, keepLast:3 }
  },

  evaluation:{
    primary:"auprc|auc|rmse",
    secondary:["ece","latency_ms_p95","cost_usd"],
    segments:["region","desk","symbol"],
    requireDelta:{ metric:"+0.01_auc|+0.008_auprc", ece:"-0.005" }
  },

  packaging:{
    formats:["onnx","torchscript","docker"],
    quantize:"none|int8",
    sign:{ algo:"ed25519", keyRef:"kms:key/model-sign" },
    reproducibility:{ lockDeps:true, recordEnv:true, dockerDigest:true }
  },

  gates:{
    dq:"LIVIA-41", schema:"LIVIA-42", cost:"LIVIA-34", slo:"LIVIA-32", ethics:"LIVIA-26"
  },

  promotion:{
    requireApproval:["policy-lead"],
    canary:{ via:"LIVIA-45", steps:[10,25,50], minStableMin:20 },
    allocator:{ via:"LIVIA-37", minPctPerVariant:5 }
  },

  storage:{
    dataDir:"artifacts/data/{modelId}/{targetTag}",
    modelDir:"artifacts/models/{modelId}/{targetTag}",
    reportDir:"data/retrain/{YYYY-MM-DD}/{modelId}_{targetTag}"
  },

  costBudgetUSD: 100,
  idempotencyTtlSec: 86400
}

5) Metodoloji (özet)

Veri malzemeleme: L39 lineage üzerinden manifest üret; L41 DQ kontrolleri geçilmezse blokla.

Split: zaman serisi veya K-fold (opsiyonel); label latency kısıtları.

HPO: TPE/Bayesian/Hyperband; erken durdurma (median/pruning).

Eğitim: deterministik tohum; checkpoint & erken durdurma; SLO/L32 ile eğitim süresi gözetimi.

Değerlendirme: primary/secondary metrikler; segment bazlı tablolar; kalibrasyon (ECE/Platt/Temp. Scaling).

Seçim: champion’a göre istatistiksel anlamlı fark (bootstrap/DeLong); cost/latency guardrails.

Paketleme: ONNX/TorchScript + opsiyonel quantize; imza (ed25519); reproducibility log (deps/env/docker).

Yayın: L45 kanarya planı; L37/L35 trafik paylaştırma; başarısızlıkta rollback.

6) Pipeline (Kompozisyon)

Plan: retrain.triggered|plan.request → hedef tag, pencere, HPO alanı, bütçe/kapasite kontrol

Materialize: veri manifest + hash; DQ/L41 ve Şema/L42 kapıları → pass ise eğitim kuyruğu

Train/HPO: kaynak ayır, denemeleri yürüt; progress & early-stop olayları yay

Eval: holdout + segment; driftte işaretli segmentlere ek ağırlık raporu

Select & Gate: champion karşılaştır; L34/L32/L26 kapıları; publish.proposed

Package: seçili aday artefaktlarını üret & imzala; L38 provenance append

Canary: L45 ile dağıtım isteği; L37 ile pay yönetimi

Report & Emit: rapor md/html; kart/alert/metrics; L22 ile dağıt

Index: L39 lineage düğüm/kenarlarını güncelle (model→artifact→decision)

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (retrain.triggered|plan.request) → PLAN

PLAN → (DQ/Schema ok?) MATERIALIZE | (blok) PAUSE

MATERIALIZE → TRAIN (HPO)

TRAIN → EVAL (best trial)

EVAL → (gates pass) PACKAGE | (fail) HOLD/ABORT

PACKAGE → PUBLISH.PROPOSE → (onay) CANARY | (ret) ABORT

CANARY → (stabil) PROMOTE | (breach) ROLLBACK

Hata: ALERT + mevcut durum; idem: aynı retrainKey ile ikinci yan etki yok

8) Kenar Durumlar

DQ/Schema blok: L41/L42 error → plan PAUSE; otomatik yeniden dene +30 min

Underpowered: minRows altı veya pozitif oran çok düşük → underpowered uyarı; yalnız plan/log

Kapasite yok: GPU/CPU yetersiz → capacity_unavailable; L31 ile yeniden deneme planı

Maliyet aşıldı: L34 hard → cost_exceeded ve ABORT

FS lag: L46 lag yüksek → materialize ertelenir

Label gecikmesi: labelLatencyMaxMin aşıldı → sadece semi-supervised/weak mod (opsiyonel)

Regime değişimi: L54 sinyaliyle param aralığı genişlet & HPO maxTrials↑ (bütçe izin verirse)

Observer görünümü: yalnız özet metrik ve kart; hiperparam/artefakt yolları gizlenebilir

Idempotency: aynı plan tekrar tetiklenmez; yalnız status/card güncellenir

9) Telemetri
{
  "retrain.metrics": {
    "event":"retrain.metrics","timestamp":"iso8601",
    "plans":3,"jobs":2,"completed":1,
    "hpoTrials":40,"p50PlanMs":9,"p95PlanMs":22,
    "p95MaterializeMin":6,"p95TrainMin":48,"p95EvalMin":4,
    "budgetUSD":54.2,"costGuardTrips":0,"gateFails":{"dq":0,"schema":0,"cost":0,"ethics":0}
  }
}

10) Dosya Yapısı (öneri)
services/livia/autoRetrainOrchestrator.ts
services/livia/lib/retrain/plan.ts             # tetik→plan, hedef tag, HPO alanı, bütçe
services/livia/lib/retrain/materialize.ts      # data manifest + hash + lineage link (L39)
services/livia/lib/retrain/hpo.ts              # TPE/Hyperband/Grid; early-stop
services/livia/lib/retrain/train.ts            # eğitim yürütücü (PyTorch/XGBoost köprüsü)
services/livia/lib/retrain/eval.ts             # holdout & segment metrikleri
services/livia/lib/retrain/package.ts          # onnx/ts/docker + imza
services/livia/lib/retrain/publish.ts          # gates (L41/L42/L34/L32/L26) + proposal
services/livia/lib/bridges.ts                  # L22/L26/L31/L32/L34/L35/L37/L38/L39/L41/L42/L43/L45/L46
services/livia/state/retrainStore.ts           # idem index + manifest + job durumları
services/livia/__tests__/autoRetrainOrchestrator.test.ts
cfg/livia.retrain.yaml

11) Test İskeleti (Jest/Vitest)

Plan üretimi: drift medium → plan hazır; pencere 14g, HPO 40 deneme

DQ blok: dq.finding: error → PAUSE ve yeniden deneme planlandı

HPO erken durdurma: median rule; en iyi deneme ~ denemelerin %30’unda bulunur

Eval & seçim: champion’a göre AUC +0.03 → publish.proposed

Paketleme: onnx + imza; reproducibility kayıtları yazıldı

Canary: %10→%25→%50; ihlalde rollback

Maliyet sınırı: 100 USD üstü → cost_exceeded + abort

Idempotency: aynı retrainKey ikinci yürütme yok; yalnız kart güncellenir

Rapora yazım: md/html + grafikler; L22 dağıtıldı; L38/L39 linkleri

12) Örnek Akış (kısa)

10:05 L43 drift: medium → retrain.triggered (priority=high)

10:10 PLAN: 14g veri, TPE 40 trial, bütçe $80 → MATERIALIZE (manifest + hash)

10:20 TRAIN: 1 GPU, 48dk; HPO progress yayınları

11:15 EVAL: AUC +0.031, ECE −0.006, p95 19ms → PACKAGE (onnx)

11:25 PUBLISH.PROPOSED → CANARY %10 (L45) → kart/rapor; lineage & provenance işlendi.

13) SLO

p95 plan < 30 ms

materialize ≤ 10 dk (240K satır, disk lokal)

train p95 ≤ 60 dk (1×GPU)

gate→canary MTTA ≤ 2 dk
______________________________________________________________________________________________
LIVIA-46 · featureStoreSync.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Online ve offline feature store’ların tutarlılığını ve gecikmesini (lag) sürekli izlemek; point-in-time correctness (sızıntı yok), training↔serving skew (dağılım/fill/ölçek farkları), TTL/expiry, join key uyumu, embedding norm/tip doğrulaması ve cardinality/missingness kontrolü yapmak. İhlallerde karantina/backfill/repair planı çıkarmak; L41 DQ, L42 Şema, L39 Lineage, L38 Provenance, L43 Drift, L44 Retrain, L45 Canary ve L32/L34 guardrail modülleriyle entegre çalışmak.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel pencere 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: data|mlops|ops yönetir; observer salt okur

Gizlilik: PII yok; serbest metinler L21 ile redakte

İdempotency: fsyncKey = namespace + featureId + asOfISO + checkKind + scope

Observability: spans (fsync.collect,fsync.compare,fsync.decide,fsync.repair,fsync.report) + metrics

Uyum: kritik kararlar L26 etik/WORM; değişimler L38 WORM append

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "feature.registered": {
    "event":"feature.registered","timestamp":"iso8601",
    "id":"feat:slip.p95","owner":"ops","version":"v3",
    "source":{"datasetId":"ds:kinesis:feed_ticks","transforms":["groupBy(symbol,5m)","p95(slip)"]},
    "ttlSec":1800,"dtype":"float","shape":"scalar|vector:128","fill":{"kind":"ffill|zero|mean|none"}
  },

  "feature.materialized": {
    "event":"feature.materialized","timestamp":"iso8601",
    "id":"feat:slip.p95","namespace":"kb_default",
    "store":"online|offline","asOf":"iso8601",
    "count":124500,"missingPct":0.04,"hist":[[0.0,0.5,0.1],[0.5,1.0,0.3],[1.0,2.0,0.6]],
    "cardinality":{"joinKey":"symbol","distinct":142}
  },

  "fsync.snapshot": {
    "event":"fsync.snapshot","timestamp":"iso8601",
    "namespace":"kb_default","asOf":"iso8601",
    "online":{"id":"feat:slip.p95","count":123980,"missingPct":0.05,"p95LagMs":140},
    "offline":{"id":"feat:slip.p95","count":124500,"missingPct":0.04},
    "joinKey":{"name":"symbol","diffMissingPct":0.8}
  },

  "fsync.lag": {
    "event":"fsync.lag","timestamp":"iso8601",
    "namespace":"kb_default","store":"online","p95LagMs":160,"maxLagMs":520
  },

  "fsync.ttl.expired": {
    "event":"fsync.ttl.expired","timestamp":"iso8601",
    "featureId":"feat:profile.embedding","namespace":"kb_default","expiredKeys":320
  },

  "feature.request.online": {
    "event":"feature.request.online","timestamp":"iso8601",
    "namespace":"kb_default","featureIds":["feat:slip.p95","feat:profile.embedding"],
    "subject":{"joinKey":"symbol","value":"AVAXUSDT"},"at":"iso8601"
  },

  "feature.validation.request": {
    "event":"feature.validation.request","timestamp":"iso8601",
    "namespace":"kb_default","featureIds":["feat:slip.p95","feat:lat.p95"],
    "asOf":"iso8601","mode":"point_in_time|skew|lag|full","dryRun":false
  },

  "embedding.norm.check": {
    "event":"embedding.norm.check","timestamp":"iso8601",
    "featureId":"feat:profile.embedding","namespace":"kb_default",
    "shape":"vector:128","dtype":"float32","l2Mean":1.02,"l2P95":1.31,"nanPct":0.0
  },

  "dataset.schema.updated": {
    "event":"dataset.schema.updated","timestamp":"iso8601",
    "id":"ds:kinesis:feed_ticks","prevVersion":"v7","newVersion":"v8","diff":[...]
  },

  "dq.finding": {
    "event":"dq.finding","timestamp":"iso8601",
    "datasetId":"ds:kinesis:feed_ticks","kind":"freshness|completeness|schema_drift","severity":"warn|error"
  },

  "fsync.backfill.request": {
    "event":"fsync.backfill.request","timestamp":"iso8601",
    "namespace":"kb_default","featureId":"feat:slip.p95",
    "from":"2025-09-14T00:00:00+03:00","to":"2025-09-15T00:00:00+03:00",
    "reason":"ttl_expired|lag_spike|schema_migration","priority":"high"
  }
}

3) Çıktılar (Out)
{
  "fsync.check.ready": {
    "event":"fsync.check.ready","timestamp":"iso8601",
    "namespace":"kb_default","asOf":"iso8601","featureId":"feat:slip.p95",
    "kinds":{"lag":"ok|at_risk|breach","skew":"ok|warn|fail","ttl":"ok|warn|fail","joinKey":"ok|warn|fail","embedding":"ok|warn|fail"},
    "findings":{"lagP95Ms":160,"countDiffPct":0.42,"missingnessDeltaPct":0.01,"ksP":"0.008","psi":"0.22","ttlExpired":320},
    "actions":["replay|backfill|repair|quarantine?false"],
    "hash":"sha256:..."
  },

  "fsync.repair.enqueued": {
    "event":"fsync.repair.enqueued","timestamp":"iso8601",
    "namespace":"kb_default","featureId":"feat:slip.p95",
    "via":"LIVIA-31|LIVIA-42","jobId":"repair#7f9a12","kind":"backfill|recompute|key_sync|ttl_rehydrate"
  },

  "fsync.report.ready": {
    "event":"fsync.report.ready","timestamp":"iso8601",
    "namespace":"kb_default","forDate":"2025-09-15",
    "path":"data/fsync/2025-09-15/kb_default/report.md",
    "summary":"Online p95 lag 160ms (OK) • slip.p95 PSI 0.22 (warn) • 320 TTL expired key rehydrated • joinKey miss %0.8.",
    "hash":"sha256:..."
  },

  "fsync.card": {
    "event":"fsync.card","timestamp":"iso8601",
    "title":"Feature Sync — kb_default @ 15:40",
    "body":"Lag OK • PSI 0.22 (slip.p95, warn) • TTL expired 320 anahtar rehydrate.",
    "severity":"info","ttlSec":600
  },

  "fsync.alert": {
    "event":"fsync.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"lag_breach|ttl_expired|join_key_mismatch|skew_detected|dtype_mismatch|schema_drift|dq_block|repair_failed|idem_duplicate|rbac_denied"
  },

  "fsync.metrics": {
    "event":"fsync.metrics","timestamp":"iso8601",
    "checks":128,"repairs":3,"rehydratedKeys":320,
    "p95CheckMs":7.6,"avgLagP95Ms":140,"psiWarn":5,"ksFail":1
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  stores:{
    online:{ kind:"redis|dynamo|featurehub", tz:"UTC", clockSkewMsMax:200 },
    offline:{ kind:"parquet|iceberg|delta", tz:"UTC" }
  },

  thresholds:{
    lag:{ p95Ms:{ ok:200, at_risk:300, breach:500 }, maxMs:5000 },
    skew:{ psiWarn:0.2, psiFail:0.35, ksPMax:0.01, meanRelDiffPctMax:3.0, missingnessDeltaPctMax:1.0 },
    ttl:{ warnPct:0.5, failPct:2.0 },                 // expired key / toplam
    joinKey:{ mismatchPctWarn:0.5, mismatchPctFail:1.5 },
    embedding:{ l2Mean:[0.95,1.05], l2P95Max:1.25, nanPctMax:0.1 },
    dtype:{ strict:true },                              // online/offline dtype/shape eşleşmeli
    floatTolerance:{ abs:1e-6, relPct:0.5 }            // karşılaştırma toleransı
  },

  pointInTime:{
    enable:true,
    lookbackSec: 120,                    // okuma penceresi
    antiLeak:{ forbidFutureGtNow:true }  // geleceğe bakışı blokla
  },

  sampling:{
    comparePct: 0.05,                    // büyük feature’larda %5 örnekle
    maxCompareRows: 100_000
  },

  repair:{
    enabled:true,
    via:["LIVIA-31","LIVIA-42"],
    strategies:["replay","recompute","ttl_rehydrate","key_sync"],
    maxJobsPerRun:20, backoffMs:500
  },

  reporting:{
    outputDir:"data/fsync/{YYYY-MM-DD}/{namespace}",
    mdFile:"report.md", htmlFile:"report.html",
    html:{ embedMiniCSS:true, chartsInlineSvg:true },
    include:{ topSkewFeatures:10, ttlKeysSample:10 }
  },

  integrations:{
    dq:"LIVIA-41", schemaMig:"LIVIA-42", drift:"LIVIA-43", retrain:"LIVIA-44",
    canary:"LIVIA-45", slo:"LIVIA-32", cost:"LIVIA-34", flags:"LIVIA-35",
    bandit:"LIVIA-37", lineage:"LIVIA-39", provenance:"LIVIA-38", dist:"LIVIA-22", redact:"LIVIA-21"
  },

  rbacViews:{ observer:{ hideKeySamples:true, showOnlySummary:true } },

  idempotencyTtlSec: 3600
}

5) Doğrulama Boyutları (özet)

Lag: online p95 gecikme (event ts → store ts); L32 ile ilişkili SLO’ya bağla.

Skew (training↔serving): online vs offline aynı as-of dağılım/istatistik farkları (PSI/KS/mean diff/missingness delta).

TTL/Expiry: online öğelerin süresi dolmuş anahtar sayısı / yüzdesi; rehydrate gereksinimi.

Join key uyumu: online/offline join key kesişimi; mismatch/dangling oranı.

Dtype/Shape: float32 vs float64, vector:128 vs vector:768; tolerans dışı → fail.

Embedding norm: L2 ortalama/p95 bandı, NaN/Inf kontrolü; normalize edilmemişse uyar.

Fill politikası: ffill/zero/mean/none uyumsuzluğu → serving farkı doğurur; rapor/öneri üret.

Cardinality/Missingness: joinKey distinct, null%; beklenenden sapma → uyar.

Point-in-Time correctness: offline snapshot as-of ile online lookup zamanı uyumlu; geleceğe bakış yok.

6) Pipeline (Kompozisyon)

Collect: feature.materialized, fsync.snapshot, fsync.lag, fsync.ttl.expired, embedding.norm.check

Align: aynı namespace + asOf için online/offline örnekleri hizala; point-in-time penceresine göre filtrele

Compare: lag/TTL/joinKey/dtype/shape/embedding kontrolleri + skew (PSI/KS/mean/missingness delta)

Decide: eşiklere göre kinds (ok/warn/breach/fail); aksiyon planı (repair/backfill/recompute/key_sync)

Guardrails: dq.finding: error → block repair; schema.updated → L42 adaptör, sonra yeniden dene

Enforce: L31/L42 üzerinden fsync.repair.enqueued; TTL rehydrate; join key senkronu

Emit/Report: fsync.check.ready, fsync.report.ready, kart/alert/metrics; L22 ile dağıt

Link: tüm adımlar L38 (provenance append) + L39 (lineage edges)

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (fsync.snapshot|feature.materialized|validation.request) → COMPARE

COMPARE → (violations?) DECIDE → (repair?) REPAIR → REPORT → EMIT → IDLE

Hata: ALERT + IDLE; idem: aynı fsyncKey ikinci kez yan etki doğurmaz

8) Kenar Durumlar

Saat/Clock skew: online store clock drift ≤ clockSkewMsMax; aksi halde lag ölçümü düzeltilir.

Büyük veri: sampling.comparePct ile örnekle; maxCompareRows sınırı.

Ephemeral feature: TTL çok kısa olanlar için pointInTime.lookbackSec genişletilir.

Şema migrasyonu: dtype/shape değişimi → L42 adaptör + recompute; eski veri backfill

DQ engeli: dq: error → onarım durdur; rapora “blocked by DQ” yaz

Float toleransı: küçük farklar floatTolerance içinde ise OK sayılır

Embedding dtype uyuşmazlığı: float64 online → cost artışı (L34) uyar; recompute int8/quantize öner

Join key map: alias/farklı adlandırma → key_sync stratejisi; dangling oranı raporlanır

Observer görünümü: örnek anahtarlar gizli; yalnız özet

Idempotency: aynı fsyncKey ile repair ikinci kez kuyruğa alınmaz

9) Telemetri
{
  "fsync.metrics": {
    "event":"fsync.metrics","timestamp":"iso8601",
    "checks":128,"repairs":3,"rehydratedKeys":320,
    "p50CheckMs":3.2,"p95CheckMs":7.6,"avgLagP95Ms":140,
    "psiWarn":5,"ksFail":1,"dtypeMismatches":0,"ttlWarns":2
  }
}

10) Dosya Yapısı (öneri)
services/livia/featureStoreSync.ts                 # FSM + orchestrator
services/livia/lib/fsync/align.ts                  # as-of hizalama & PIT doğrulama
services/livia/lib/fsync/compare.ts                # lag/skew/ttl/joinKey/dtype/embedding
services/livia/lib/fsync/decide.ts                 # aksiyon planı
services/livia/lib/fsync/repair.ts                 # L31/L42 köprüleri (replay/recompute/rehydrate/key_sync)
services/livia/lib/fsync/report.ts                 # md/html + grafikler (inline SVG)
services/livia/lib/bridges.ts                      # L21/L22/L31/L32/L34/L38/L39/L41/L42/L43/L44/L45
services/livia/state/fsyncStore.ts                 # idem index + history
services/livia/__tests__/featureStoreSync.test.ts
cfg/livia.fsync.yaml

11) Test İskeleti (Jest/Vitest)

Lag breach: p95>300ms → kinds.lag='breach' + kart warn

Skew warn: PSI=0.22 → kinds.skew='warn'; KS p-value≤0.01 → fail

TTL expired: 320 anahtar → rehydrate enqueued

Join key mismatch: %1.8 → key_sync planlandı

Dtype/shape: vector:128 (offline) vs 768 (online) → fail + recompute

DQ block: dq.finding:error → repair blok, raporda “blocked by DQ”

Idempotency: aynı fsyncKey ikinci repair kuyruğa alınmaz

Report: md/html yazıldı; L22 dağıtıldı; L38/L39 linkleri işlendi

12) Örnek Akış (kısa)

15:20 fsync.snapshot(asOf=15:15) → COMPARE: lag OK (p95 160ms), PSI 0.22 (warn), TTL expired 320 → DECIDE: rehydrate + monitor

15:22 fsync.repair.enqueued(ttl_rehydrate) → 15:28 tamamlandı; REPORT yazıldı → L22 kart → L38/L39 zincirleri işlendi.

13) SLO

p95 check < 10 ms / feature

yanlış fail ≤ %1, kaçırılan kritik ihlal ≤ %1

repair MTTA ≤ 2 dk (kuyruğa alma)

idempotent çakışma ≈ 0
_____________________________________________________________________________________________
LIVIA-47 · kbIndexAutotuner.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Bilgi tabanı (KB) arama yığınının kalite–gecikme–maliyet dengesini otomatik ayarlamak: vektör indeks (HNSW/IVF-PQ), embedding boyutu/kuantizasyon, topK, hybrid ağırlık (BM25↔dense), reranker (yok|light CE|heavy CE|ColBERT-lite), cache politikası ve segmente göre (namespace/locale/intent) farklı profiller. Offline (hakem/judgement) ve online (tıklama/CTR/NDCG@k) değerlendirme ile Pareto sınırı çıkar; A/B–bandit (L36/L37) ile canlıda dene; guardrail (SLO – L32, Maliyet – L34, Gizlilik – L40) altında promote/rollback yap.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; Provenance (L38) + Lineage (L39) bağlı.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: search|mlops|ops|policy yönetir; observer sınırlı okur

Gizlilik: sorgu/log PII’si L21/L40 ile redakte; anonim user/session

İdempotency: tuneKey = namespace + profile + windowISO + candidateHash

Observability: spans (kb.plan,kb.gen,kb.offline,kb.online,kb.decide,kb.promote) + metrics

Uyumluluk: kararlar L26 etik/WORM; değişimler L38 WORM append

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "kb.index.stats": {
    "event":"kb.index.stats","timestamp":"iso8601",
    "namespace":"kb_default","profile":"global|tr|en|faq|code",
    "engine":{"type":"hnsw|ivf|ivf_pq","dim":768,"quant":"fp32|fp16|int8"},
    "params":{"hnsw":{"M":32,"efSearch":256},"ivf":{"nlist":4096,"nprobe":8},"pq":{"m":16,"codeBits":8}},
    "docCount":482_000,"memGB":9.8,"buildMin":28
  },

  "search.query.logged": {
    "event":"search.query.logged","timestamp":"iso8601",
    "namespace":"kb_default","profile":"tr",
    "query":{"q":"avax slip nedir","lang":"tr","intent":"howto|debug|ref|other"},
    "results":{"topK":50,"hybridAlpha":0.35,"reranker":"ce-small|null"},
    "latencyMs":132,"costUsd":0.0007,
    "clicks":[{"rank":1,"dwellMs":8200},{"rank":4,"dwellMs":2400}],
    "session":{"id":"sess#7f9a12","device":"web","region":"eu"},
    "flags":{"variant":"A"}                      // A/B
  },

  "judgement.ingested": {
    "event":"judgement.ingested","timestamp":"iso8601",
    "namespace":"kb_default","profile":"tr",
    "qrels":[{"qid":"q#1","docId":"d#42","label":3},{"qid":"q#1","docId":"d#7","label":2}],
    "metricSet":["NDCG@10","MRR@10","Recall@50"]
  },

  "kb.tuning.plan.request": {
    "event":"kb.tuning.plan.request","timestamp":"iso8601",
    "namespace":"kb_default","profile":"tr",
    "objectives":{"primary":"NDCG@10","secondary":["Recall@50","MRR@10"]},
    "constraints":{"p95LatencyMsMax":250,"costPer1kQUsdMax":1.2,"memGBMax":12},
    "ranges":{
      "topK":[10,200],
      "hybridAlpha":[0.0,0.8],                     // 0=BM25, 1=dense
      "reranker":["none","ce-small","ce-large","colbert-lite"],
      "engine":["hnsw","ivf","ivf_pq"],
      "hnsw.efSearch":[64,800],
      "ivf.nprobe":[1,64],
      "pq.codeBits":[6,8], "dim":[256,384,512,768]
    },
    "eval":{"offline":true,"online":"ab|bandit","banditAlgo":"thompson|ucb1"}
  },

  "reranker.candidate.ready": {
    "event":"reranker.candidate.ready","timestamp":"iso8601",
    "name":"ce-small","p95LatencyMs":18,"costUsdPer1k":0.22
  },

  "search.ab.metrics": {
    "event":"search.ab.metrics","timestamp":"iso8601",
    "namespace":"kb_default","profile":"tr",
    "window":"1h",
    "A":{"ctr":0.31,"ndcg10":0.412,"lat_p95":128,"cost_1k":0.74},
    "B":{"ctr":0.345,"ndcg10":0.441,"lat_p95":154,"cost_1k":0.92},
    "uplift":{"ndcg10":"+7.0%","ctr":"+11.3%","lat_p95":"+20%","cost_1k":"+24%"},
    "sig":{"p_value":0.03,"method":"welch_t|bootstrap"}
  },

  "cost.guard.triggered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "component":"search_stack","severity":"high","deltaUSDPer1kReq":0.35
  },

  "slo.guard.triggered": {
    "event":"slo.guard.triggered","timestamp":"iso8601",
    "serviceId":"kb_api","slo":"search_p95","severity":"high"
  }
}

3) Çıktılar (Out)
{
  "kb.tuning.plan.ready": {
    "event":"kb.tuning.plan.ready","timestamp":"iso8601",
    "namespace":"kb_default","profile":"tr",
    "candidates":[
      {"id":"cand#hnsw-768-ef256-k50-a0.35-rerank:ce-small",
       "engine":"hnsw","dim":768,"quant":"fp16","topK":50,"hybridAlpha":0.35,
       "reranker":"ce-small","expected":{"p95Ms":160,"cost_1k":0.88,"memGB":10.5}},
      {"id":"cand#ivf-pq-384-nprobe16-k100-a0.2-rerank:none",
       "engine":"ivf_pq","dim":384,"pq":{"m":16,"codeBits":8},"nprobe":16,"topK":100,"hybridAlpha":0.2,
       "reranker":"none","expected":{"p95Ms":110,"cost_1k":0.42,"memGB":6.1}}
    ],
    "pareto":{"front":[["NDCG@10",0.44,"p95",150,"cost_1k",0.8],["NDCG@10",0.41,"p95",110,"cost_1k",0.42]]},
    "hash":"sha256:..."
  },

  "kb.offline.eval.ready": {
    "event":"kb.offline.eval.ready","timestamp":"iso8601",
    "namespace":"kb_default","profile":"tr","candidateId":"cand#ivf-pq-384-nprobe16-k100-a0.2-rerank:none",
    "metrics":{"NDCG@10":0.432,"MRR@10":0.388,"Recall@50":0.71},
    "meets":"true|false"
  },

  "kb.online.test.started": {
    "event":"kb.online.test.started","timestamp":"iso8601",
    "namespace":"kb_default","profile":"tr","mode":"ab|bandit",
    "variants":[["A","baseline"],["B","cand#ivf-pq-384-..."]],
    "routing":{"via":"LIVIA-35|gateway","weights":[50,50]},
    "healthBudget":{"p95MsMax":250,"cost_1k_Max":1.2,"sloBurnPctMax":5.0}
  },

  "kb.tuning.health.snapshot": {
    "event":"kb.tuning.health.snapshot","timestamp":"iso8601",
    "window":"15m",
    "A":{"ndcg10":0.412,"ctr":0.31,"p95":128,"cost_1k":0.74},
    "B":{"ndcg10":0.441,"ctr":0.345,"p95":154,"cost_1k":0.92},
    "status":"ok|at_risk|breach","reason":"slo|cost|quality_drop"
  },

  "kb.tuning.promoted": {
    "event":"kb.tuning.promoted","timestamp":"iso8601",
    "namespace":"kb_default","profile":"tr",
    "from":"baseline","to":"cand#ivf-pq-384-...","mode":"ab|bandit",
    "downtimeMs":0
  },

  "kb.tuning.rolled.back": {
    "event":"kb.tuning.rolled.back","timestamp":"iso8601",
    "namespace":"kb_default","profile":"tr","to":"baseline",
    "reason":"slo_breach|cost_overrun|quality_no_sig|manual"
  },

  "kb.tuning.report.ready": {
    "event":"kb.tuning.report.ready","timestamp":"iso8601",
    "namespace":"kb_default","profile":"tr","format":"md|html",
    "path":"data/kb-tune/2025-09-15/kb_default_tr/report.md",
    "summary":"Pareto: 2 aday • Offline en iyi NDCG@10=0.432 • Online B uplift +7.0% NDCG, p95 +20%, cost +24% • Promote=YES.",
    "hash":"sha256:..."
  },

  "kb.tuning.card": {
    "event":"kb.tuning.card","timestamp":"iso8601",
    "title":"KB Tuning — tr profili: B %50’de",
    "body":"NDCG@10 +7% • p95 +20% (≤250ms) • maliyet +24% (≤$1.2/1k) • Promote adımı sırada.",
    "severity":"info","ttlSec":900
  },

  "kb.tuning.alert": {
    "event":"kb.tuning.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|dq_block|privacy_risk|slo_breach|cost_overrun|ab_insufficient_power|route_failed|rbac_denied|calc_error"
  },

  "kb.tuning.metrics": {
    "event":"kb.tuning.metrics","timestamp":"iso8601",
    "plans":3,"candidates":6,"offlineRuns":4,"onlineTests":2,"promotions":1,"rollbacks":0,
    "p95PlanMs":24,"p95EvalMin":6,"avgP95LatencyMs":148,"avgCostPer1k":0.81
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  objectives:{ primary:"NDCG@10", secondary:["Recall@50","MRR@10"] },

  constraints:{
    p95LatencyMsMax: 250,
    costPer1kQUsdMax: 1.2,
    memGBMax: 12,
    minUpliftPct: { "NDCG@10": 2.0 },          // anlamlıysa
    sigLevel: 0.05,
    minSamplesOnline: 5000
  },

  searchSpace:{
    topK:[10,200],
    hybridAlpha:[0.0,0.8],
    reranker:["none","ce-small","ce-large","colbert-lite"],
    engine:["hnsw","ivf","ivf_pq"],
    hnsw:{ M:[16,48], efSearch:[64,800] },
    ivf:{ nlist:[1024,8192], nprobe:[1,64] },
    pq:{ m:[8,32], codeBits:[6,8] },
    dim:[256,384,512,768],
    quant:["fp32","fp16","int8"]
  },

  evaluation:{
    offline:{ enable:true, metrics:["NDCG@10","MRR@10","Recall@50"], stratifiedBy:["lang","intent"] },
    online:{ mode:"ab|bandit", banditAlgo:"thompson", minWindows:4, window:"15m" },
    debias:{ dwellMsMin:1500, botFilter:true, CUPED:true }
  },

  routing:{
    via:"LIVIA-35|gateway",
    stickiness:"session|subject",
    minTrafficPctPerVariant:10
  },

  caching:{
    enable:true,
    key:"normalizedQuery+profile",
    ttlSec: 600,
    warmTopQueries: 200
  },

  integrations:{
    dist:"LIVIA-22", slo:"LIVIA-32", cost:"LIVIA-34",
    experiments:"LIVIA-36", bandit:"LIVIA-37",
    lineage:"LIVIA-39", provenance:"LIVIA-38",
    privacy:"LIVIA-40", dq:"LIVIA-41", schemaMig:"LIVIA-42"
  },

  reporting:{
    outputDir:"data/kb-tune/{YYYY-MM-DD}/{namespace}_{profile}",
    mdFile:"report.md", htmlFile:"report.html",
    html:{ embedMiniCSS:true, chartsInlineSvg:true },
    include:{ pareto:true, abTimelines:true, errorBudget:true }
  },

  rbacViews:{ observer:{ hideEngineParams:true, showOnlySummary:true } },

  idempotencyTtlSec: 3600
}

5) Yöntem (özet)

Aday üretimi: random + TPE/Bayesian arama; bütçe/mem/sig kısıtlarıyla filtre.

Offline değerlendirme: qrels → NDCG@10/MRR@10/Recall@50; türkçe/tr gibi profiller ayrı.

Pareto sınırı: (NDCG@10 ↑, p95 ↓, cost ↓) üçlü uzayda ön cephe çıkar.

Online test: A/B veya bandit (Thompson/UCB); CUPED ile varyans düşürme.

Debiasing: bot/low-dwell filtre; önceki etkileşimle düzeltilmiş CTR.

Karar: uplift≥min & kısıtlar içinde → promote; değilse rollback/hold.

Profil bazlı: profile=tr|en|faq|code için farklı optimumlar; L35’te flag anahtarıyla yönlendirme.

Maliyet optimizasyonu: aynı kaliteye daha ucuz aday → prefer (L34 ile doğrula).

6) Pipeline (Kompozisyon)

Plan: kb.tuning.plan.request → mevcut istatistikleri ve arama alanını al; aday setini kur

Generate: param ızgarası + akıllı arama; candidateHash üret

Offline Eval: judgement.ingested varsa çalıştır; sınır altında kalan adayları eler

Gate: L41/L42/L40 kontroller (DQ/Şema/Privacy); maliyet & SLO bütçeleri (L34/L32)

Online Test: kb.online.test.started → routing (L35/gateway); search.ab.metrics topla

Decide: Uplift+sig ve kısıtlara göre promote/rollback/pause

Report: Pareto + A/B zaman çizgisi + bütçe grafiği → md/html

Emit & Distribute: card/alert/metrics; L22 ile kart dağıt

Provenance & Lineage: değişiklikler L38 append; L39’a kb_profile → index_params → search_stack kenarları

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (plan.request) → PLAN

PLAN → GENERATE → OFFLINE

OFFLINE → (pass) ONLINE | (fail) DONE

ONLINE → (ok) PROMOTE | (breach) ROLLBACK | (at_risk) PAUSE

PROMOTE/ROLLBACK/PAUSE → REPORT → EMIT → IDLE

Hata: ALERT + IDLE; idem: aynı tuneKey ikinci yan etki doğurmaz

8) Kenar Durumlar

Yetersiz güç (power): online örnek < minSamplesOnline → uzat veya bandit’e geç

Click bias: pozisyon sapması → interleaving/shuffle veya CUPED düzeltmesi

Bot/otomasyon: hızlı tıklama/düşük dwell → filtre

Cold start profil: qrels yok → yalnız online bandit + küçük güvenli topK

Dil/locale: tr için BM25 ağırlığı ↑; en için reranker small varsayılan

Uzun kuyruk (tail) sorgu: hybridAlpha otomatik adaptasyon (başarısız dense’de BM25 yükselt)

SLO spike: slo.guard.triggered → topK↓ ve efSearch/nprobe↓ geçici; stabilize sonrası eski ayarlara dön

Cost overrun: cost.guard.triggered → reranker none|ce-smalla düşür; quant=int8 aday

Schema drift: doc alanları değişti → L42 adaptör; tuning duraklar, offline tekrar

Privacy risk: ham sorgu logunda PII tespiti → mask ve count düşür; raporda özet

Observer görünümü: yalnız NDCG/latency/cost özetleri; param detayları gizli

Idempotency: aynı candidateHash ile yeniden test idempotent; sadece status günceller

9) Telemetri
{
  "kb.tuning.metrics": {
    "event":"kb.tuning.metrics","timestamp":"iso8601",
    "plans":3,"candidates":6,"offlineRuns":4,"onlineTests":2,"promotions":1,"rollbacks":0,
    "p50PlanMs":9,"p95PlanMs":24,"p95EvalMin":6,
    "avgP95LatencyMs":148,"avgCostPer1k":0.81,"upliftNDCG10AvgPct":6.1
  }
}

10) Dosya Yapısı (öneri)
services/livia/kbIndexAutotuner.ts                # FSM + orchestrator
services/livia/lib/kb/space.ts                    # arama alanı & aday üretimi
services/livia/lib/kb/offlineEval.ts              # qrels → NDCG/MRR/Recall
services/livia/lib/kb/onlineTest.ts               # A/B & bandit, CUPED, debias
services/livia/lib/kb/pareto.ts                   # pareto hesaplayıcı
services/livia/lib/kb/decider.ts                  # promote/rollback kuralları
services/livia/lib/kb/report.ts                   # md/html + grafikler (inline SVG)
services/livia/lib/bridges.ts                     # L22/L26/L32/L34/L35/L36/L37/L38/L39/L40/L41/L42
services/livia/state/kbTuneStore.ts               # idem index + aday & test state
services/livia/__tests__/kbIndexAutotuner.test.ts
cfg/livia.kb.tune.yaml

11) Test İskeleti (Jest/Vitest)

Pareto: en az iki aday ön cephede; p95/cost kısıtı ihlal eden elenir

Offline pass/fail: NDCG@10 eşiğini aşan aday pass

Online uplift: NDCG@10 +≥2%, p≤0.05 → promote; aksi → rollback

SLO breach: p95>250ms → rollback + kart error

Cost overrun: $/1k > 1.2 → rollback

Bandit: Thompson’da yüksek kazanım varyantına trafik artar (≥+15pp)

Privacy/DQ/Schema: risk/drift uyarılarında test pause

Idempotency: aynı tuneKey tekrarı yan etki yapmaz; yalnız kart güncellenir

Rapor: md/html yazıldı; L22 ile dağıtıldı; L38/L39 bağları eklendi

12) Örnek Akış (kısa)

10:00 kb.tuning.plan.request(tr) → iki aday üretildi; Pareto çizildi

10:20 Offline eval: cand#ivf-pq-384… NDCG@10=0.432 PASS

10:30 Online A/B 50/50: 4×15m pencere → B uplift +7% NDCG, p95 154ms (≤250), cost +24% (≤1.2)

11:30 Promote: kb.tuning.promoted → flag varsayılanı B; rapor/karte dağıtıldı; provenance/lineage işlendi.

13) SLO

p95 plan < 30 ms

offline eval ≤ 10 dk (≤10K qrels)

online karar ≤ 2 saat (4 pencere × 15m)

yanlış promote ≤ %1, idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-48 · complianceAuditExporter.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Operasyon ve ML yaşam döngüsündeki kanıtları denetlenebilir paket haline getir: WORM append kayıtları (L38), lineage alt-grafı (L39), günlük digest (L14), DQ raporları (L41), şema migrasyon raporu (L42), drift & sağlık (L43), retrain (L44), canary (L45), feature-sync (L46), KB tuning (L47) ve ilgili konfig/threshold dosyaları → imzalı, hash’li, zaman damgalı arşiv. KVKK/GDPR/SOC2/ISO27001 izleri için kanıt haritası (evidence map) üret; doğrulanabilirlik: Merkle kök + imza + opsiyonel RFC-3161 timestamp.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; AES-GCM şifreleme (opsiyonel KMS); RBAC & etik kapı.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: compliance|audit tam; ops|mlops sınırlı; observer salt okur

Gizlilik: PII çıkarımı L40 ile; operatör/kimlikler L21 salt’lı hash; secrets L27 ile maskelenir

İdempotency: auditKey = scope + target + windowISO + profile + version

Observability: spans (audit.plan,audit.collect,audit.compose,audit.pack,audit.verify) + metrics

Uyumluluk: WORM (append-only) kayıt, immutable export; ethics (L26) onayı gerekebilir

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "audit.request": {
    "event":"audit.request","timestamp":"iso8601",
    "scope":"daily|incident|model|kb_profile|regulatory",
    "target":{
      "forDate":"2025-09-15",                 // scope=daily
      "incidentId":"inc-2025-09-13-1",        // scope=incident
      "modelId":"model:slip_anomaly",         // scope=model
      "profile":"kb_default:tr"               // scope=kb_profile
    },
    "profile":"kvkk|gdpr|soc2|iso27001|custom",
    "format":"tar.gz|zip",
    "encrypt":{"enabled":true,"kmsKeyRef":"kms:key/audit-export"},
    "include":{"rawEvents":false,"htmlReports":true,"mdReports":true,"configs":true},
    "redact":{"operators":true,"hashSalt":"rotate-me-daily"},
    "reason":"regulator_request|partner_due_diligence|internal_review",
    "dryRun":false
  },

  "audit.append.evidence": {
    "event":"audit.append.evidence","timestamp":"iso8601",
    "kind":"file|blob|note|link",
    "path":"data/notes/2025-09-13/sess-avax-42.md",
    "label":"investigation note",
    "hash":"sha256:..."
  },

  "audit.verify.request": {
    "event":"audit.verify.request","timestamp":"iso8601",
    "bundlePath":"exports/audit/2025-09-15/daily_2025-09-15.tgz",
    "expectedMerkleRoot":"sha256:...","sig":{"algo":"ed25519","pubKeyId":"auditor#1"}
  }
}


Not: scope=regulatory için target boş olabilir; zaman aralığı window: {from,to} isteğe bağlı eklenebilir.

3) Çıktılar (Out)
{
  "audit.plan.ready": {
    "event":"audit.plan.ready","timestamp":"iso8601",
    "auditKey":"daily#2025-09-15#kvkk#v1",
    "scope":"daily","target":{"forDate":"2025-09-15"},
    "sections":["digest","incidents","dq","schema","drift","retrain","canary","fsync","kb_tune","configs","lineage","provenance","metrics"],
    "pathsPlanned":84,"hash":"sha256:..."
  },

  "audit.bundle.ready": {
    "event":"audit.bundle.ready","timestamp":"iso8601",
    "auditKey":"daily#2025-09-15#kvkk#v1",
    "format":"tar.gz","encrypted":true,
    "path":"exports/audit/2025-09-15/daily_2025-09-15.tgz",
    "bytes":12400532,
    "manifestPath":"exports/audit/2025-09-15/manifest.json",
    "merkleRoot":"sha256:...","signature":{"algo":"ed25519","keyId":"kms:key/audit-export"},
    "rfc3161Ts":"2025-09-15T18:30:07+03:00"
  },

  "audit.verify.result": {
    "event":"audit.verify.result","timestamp":"iso8601",
    "bundlePath":".../daily_2025-09-15.tgz",
    "verified":{"hashes":true,"merkleRoot":true,"signature":true,"timestamp":true},
    "issues":[]
  },

  "audit.card": {
    "event":"audit.card","timestamp":"iso8601",
    "title":"Denetim Paketi Hazır — 15 Eyl (KVKK)",
    "body":"84 kanıt, Merkle kök ve imza üretildi. Şifreli arşiv 11.8MB.",
    "severity":"info","ttlSec":900
  },

  "audit.alert": {
    "event":"audit.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"missing_evidence|worm_violation|signature_failed|timestamp_failed|privacy_risk|rbac_denied|idem_duplicate"
  },

  "audit.metrics": {
    "event":"audit.metrics","timestamp":"iso8601",
    "planned":1,"bundled":1,"verified":1,
    "paths":84,"bytes":12400532,"p95CollectMs":22,"p95PackMs":1800,
    "redactedItems":12,"privacyFindings":0
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  profiles:{
    kvkk:{ map:["L40:privacy","L21:redaction","consent_logs","access_rbac"], keepRawPII:false },
    gdpr:{ map:["purpose_limitation","data_minimization","access_log","deletion_log"], keepRawPII:false },
    soc2:{ map:["change_mgmt","security_monitoring","incident_response","backup_recovery"], keepRawPII:false },
    iso27001:{ map:["A.12.4 logging","A.16 incident","A.14 system acquisition","A.8 asset"], keepRawPII:false },
    custom:{ map:[], keepRawPII:false }
  },

  inputs:{
    // dosya kalıpları; var olanlara göre filtrelenir
    digest:"data/digest/{YYYY-MM-DD}/**/*",
    incidents:"data/incidents/{YYYY-MM-DD}/**/*",
    dq:"data/dq/{YYYY-MM-DD}/**/*",
    schema:"data/schema/{YYYY-MM-DD}/**/*",
    drift:"data/model-health/{YYYY-MM-DD}/**/*",
    retrain:"data/retrain/{YYYY-MM-DD}/**/*",
    canary:"data/canary/{YYYY-MM-DD}/**/*",
    fsync:"data/fsync/{YYYY-MM-DD}/**/*",
    kb_tune:"data/kb-tune/{YYYY-MM-DD}/**/*",
    configs:"cfg/**/*.yaml",
    lineage:"state/lineage/index/{YYYY-MM-DD}/**/*",
    provenance:"state/provenance/**/chain.jsonl",
    metrics:"state/**/metrics/*.jsonl"
  },

  packaging:{
    format:"tar.gz",
    outDir:"exports/audit/{YYYY-MM-DD}",
    manifest:"manifest.json",
    includeHtml:true, includeMd:true, includeConfigs:true,
    redact:{ operators:true, emails:true, phones:true, hashSalt:"rotate-me-daily" },
    exclude:{ rawPII:true, drillShadow:true }
  },

  cryptography:{
    sign:{ enabled:true, algo:"ed25519", keyRef:"kms:key/audit-export" },
    timestamp:{ enabled:true, rfc3161:true, tsaUrl:"tsa://internal" },
    encrypt:{ enabled:true, algo:"aes-256-gcm", kmsKeyRef:"kms:key/audit-export" },
    merkle:{ fanout:1024 } // büyük paketlerde verimli kök
  },

  worm:{
    requireAppendOnly:true,
    verifyOnCollect:true
  },

  gating:{
    ethics:"LIVIA-26",
    privacy:"LIVIA-40",
    secrets:"LIVIA-27"
  },

  rbacViews:{
    observer:{ hidePIISnippets:true, showOnlySummary:true }
  },

  retention:{
    hotDays:30, warmDays:365, coldDays:1825, keepForever:false
  },

  idempotencyTtlSec: 86400
}

5) Paket İçeriği (Yapı)
/audit_bundle/
  manifest.json                      # tüm öğeler, sha256, boyut, kaynak olayı
  evidence_map.json                  # KVKK/GDPR/SOC2/ISO karşılıkları
  checksums.merkle                   # Merkle ağaç düğümleri + kök
  signature.sig                      # ed25519 imza (manifest + kök)
  timestamp.rfc3161                 # TSA damgası (opsiyonel)
  /digest/...                        # L14 çıktı dosyaları
  /incidents/...                     # olay raporları + postmortem (L15)
  /dq/...                            # L41
  /schema/...                        # L42
  /drift/...                         # L43
  /retrain/...                       # L44
  /canary/...                        # L45
  /fsync/...                         # L46
  /kb_tune/...                       # L47
  /configs/...                       # cfg/*.yaml snapshot
  /lineage/...                       # L39 alt-graf (as-of)
  /provenance/chain.jsonl            # L38 append zinciri (süzülmüş)
  /metrics/...                       # modül metrikleri (özet)


manifest.json alanları (özet):

{
  "bundle": {
    "auditKey":"daily#2025-09-15#kvkk#v1",
    "createdAt":"iso8601","tz":"Europe/Istanbul",
    "encrypted":true,"format":"tar.gz","version":"1.0.0"
  },
  "sources":[
    {"section":"dq","path":"data/dq/2025-09-15/.../report.md","sha256":"...","size":6200,
     "eventWindow":{"from":"2025-09-15T00:00:00+03:00","to":"2025-09-15T23:59:59+03:00"}}
  ],
  "merkleRoot":"sha256:...",
  "signature":{"algo":"ed25519","keyId":"kms:key/audit-export"},
  "privacy":{"piiRedacted":true,"operatorsHashed":true},
  "evidenceMap":{"kvkk":["privacy.metrics","redaction_policy","consent_summary"],"soc2":["change_mgmt","incident_response"]}
}

6) Pipeline (Kompozisyon)

Plan: audit.request → scope/target/profile doğrula; plan.ready üret

Collect: konfig kaynaklarına göre dosya ve olayları topla; WORM bütünlüğü ve tarih penceresi denetimleri

Redact/Gate: L40/L21 redaksiyon; L27 secret mask; L26 etik onay (gerekirse)

Compose: manifest.json, evidence_map.json üret; lineage alt-graf + provenance zincir süzmesi

Pack: tar.gz (veya zip) oluştur; Merkle ağacı, ed25519 imza, RFC-3161 timestamp; opsiyonel AES-GCM şifreleme

Emit/Distribute: audit.bundle.ready + kart/alert/metrics; izne bağlı dışa aktarım (partner/regulator sftp)

Verify (ops.): audit.verify.request geldiğinde: hash/merkle/imza/zaman damgası doğrula → verify.result

Index: L39 ile bundle düğümü ve ilgili artefakt kenarları; L38 append kayıtları

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (audit.request) → PLAN

PLAN → COLLECT

COLLECT → (gates pass) COMPOSE | (privacy/secrets fail) ALERT

COMPOSE → PACK → EMIT (bundle/card/metrics) → IDLE

VERIFY (yan kanal): audit.verify.request → CHECK → EMIT

Hata: ALERT; idem: aynı auditKey için ikinci paket yazılmaz (yalnız verify çalışır)

8) Kenar Durumlar

Eksik kanıt: bir bölüm bulunamazsa missing_evidence; manifestte işaretlenir, profil gereklerine göre fail veya warn

WORM ihlali: kaynak zincirde zaman/offset geriye gitmiş → worm_violation (kritik)

PII sızıntısı: redaksiyon sonrası dahi PII kaldı → privacy_risk (kritik, paket iptali)

Devasa paket: >1GB → çok parçalı paket (split) + kökleri üst-Merkle ile birleştir

Şifreleme anahtarı yok: encrypt.enabled=true ama KMS ulaşılamıyor → retry with backoff; 3 kez sonra alert

Regulator özel istek: scope=regulatory → özel “kanıt haritası” şablonu + ek sözlük (örn. DPIA)

Observer görünümü: yalnız audit.card ve manifest başlıkları; dosya içerikleri gizli

Idempotency: aynı auditKey tekrarında PACK atlanır; audit.bundle.ready yeniden yayılabilir

9) Telemetri
{
  "audit.metrics": {
    "event":"audit.metrics","timestamp":"iso8601",
    "planned":1,"bundled":1,"verified":1,
    "paths":84,"bytes":12400532,
    "p50CollectMs":9,"p95CollectMs":22,"p95PackMs":1800,
    "redactedItems":12,"privacyFindings":0,"wormViolations":0
  }
}

10) Dosya Yapısı (öneri)
services/livia/complianceAuditExporter.ts        # FSM + orchestrator
services/livia/lib/audit/plan.ts                 # scope/profile → plan üretimi
services/livia/lib/audit/collect.ts              # dosya & olay toplama + WORM doğrulama
services/livia/lib/audit/redact.ts               # L21/L27/L40/L26 kapıları
services/livia/lib/audit/compose.ts              # manifest + evidence_map + lineage/prov süzgeci
services/livia/lib/audit/pack.ts                 # tar.gz/zip + merkle + imza + timestamp + şifreleme
services/livia/lib/audit/verify.ts               # hash/merkle/imza doğrulama
services/livia/lib/bridges.ts                    # L14/L15/L21/L22/L26/L27/L38/L39/L40/L41/L42/L43/L44/L45/L46/L47
services/livia/state/auditStore.ts               # idem index + paket geçmişi
services/livia/__tests__/complianceAuditExporter.test.ts
cfg/livia.audit.yaml

11) Test İskeleti (Jest/Vitest)

Plan: audit.request(scope=daily) → plan.ready ve 10+ bölüm planlandı

Collect: WORM kayıtları geriye gitmiyor → PASS; kasıtlı ihlalde worm_violation

Redaction/Privacy: PII tespit simülasyonu → redaksiyon sonrası privacyFindings=0

Pack: tar.gz üretildi, Merkle kök hesaplandı, ed25519 imza ve RFC-3161 damgası eklendi

Encrypt: AES-GCM şifreli çıktı; KMS anahtar arızasında retry + alert

Verify: merkle+imza+tarih true

Missing evidence: eksik DQ raporu → manifestte işaretlendi; KVKK profilinde warn

Idempotency: aynı auditKey tekrarı dosya yazmaz; yalnız bundle.ready yeniden yayılır

Observer görünümü: içerik yok, yalnız kart ve manifest başı

12) Örnek Akış (kısa)

18:20 audit.request(scope=daily, forDate=2025-09-15, profile=kvkk, encrypt=true)

PLAN: 84 kalem → COLLECT (L14/L41/L42/L43/L44/L45/L46/L47 + lineage/provenance)

REDACT/GATE: L40/L21/L27/L26 geçildi → COMPOSE manifest & evidence_map

PACK: tar.gz + Merkle + imza + timestamp + AES-GCM → audit.bundle.ready

VERIFY (opsiyonel): doğrulama PASS → kart dağıtıldı (L22)

13) SLO

p95 collect < 30 ms / dosya (metadata)

p95 pack < 35 dk / 1GB paket (streaming tar)

doğrulama hatası ≤ %0.5, WORM ihlali = 0 hedef

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-49 · multiRegionFailoverCoordinator.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Çok bölgeli mimaride hizmet sürekliliği için proaktif sağlık izleme → karar → trafik kaydırma → veri kipleri (read-only/fence) → geri dönüş (failback) süreçlerini otomatikleştir. RTO/RPO hedeflerini uygula; active-active / active-passive topolojileri destekle; DNS/GSLB, service mesh/gateway, mesaj kuyruğu/broker, veritabanı ve depolama katmanlarıyla tutarlı failover gerçekleştir. Split-brain önleme, quorum/lease/fencing mekanizmaları; brownout vs blackout ayrımı; flapping önleyici histerezis. Kararlar SLO (L32), Maliyet (L34), Etik (L26), Provenance (L38), Lineage (L39) ile izlenir; olaylar Incident (L15) ve Drill (L50)’ye bağlanır.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: ops|resilience|policy tam; observer sınırlı okur

Gizlilik: PII yok; serbest metin özetleri L21 ile redakte

İdempotency: mrfKey = topologyHash + region + step + windowISO

Observability: spans (mrf.monitor,mrf.decide,mrf.execute,mrf.stabilize,mrf.failback) + metrics

Uyumluluk: kritik değişimler L26 etik/WORM; L38 WORM append

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "region.registered": {
    "event":"region.registered","timestamp":"iso8601",
    "region":"eu-central|us-east|me-west",
    "role":"primary|secondary|dr","Topology":"active_active|active_passive",
    "capacityPct":100,"priority":1,"gslbPool":"prod-gslb-a"
  },

  "service.health.probe": {
    "event":"service.health.probe","timestamp":"iso8601",
    "region":"eu-central","serviceId":"kb_api",
    "p95Ms":132,"errorRatePct":0.8,"availPct":99.93,
    "synthetic":{"/search":140,"/answer":180}
  },

  "dependency.health": {
    "event":"dependency.health","timestamp":"iso8601",
    "region":"eu-central","kind":"db|cache|broker|object_store|feature_store",
    "id":"db#orders","status":"ok|degraded|down","lagSec":12,"replication":"sync|async"
  },

  "datastore.replica.lag": {
    "event":"datastore.replica.lag","timestamp":"iso8601",
    "region":"us-east","primaryRegion":"eu-central",
    "store":"postgres|mysql|mongo|iceberg|kafka","lagSec":12,"maxLagSecObserved":28
  },

  "broker.partition.status": {
    "event":"broker.partition.status","timestamp":"iso8601",
    "region":"eu-central","broker":"kafka","topic":"events",
    "partitions":{"underReplicated":3,"offline":0}
  },

  "rto.rpo.policy": {
    "event":"rto.rpo.policy","timestamp":"iso8601",
    "serviceId":"kb_api","RTOsec":300,"RPOsec":30,
    "writeModeOnDegrade":"read_only|block|continue",
    "fencing":{"leaseProvider":"consul|etcd","ttlSec":30}
  },

  "failover.plan.request": {
    "event":"failover.plan.request","timestamp":"iso8601",
    "reason":"manual|incident|automation","targetRegion":"us-east|null",
    "scope":"service|tenant|global","dryRun":false
  },

  "traffic.shift.request": {
    "event":"traffic.shift.request","timestamp":"iso8601",
    "via":"gslb|mesh|gateway|flag",
    "weights":[["eu-central",40],["us-east",60]],
    "stickiness":"session|subject|null"
  },

  "dns.ttl.policy": {
    "event":"dns.ttl.policy","timestamp":"iso8601",
    "pool":"prod-gslb-a","ttlSecNominal":120,"ttlSecDuringIncident":10
  },

  "incident.started|incident.closed": {
    "event":"incident.started","timestamp":"iso8601",
    "id":"inc-2025-09-15-1","severity":"high","title":"EU latency spike"
  },

  "recovery.drill.request": {
    "event":"recovery.drill.request","timestamp":"iso8601",
    "scenario":"region-blackout|db-primary-loss|network-partition",
    "targetRegion":"us-east","scheduledAt":"iso8601","dryRun":true
  }
}

3) Çıktılar (Out)
{
  "failover.plan.ready": {
    "event":"failover.plan.ready","timestamp":"iso8601",
    "mode":"active_active|active_passive",
    "fromRegion":"eu-central","toRegion":"us-east","scope":"global",
    "actions":["dns_ttl_lower","traffic_20→80","db_read_only","fence_primary","promote_secondary","verify","traffic_0→100"],
    "rationale":{"rtoSec":300,"rpoSec":30,"lagOk":true,"brownout":true}
  },

  "failover.started": {
    "event":"failover.started","timestamp":"iso8601",
    "planId":"mrf#7f9a12","from":"eu-central","to":"us-east",
    "via":{"routing":"gslb+mesh","datastore":"postgres(kms-lock)","broker":"kafka(mirror)"},
    "dnsTtlSec":10
  },

  "traffic.shift.applied": {
    "event":"traffic.shift.applied","timestamp":"iso8601",
    "weights":[["eu-central",20],["us-east",80]],
    "stickiness":"session","p95RouteMs":8.4
  },

  "datastore.mode.changed": {
    "event":"datastore.mode.changed","timestamp":"iso8601",
    "store":"postgres","region":"eu-central","mode":"read_only","reason":"rpo_guard"
  },

  "quorum.lease.acquired": {
    "event":"quorum.lease.acquired","timestamp":"iso8601",
    "region":"us-east","provider":"consul","leaseId":"lease#abc","ttlSec":30
  },

  "splitbrain.detected": {
    "event":"splitbrain.detected","timestamp":"iso8601",
    "partition":"eu↔us","symptom":"dual-primary-attempt","action":"fence_eu_primary"
  },

  "failover.stabilized": {
    "event":"failover.stabilized","timestamp":"iso8601",
    "toRegion":"us-east","p95Ms":118,"errPct":0.7,"dbLagSec":5,"brokerUnderReplicated":0
  },

  "failback.plan.ready": {
    "event":"failback.plan.ready","timestamp":"iso8601",
    "fromRegion":"us-east","toRegion":"eu-central",
    "checks":["health_ok","replication_caught_up","drill_pass"],"window":"low_traffic"
  },

  "failback.completed": {
    "event":"failback.completed","timestamp":"iso8601",
    "activeRegion":"eu-central","downtimeMs":0
  },

  "mrf.card": {
    "event":"mrf.card","timestamp":"iso8601",
    "title":"Failover %80→US-EST — Brownout mod",
    "body":"EU p95 600ms • RPO ok (12s lag) • DB EU read-only • DNS TTL 10s.",
    "severity":"warn","ttlSec":900
  },

  "mrf.alert": {
    "event":"mrf.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"split_brain|lease_lost|fencing_failed|rpo_risk|route_failed|idem_duplicate|rbac_denied"
  },

  "mrf.metrics": {
    "event":"mrf.metrics","timestamp":"iso8601",
    "failovers":1,"failbacks":1,"falseFailovers":0,
    "avgDetectSec":42,"mttrSec":420,"avgRpoSecObserved":14,
    "trafficShiftSteps":3,"p95RouteMs":9.1
  },

  "mrf.report.ready": {
    "event":"mrf.report.ready","timestamp":"iso8601",
    "path":"data/mrf/2025-09-15/failover_eu_to_us/report.md",
    "summary":"Brownout→gradual shift 20/80; EU DB read-only; lease US OK; stabilize 7m; RPO 12s.",
    "hash":"sha256:..."
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  topology:{
    mode:"active_active",                     // veya active_passive
    regions:["eu-central","us-east","me-west"],
    priorities:{ "eu-central":1, "us-east":2, "me-west":3 },
    gslbPool:"prod-gslb-a"
  },

  objectives:{
    RTOsec:300, RPOsec:30,
    detectWindowSec:60, hysteresisWindows:2     // flapping önleme
  },

  healthThresholds:{
    app:{ p95Ms:{warn:250, breach:500}, errorRatePct:{warn:1.0, breach:2.0}, availPctMin:99.9 },
    dep:{ dbLagSec:{warn:20, breach:60}, brokerUnderReplicatedMax:{warn:5, breach:10} }
  },

  decisionPolicy:{
    preferGradualShift:true,                    // 0→20→50→80→100
    shiftSteps:[20,50,80,100],
    stickiness:"session",                       // mesh/gateway/flag ile tutarlılık
    writeOnDegrade:"read_only",                 // RPO riski varsa EU write kapat
    requireLease:true,                          // quorum/lease olmadan promote yok
    freezeOnIncident:false
  },

  routing:{
    via:["gslb","mesh","gateway","flag"],       // bir veya birkaçı
    dns:{ ttlSecNominal:120, ttlSecDuringIncident:10 }
  },

  datastore:{
    fencing:{ provider:"consul", ttlSec:30, renewEverySec:10 },
    readOnlySQL:["SET default_transaction_read_only=on"],
    stonith:{ enabled:true, method:"asg/cordon&drain|vm-stop|k8s-fence" }
  },

  broker:{
    kafka:{ mirrorTopics:["events","audit"], enforceAck:"-1" }
  },

  safetyGuards:{
    slo:"LIVIA-32", cost:"LIVIA-34", ethics:"LIVIA-26",
    lineage:"LIVIA-39", provenance:"LIVIA-38", incidents:"LIVIA-15"
  },

  reporting:{
    outputDir:"data/mrf/{YYYY-MM-DD}/{from}_{to}",
    mdFile:"report.md", htmlFile:"report.html",
    html:{ embedMiniCSS:true, chartsInlineSvg:true },
    include:{ timelines:true, lagCharts:true, routeSteps:true }
  },

  rbacViews:{ observer:{ showRoutes:true, hideLeaseIds:true } },

  idempotencyTtlSec: 3600
}

5) Değerlendirme & Karar Mantığı (özet)

Sağlık Puanı: regionHealth = w_app*app + w_dep*deps (app: p95/err/avail; dep: db lag, broker URP).

Durum: ok | brownout (degraded) | blackout (down).

RPO Kontrolü: replicaLagSec ≤ RPOsec → write devam/RO; değilse write block + fence.

RTO Kontrolü: detect + execute ≤ RTOsec olacak şekilde gradual veya instant seç.

Quorum/Lease: yeni aktif bölgede lease elde edilmeden promote yok.

Split-brain önleme: tekil lease/fence, eski birincil STONITH/cordon&drain.

Yol Haritası: gslb.dns ttl↓ → traffic shift → db read_only → lease→ promote_secondary → verify → 100%.

6) Pipeline (Kompozisyon)

Monitor: service.health.probe + dependency.health + replica.lag + broker.status topla

Assess: eşiklere göre brownout/blackout; RPO/RTO uygunluk hesapla

Plan: failover.plan.ready — eylem adımları & sıralı trafik kaydırma

Execute:

Routing: GSLB DNS TTL↓, mesh/gateway ağırlıklarını uygula

Data: eski birincil read-only/fence; yeni bölgede lease + promote

Broker: mirror/cutover; acks=-1 ile veri kaybı riski ↓

Stabilize: pencereler boyunca p95/err/lag izlenir; sorun yoksa adım ilerlet

Failback: koşullar oluşunca planla → düşük trafik penceresinde geri dönüş

Report/Emit: md/html rapor; card/alert/metrics; L22 ile dağıtım

Lineage/Provenance: karar/eylem kayıtlarını L39/L38’e bağla; L48 audit pakete girer

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (probe/dependency/lag) → MONITOR

MONITOR → (degrade≥hysteresis) DECIDE

DECIDE → EXECUTE_FAILOVER (plan uygulama adımları)

EXECUTE_FAILOVER → STABILIZE (pencere sağlığı)

STABILIZE → (ok) DONE | (issue) ROLL_FORWARD/ROLLBACK

FAILBACK: ayrı yol — PLAN_FAILBACK → EXECUTE → STABILIZE → DONE

Hata: ALERT; idem: aynı mrfKey için ikinci yan etki yok (yalnız kart güncellenir)

8) Kenar Durumlar

Brownout vs Blackout: brownout’ta gradual, blackout’ta instant to 100%.

Network Partition (asymmetric): her iki bölge kendini aktif sanıyorsa → splitbrain.detected + STONITH.

DNS Propagation: TTL düşürülmüş ama istemciler cache’li → mesh/gateway ile ek zorla yönlendirme.

Flapping: histerezis + consecutiveWindows≥2 olmadan failover yok.

Write-heavy servis: RPO riski yüksek → double-write buffer (opsiyonel), aksi halde RO.

Cross-region cost spike: L34 cost guard → shiftSteps daha yavaş.

Ethics/Compliance: public etki (ör. veri konumu) değişiyorsa L26 onayı.

Drill Modu: L50 senaryosu; gerçek trafiğe dokunmadan tam yol prova.

Observer görünümü: lease/stun operasyon detayları gizli.

Idempotency: aynı adım tekrarı yalnız durumu/karteyi yeniler.

9) Telemetri
{
  "mrf.metrics": {
    "event":"mrf.metrics","timestamp":"iso8601",
    "failovers":1,"failbacks":1,"falseFailovers":0,
    "avgDetectSec":42,"mttrSec":420,"avgRpoSecObserved":14,
    "dataLossBytes":0,"splitBrainEvents":0,
    "p50RouteMs":4.3,"p95RouteMs":9.1
  }
}

10) Dosya Yapısı (öneri)
services/livia/multiRegionFailoverCoordinator.ts   # FSM + orchestrator
services/livia/lib/mrf/monitor.ts                  # sağlık toplama & skor
services/livia/lib/mrf/decide.ts                   # RTO/RPO + plan üretimi
services/livia/lib/mrf/execute.ts                  # dns/mesh/gateway + db/broker adımları
services/livia/lib/mrf/fencing.ts                  # lease/stonith/fence
services/livia/lib/mrf/stabilize.ts                # penceresel sağlık & adım yükseltme
services/livia/lib/mrf/failback.ts                 # geri dönüş planı/uygulama
services/livia/lib/mrf/report.ts                   # md/html + grafik (inline SVG)
services/livia/lib/bridges.ts                      # L15/L22/L26/L32/L34/L38/L39/L41/L42/L45/L48/L50
services/livia/state/mrfStore.ts                   # idem index + plan/step/lease kayıtları
services/livia/__tests__/multiRegionFailoverCoordinator.test.ts
cfg/livia.mrf.yaml

11) Test İskeleti (Jest/Vitest)

Brownout: EU p95 600ms, err 1.8% → gradual shift 20/50/80→100, kart warn

Blackout: EU down → instant 100% US, RTO ≤ 300s

RPO Guard: lag 12s (≤30s) → EU read-only; 65s → block writes + fence

Lease & Fencing: lease alınmadan promote yok; çift birincil girişiminde splitbrain.detected

Broker mirror: URP=0; cutover tamam; veri kaybı 0 byte

Failback: sağlık & replication catch-up sonrası downtime 0ms

Flapping: tek pencere spike → failover yok

Cost guard: cross-region maliyet alarmında adımlar yavaşlatıldı

Idempotency: aynı mrfKey yinelemesi yan etkisiz; yalnız kart güncellendi

Rapor: md/html yazıldı; L22 dağıtıldı; L38/L39 linkleri işlendi

12) Örnek Akış (kısa)

12:02 EU brownout: p95 620ms, err 1.6% → DECIDE (RTO=300, RPO=30; lag=12s OK)

EXECUTE: DNS TTL 10s, traffic 20/80 US, EU DB read-only, US lease acquired → promote

12:09 STABILIZE: p95 118ms, err 0.7% → 100% US

13:40 EU toparladı: failback.plan.ready düşük trafikte → failback.completed (downtime 0ms).

Rapor/karte yayınlandı; kararlar L38/L39; paket L48’e girdi.

13) SLO

Detect p95 < 60 s

Plan→first shift ≤ 90 s

RTO (brownout) ≤ 300 s; RTO (blackout) ≤ 120 s

RPO gözlenen ≤ hedef + 5 s

Yanlış failover ≤ %1; idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-50 · disasterRecoveryDrills.ts — Geniş Prompt v3 (+ Hardening)

Amaç:
Felaket kurtarma (DR) kabiliyetini sürekli kanıtlamak için senaryo üret → planla → güvenlik kontrolleri → kontrollü arıza enjekte et (chaos) → failover (L49) → doğrula (RTO/RPO/data loss=0) → failback → puanla → bulgu & iyileştirme planı → raporla yaşam döngüsünü otomatikleştir. Brownout/blackout, network partition, DB primary kaybı, broker kesintisi, DNS/GSLB arızası, storage/object store unavailability, feature store lag (L46) gibi senaryoları kapsa. Kararlar SLO (L32), Maliyet (L34), Etik/Privacy (L26/L40), WORM/Provenance (L38), Lineage (L39) ve Audit Export (L48) ile izlenir.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: resilience|ops|policy tam, observer salt-okur

Gizlilik: PII yok; serbest metinler L21 ile redakte

İdempotency: drillKey = scenarioId + windowISO + topologyHash + stageHash

Observability: spans (drill.plan,drill.guard,drill.inject,drill.execute,drill.verify,drill.score,drill.report) + metrics

Uyum: kritik adımlar L26 onay+, L38 WORM append; tatbikatlar production-safe (blast radius sınırlı)

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "drill.catalog.registered": {
    "event":"drill.catalog.registered","timestamp":"iso8601",
    "scenarioId":"region-blackout-eu",
    "title":"Region Blackout — EU → US failover",
    "topology":"active_active|active_passive",
    "stages":[
      {"name":"prewarm","timeoutSec":600},
      {"name":"inject_blackout","timeoutSec":120},
      {"name":"failover_execute","timeoutSec":900},
      {"name":"stabilize_verify","timeoutSec":900},
      {"name":"failback","timeoutSec":900}
    ],
    "slo":{"RTOsec":300,"RPOsec":30},
    "blastRadius":{"trafficMaxPct":25,"tenants":["sandbox","internal"]},
    "guards":{"freezeOnIncident":true,"abortOnSloBreach":true}
  },

  "drill.request": {
    "event":"drill.request","timestamp":"iso8601",
    "scenarioId":"region-blackout-eu",
    "schedule":{"at":"2025-09-16T02:00:00+03:00","windowMin":60},
    "env":"prod|staging",
    "dryRun":false,
    "syntheticLoad":{"enabled":true,"rps":120,"pattern":"bursty|steady"},
    "evidenceProfile":"soc2|iso27001|kvkk|gdpr|custom",
    "notes":"geceleri düşük trafik"
  },

  "drill.cancel.request": {
    "event":"drill.cancel.request","timestamp":"iso8601",
    "reason":"manual|incident|policy","by":"op#7f9a12"
  },

  "chaos.inject.result": {
    "event":"chaos.inject.result","timestamp":"iso8601",
    "stage":"inject_blackout|db_primary_loss|dns_outage|broker_fail",
    "tool":"simian|chaosmesh|custom",
    "success":true,"details":{"targets":["eu-central"],"durationSec":90}
  },

  "mrf.state.update": {
    "event":"mrf.state.update","timestamp":"iso8601",
    "fromRegion":"eu-central","toRegion":"us-east",
    "phase":"plan|execute|stabilize|failback","progressPct":80
  },

  "service.health.probe": {
    "event":"service.health.probe","timestamp":"iso8601",
    "region":"eu-central|us-east","serviceId":"kb_api",
    "p95Ms":128,"errorRatePct":0.7,"availPct":99.92
  },

  "datastore.replica.lag": {
    "event":"datastore.replica.lag","timestamp":"iso8601",
    "region":"us-east","primaryRegion":"eu-central",
    "store":"postgres|kafka|iceberg","lagSec":18
  },

  "slo.guard.triggered|slo.guard.recovered": {
    "event":"slo.guard.triggered","timestamp":"iso8601",
    "serviceId":"kb_api","slo":"latency_p95|error_rate","severity":"high"
  },

  "cost.guard.triggered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "component":"traffic_shift","severity":"high","deltaUSDPerHour":42.5
  },

  "incident.started": {
    "event":"incident.started","timestamp":"iso8601",
    "id":"inc-2025-09-15-7","severity":"high","title":"Real prod incident"
  }
}

3) Çıktılar (Out)
{
  "drill.plan.ready": {
    "event":"drill.plan.ready","timestamp":"iso8601",
    "drillKey":"region-blackout-eu#2025-09-16T02:00+03:00",
    "stages":["prewarm","inject_blackout","failover_execute","stabilize_verify","failback"],
    "blastRadius":{"trafficMaxPct":25,"tenants":["sandbox","internal"]},
    "guards":{"RTOsec":300,"RPOsec":30,"freezeOnIncident":true},
    "hash":"sha256:..."
  },

  "drill.guard.snapshot": {
    "event":"drill.guard.snapshot","timestamp":"iso8601",
    "status":"ok|at_risk|abort",
    "checks":{"changeFreeze":"off","activeIncident":false,"rbac":true,"sloBudgetOk":true,"costBudgetOk":true}
  },

  "drill.started": {
    "event":"drill.started","timestamp":"iso8601",
    "scenarioId":"region-blackout-eu","env":"prod","syntheticLoad":{"rps":120}
  },

  "drill.stage.progress": {
    "event":"drill.stage.progress","timestamp":"iso8601",
    "stage":"failover_execute","progressPct":60,"notes":"DNS TTL=10; traffic 20→80"
  },

  "drill.verify.snapshot": {
    "event":"drill.verify.snapshot","timestamp":"iso8601",
    "RTOsecObserved":278,"RPOsecObserved":14,
    "dataLossBytes":0,"errPct":"<=1%","p95Ms":118,"brokerUnderReplicated":0,
    "status":"pass|fail|partial"
  },

  "drill.scoring.ready": {
    "event":"drill.scoring.ready","timestamp":"iso8601",
    "score":{"total":92,"RTO":30,"RPO":30,"Runbook":12,"Observability":10,"Automation":10},
    "level":"green|yellow|red"
  },

  "drill.findings.ready": {
    "event":"drill.findings.ready","timestamp":"iso8601",
    "items":[
      {"severity":"high","title":"DNS TTL düşüşü geç uygulandı","action":"gslb policy hot-reload"},
      {"severity":"medium","title":"Runbook adımı manuel","action":"mesh weight API otomasyonu"}
    ]
  },

  "drill.remediation.plan.ready": {
    "event":"drill.remediation.plan.ready","timestamp":"iso8601",
    "tasks":[
      {"id":"rem-1","owner":"resilience","desc":"GSLB TTL hot-reload","etaDays":3},
      {"id":"rem-2","owner":"platform","desc":"Mesh route otomasyonu","etaDays":5}
    ]
  },

  "drill.report.ready": {
    "event":"drill.report.ready","timestamp":"iso8601",
    "path":"data/drills/2025-09-16/region-blackout-eu/report.md",
    "summary":"RTO 278s, RPO 14s, data loss 0, score 92/100; 2 bulgu, 2 remediation.",
    "hash":"sha256:..."
  },

  "drill.card": {
    "event":"drill.card","timestamp":"iso8601",
    "title":"DR Drill Tamam — Region Blackout (EU→US)",
    "body":"RTO 278s • RPO 14s • Score 92 • 0 data loss • 2 bulgu/2 fix.",
    "severity":"info","ttlSec":900
  },

  "drill.alert": {
    "event":"drill.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"guard_abort|chaos_failed|route_failed|rpo_risk|long_rto|idem_duplicate|rbac_denied|incident_freeze"
  },

  "drill.metrics": {
    "event":"drill.metrics","timestamp":"iso8601",
    "drills":1,"passes":1,"fails":0,
    "avgRTOsec":278,"avgRPOsec":14,"dataLossBytes":0,
    "p95PlanMs":24,"p95StageMs":3200,"aborts":0
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  catalog:{
    scenarios:[
      "region-blackout","region-brownout","db-primary-loss",
      "network-partition","dns-outage","broker-fail","object-store-unavail",
      "featurestore-high-lag"
    ],
    defaults:{
      RTOsec:300, RPOsec:30,
      stages:["prewarm","inject","failover_execute","stabilize_verify","failback"]
    }
  },

  schedule:{
    cron:"Sun 02:00",                // düşük trafik
    maxConcurrent:1,
    autoSkipOnIncident:true
  },

  blastRadius:{
    trafficMaxPct: 25,
    tenants:["sandbox","internal"],
    blockWrites:"on_degrade|never|always"
  },

  guards:{
    freezeOnIncident:true,
    abortOnSloBreach:true,
    costBudgetUsdMaxPerHour: 100
  },

  syntheticLoad:{
    enabled:true, rps:120, pattern:"steady",
    headers:{"x-drill":"true"}
  },

  integrations:{
    mrf:"LIVIA-49",
    slo:"LIVIA-32",
    cost:"LIVIA-34",
    incidents:"LIVIA-15",
    lineage:"LIVIA-39",
    provenance:"LIVIA-38",
    audit:"LIVIA-48",
    flags_mesh_gateway:"LIVIA-35",
    dq:"LIVIA-41",
    fsync:"LIVIA-46"
  },

  reporting:{
    outputDir:"data/drills/{YYYY-MM-DD}/{scenarioId}",
    mdFile:"report.md", htmlFile:"report.html",
    html:{ embedMiniCSS:true, chartsInlineSvg:true },
    include:{ timelines:true, rto_rpo:true, chaos_timeline:true, findings:true }
  },

  rbacViews:{ observer:{ hideTargets:true, showOnlySummary:true } },

  idempotencyTtlSec: 86400
}

5) Puanlama (Scoring) & Doğrulama

RTO: hedefe göre puan: score_RTO = clamp(0,30, 30 * (target / observed)).

RPO: score_RPO = clamp(0,30, 30 * (target / (observed+ε))), data loss >0 ise keskin düşüş.

Runbook Otomasyon: manuel adım sayısı azaldıkça puan ↑ (0–12).

Observability: eksiksiz sağlık/lag/route grafikleri (0–10).

Automation/Idempotency: otomatik rollback/abort düzgün işlediyse (0–10).

Seviye: green ≥ 85, yellow 70–84, red < 70.

6) Pipeline (Kompozisyon)

Plan: drill.request veya cron → katalogdan şablon + paramlar → drill.plan.ready

Guard/Gate: L15 aktif incident? L32/L34 bütçe/SLO uygun mu? RBAC? → drill.guard.snapshot

Prewarm: GSLB TTL ↓, ikincil bölge ısıtma, synthetic load başlat

Inject: chaos aracıyla hedef hata (region shutdown, DNS kesintisi, DB kill switch, broker throttle)

Failover: L49 planını çağır; trafik adımları, lease/fence, RO/lock modları

Stabilize/Verify: p95/err/RPO ölç; fsync (L46) ile data tutarlılığı; 0 data loss hedefi

Failback: düşük trafik penceresinde geri dönüş

Score & Findings: puanla, bulguları çıkar; remediation planı yaz

Report & Emit: md/html rapor + card/alert/metrics; L48 audit paketine ekle

Lineage/Provenance: koşunun tüm adımlarını L39/L38’e bağla

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (drill.request|cron) → PLAN

PLAN → GUARD

GUARD → (ok) PREWARM | (abort) DONE

PREWARM → INJECT → EXECUTE_FAILOVER → STABILIZE_VERIFY → FAILBACK → SCORE → REPORT → DONE

Ara olaylar: cancel.request → ABORT; gerçek incident.started → FREEZE/ABORT

Hata: ALERT + mevcut aşamada rollback/cleanup; idem: aynı drillKey tekrarı yan etkisiz

8) Kenar Durumlar

Gerçek olay çakışması: freezeOnIncident=true → drill durur (FREEZE), hiçbir rota değişikliği yapılmaz

Kaos başarısız: chaos.inject.result.success=false → drill abort + finding

SLO ani yükseliş: abortOnSloBreach=true → otomatik rollback (trafik baseline’a)

RPO riski: replika lag > hedef → write block + fence ve verify sonra devam

Maliyet artışı: cost.guard.triggered → synthetic load düşür/ durdur; adım geciktir

DNS cache etkisi: TTL düşse bile yayılma gecikirse mesh/gateway override kullan

Fsync mismatch: L46 uyarısı → partial durum ve zorunlu remediation

Observer görünümü: hedef IP/host bilgileri gizlenir; yalnız özet metrik/kronoloji

Idempotency: aşama tekrarı yalnız kart/metrik günceller; ikinci yan etki yok

9) Telemetri
{
  "drill.metrics": {
    "event":"drill.metrics","timestamp":"iso8601",
    "drills":1,"passes":1,"fails":0,"aborts":0,
    "avgRTOsec":278,"avgRPOsec":14,"dataLossBytes":0,
    "p50PlanMs":8,"p95PlanMs":24,"p95StageMs":3200
  }
}

10) Dosya Yapısı (öneri)
services/livia/disasterRecoveryDrills.ts          # FSM + orchestrator
services/livia/lib/drill/catalog.ts               # senaryo şablonları
services/livia/lib/drill/guard.ts                 # SLO/Cost/Incident/RBAC kapıları
services/livia/lib/drill/inject.ts                # chaos araç köprüleri
services/livia/lib/drill/execute.ts               # L49 failover tetikçisi
services/livia/lib/drill/verify.ts                # RTO/RPO, fsync, data loss=0
services/livia/lib/drill/score.ts                 # puanlama & bulgu üretimi
services/livia/lib/drill/report.ts                # md/html + grafik (inline SVG)
services/livia/lib/bridges.ts                     # L15/L22/L26/L32/L34/L35/L38/L39/L46/L48/L49
services/livia/state/drillStore.ts                # idem index + koşu geçmişi
services/livia/__tests__/disasterRecoveryDrills.test.ts
cfg/livia.drill.yaml

11) Test İskeleti (Jest/Vitest)

Plan & Guard: aktif incident varken abort; normalde prewarm’a geçiş

Inject: region blackout kaosu başarıyla uygulandı → chaos.inject.result.success=true

Failover: L49 adımları çağrıldı; trafik 20→80→100 uygulandı

Verify: RTO ≤ 300s, RPO ≤ 30s, data loss 0 → pass

Partial: fsync mismatch → partial + remediation maddesi üretildi

SLO breach: p95>500ms → otomatik rollback, kart error

Idempotency: aynı drillKey tekrarı yan etkisiz

Report: md/html çıktı; L48 audit paketine dahil

Observer görünümü: gizli alanlar sızdırılmadı (testte kontrol)

12) Örnek Akış (kısa)

01:55 PLAN/GUARD: aktif incident yok; SLO & cost bütçesi uygun

02:00 PREWARM: US ısıtıldı, DNS TTL 10s, synthetic 120 rps

02:05 INJECT: EU blackout (chaosmesh) 90s

02:06 EXECUTE_FAILOVER: trafik 20→80, EU DB RO, lease US OK

02:12 STABILIZE_VERIFY: p95 118ms, err 0.7%, RPO 14s, data loss 0 → PASS

02:20 FAILBACK: düşük trafik penceresiyle EU’ya dönüş

02:25 SCORE/REPORT: 92/100, 2 bulgu, 2 remediation; kart & rapor; L48’e eklendi.

13) SLO

p95 plan < 30 ms

RTO gözlenen ≤ 300 s, RPO gözlenen ≤ 30 s

data loss = 0 hedef

yanlış abort/promote ≤ %1

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-51 · releaseFreezeController.ts — Geniş Prompt v3.1 (+ Policy DSL, Simülasyon, Ek Uygulayıcılar)

Amaç:
Üretimde riskli dönemlerde release/konfig değişikliklerini otomatik freeze (dondur) / thaw (çöz) etmek; kapsamı app release, infra IaC, feature flag, model publish/canary, schema migration, policy/config. Tetikler: Incident (L15), SLO (L32), Cost (L34), Multi-Region Failover (L49), DR Drills (L50), Audit pencereleri (L48), Takvim (blackout).
Güvence: RBAC + çoklu onay + istisna akışı, timeboxed, idempotent, WORM/Provenance (L38), Lineage (L39), gözlemlenebilirlik.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul.

1) Standartlar

Runtime: Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: ops|release|policy tam yetki; observer salt okur

Gizlilik: PII yok; metinler L21 ile redakte

İdempotency: freezeKey = scope + kind + reason + windowISO

Observability: spans (freeze.evaluate|apply|extend|lift|simulate) + metrics

Uyum: dondurma/çözme/istisna kararları L26 (Ethics) ve L38 (WORM) kaydı

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "freeze.policy.updated": {
    "event":"freeze.policy.updated","timestamp":"iso8601",
    "policyId":"rel-freeze-v1",
    "rules":[
      {
        "when":"incident.severity>=high",
        "scope":"global|service|tenant|namespace",
        "kind":["app_release","infra_iac","feature_flag","model_publish","schema_migration","policy_change"],
        "ttlMin":180,
        "requiresApprovals":["policy-lead"],
        "exceptions":["hotfix:sev1","security:critical_patch"]
      },
      {
        "when":"slo.burnPct>5 OR cost.guard=hard",
        "scope":"service",
        "kind":["app_release","feature_flag","model_publish"],
        "ttlMin":60
      }
    ]
  },

  "incident.started|incident.closed": {
    "event":"incident.started","timestamp":"iso8601",
    "id":"inc-2025-09-15-1","severity":"high","scope":"service:kb_api","title":"EU latency spike"
  },

  "slo.guard.triggered|slo.guard.recovered": {
    "event":"slo.guard.triggered","timestamp":"iso8601",
    "serviceId":"kb_api","slo":"latency_p95","burnPct":7.2,"severity":"high"
  },

  "cost.guard.triggered|cost.guard.recovered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "component":"search_stack","severity":"high","deltaUSDPerHour":42.5
  },

  "mrf.state.update": {
    "event":"mrf.state.update","timestamp":"iso8601",
    "phase":"execute|stabilize|failback","fromRegion":"eu-central","toRegion":"us-east"
  },

  "drill.started|drill.ended": {
    "event":"drill.started","timestamp":"iso8601",
    "scenarioId":"region-blackout-eu","env":"prod","blastRadius":{"trafficMaxPct":25}
  },

  "schema.migration.classified": {
    "event":"schema.migration.classified","timestamp":"iso8601",
    "datasetId":"ds:orders","classification":"breaking|additive|mixed","windowMin":90
  },

  "audit.window.opened|audit.window.closed": {
    "event":"audit.window.opened","timestamp":"iso8601",
    "profile":"kvkk|gdpr|soc2|iso27001","strict":true
  },

  "calendar.blackout.added|calendar.blackout.removed": {
    "event":"calendar.blackout.added","timestamp":"iso8601",
    "name":"yılbaşı-yoğun","from":"2025-12-30","to":"2026-01-03",
    "kinds":["app_release","model_publish"],"scopes":["global"]
  },

  "freeze.override.request": {
    "event":"freeze.override.request","timestamp":"iso8601",
    "action":"allow_single|extend|lift_now",
    "kind":"app_release|infra_iac|feature_flag|model_publish|schema_migration|policy_change",
    "scope":"global|service:kb_api|tenant:t1|namespace:kb_default",
    "reason":"hotfix|security|policy|manual",
    "requester":"op#7f9a12",
    "changeRef":{"repo":"app/web","branch":"hotfix/latency","pr":"#1241"},
    "approvals":["policy-lead?","sre-lead?"]
  },

  "change.attempted": {
    "event":"change.attempted","timestamp":"iso8601",
    "kind":"app_release|infra_iac|feature_flag|model_publish|schema_migration|policy_change",
    "scope":"service:kb_api",
    "ref":{"repo":"app/web","branch":"main","pr":"#1242","env":"prod","flagId":"kb.hybridSearch.v2?"},
    "actor":"ci#github-actions"
  },

  "override.approval.updated": {
    "event":"override.approval.updated","timestamp":"iso8601",
    "reqId":"ovr#7f9a12","approvedBy":"policy-lead|sre-lead","state":"approved|rejected"
  },

  "release.window.request": {
    "event":"release.window.request","timestamp":"iso8601",
    "scope":"service:kb_api","kind":["app_release","model_publish"],
    "from":"iso8601","to":"iso8601","mode":"freeze|thaw","reason":"promo|maintenance"
  },

  "freeze.policy.simulate.request": {
    "event":"freeze.policy.simulate.request","timestamp":"iso8601",
    "inputs":["incident.severity=high","slo.burnPct=7.2","mrf.phase=execute"],
    "scope":"service:kb_api","kinds":["app_release","feature_flag"]
  }
}

3) Çıktılar (Out)
{
  "freeze.state.changed": {
    "event":"freeze.state.changed","timestamp":"iso8601",
    "state":"frozen|partially_frozen|thawed",
    "scope":"global|service|tenant|namespace",
    "kind":["app_release","feature_flag","model_publish","infra_iac","schema_migration","policy_change"],
    "reason":"incident|slo|cost|mrf|drill|audit|calendar|manual",
    "until":"iso8601",
    "policyId":"rel-freeze-v1","hash":"sha256:..."
  },

  "freeze.violation.detected": {
    "event":"freeze.violation.detected","timestamp":"iso8601",
    "kind":"app_release","scope":"service:kb_api",
    "changeRef":{"repo":"app/web","pr":"#1242"},
    "action":"blocked|quarantined|allowed_via_exception",
    "rationale":"missing_approval|out_of_window|kind_blocked"
  },

  "freeze.exception.granted": {
    "event":"freeze.exception.granted","timestamp":"iso8601",
    "kind":"hotfix","scope":"service:kb_api",
    "approvedBy":["policy-lead","sre-lead"],
    "validUntil":"iso8601","changeRef":{"repo":"app/web","pr":"#1241"}
  },

  "freeze.policy.ready": {
    "event":"freeze.policy.ready","timestamp":"iso8601",
    "policyId":"rel-freeze-v1","rulesApplied":2,"calendarApplied":1
  },

  "freeze.report.ready": {
    "event":"freeze.report.ready","timestamp":"iso8601",
    "path":"data/freeze/2025-09-15/service_kb_api/report.md",
    "summary":"SLO burn yüksek → service freeze (app_release/flag/model); 2 ihlal bloklandı; 1 hotfix istisnası onaylandı.",
    "hash":"sha256:..."
  },

  "freeze.card": {
    "event":"freeze.card","timestamp":"iso8601",
    "title":"RELEASE FREEZE — service:kb_api (SLO burn 7.2%)",
    "body":"Kind: app_release, feature_flag, model_publish • Until: 15:30 • Override: 2 onay gerek.",
    "severity":"warn","ttlSec":900
  },

  "freeze.alert": {
    "event":"freeze.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|rbac_denied|missing_approval|policy_conflict|apply_failed|violation_blocked|calendar_overlap"
  },

  "freeze.metrics": {
    "event":"freeze.metrics","timestamp":"iso8601",
    "activeWindows":2,"violationsBlocked":3,"exceptionsGranted":1,
    "avgApplyMs":18,"avgLiftMs":12,"autoLifted":4
  },

  "freeze.simulate.result": {
    "event":"freeze.simulate.result","timestamp":"iso8601",
    "scope":"service:kb_api","kinds":["app_release","feature_flag"],
    "result":"would_freeze","ttlMin":90,"ruleId":"R-slo-001"
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  kinds:["app_release","infra_iac","feature_flag","model_publish","schema_migration","policy_change"],

  defaultTTLs:{
    incident:{ high:240, medium:120, low:60 },
    slo:{ high:90, medium:45, low:20 },
    cost:{ high:60, medium:30 },
    mrf:{ execute:180, stabilize:120, failback:90 },
    drill:{ running:120 },
    audit:{ strict:240 },
    calendar:{ default:1440 }
  },

  scopes:{
    precedence:["namespace","tenant","service","global"],
    mergeStrategy:"most_restrictive_wins"
  },

  approvals:{
    required:{
      app_release:["sre-lead"],
      infra_iac:["platform-lead"],
      model_publish:["mlops-lead","policy-lead"],
      schema_migration:["data-lead","policy-lead"]
    },
    quorum:{ min:2, rolesAnyOf:[["sre-lead","policy-lead","security-lead"]] },
    hotfixOverrides:{ minApprovals:2, roles:["sre-lead","policy-lead"] },
    expiryMin:60
  },

  enforcement:{
    cicd:{ blockPipelines:true, providers:["github","gitlab","jenkins"], branchProtection:true },
    registry:{ npmPublish:true, dockerPush:true },
    k8s:{ admissionWebhook:true, namespaces:["prod","infra"] },
    flags:{ providers:["launchdarkly|unleash|configcat"], namespaces:["prod_flags"], mode:"block_non_hotfix" },
    canary:{ via:"LIVIA-45", blockStart:true },
    retrain:{ via:"LIVIA-44", holdPublish:true },
    schema:{ via:"LIVIA-42", requireWindow:true },
    mrf:{ via:"LIVIA-49", freezeDuringFailover:true }
  },

  calendar:{
    holidays:["01-01","04-23","05-01","05-19","07-15","08-30","10-29"],
    blackoutWindows:[]
  },

  policyDSL:{
    // basit ifade grameri
    ops:["AND","OR","NOT"],
    fields:["incident.severity","slo.burnPct","cost.guard","mrf.phase","drill.active","audit.strict"],
    comparators:[">",">=","<","<=","=","in","matches"],
    examples:[
      "incident.severity>=high",
      "slo.burnPct>5 AND NOT drill.active",
      "mrf.phase in ['execute','stabilize']"
    ]
  },

  reporting:{
    outputDir:"data/freeze/{YYYY-MM-DD}/{scope}",
    mdFile:"report.md", htmlFile:"report.html",
    html:{ embedMiniCSS:true },
    include:{ timeline:true, violations:true, exceptions:true }
  },

  rbacViews:{ observer:{ showTimeline:true, hideChangeRefs:true } },

  idempotencyTtlSec: 3600
}

5) Kurallar & Değerlendirme

Tetikler → Kapsam/Kind/TTL: olay türü/şiddet/alan → kapsam (varsa dar: service:…), kind (haritalı), TTL (policy + default).

Merge: birden çok kural çakışırsa en kısıtlayıcı kazanır (most_restrictive_wins).

Override/İstisna: freeze.override.request → RBAC + çoklu onay/quorum + süreli izin (validUntil).

İhlal Yakalama: change.attempted → cicd/k8s/flag/model/schema yollarında blok/karantina/istisna ile izin.

Histerezis: slo.guard.recovered iki ardışık pencerede gelmedikçe auto-lift yapma.

Takvim: blackout + başka tetik çakışırsa uzun TTL uygulanır; rapora calendar_overlap.

6) Pipeline (Kompozisyon)

Evaluate: tetik/istek → Policy DSL ile eşleştir → kapsam/kind/TTL hesapla.

Apply: uygulayıcılar (CI/CD, registry, k8s admission, flag provider, canary/retrain/schema/mrf köprüleri).

Notify & Record: freeze.state.changed + card/alert/metrics; WORM append + lineage.

Monitor: recovered/closed + ttl → auto-lift; extend talepleri → TTL güncelle.

Override Flow: onaylar tamamlanırsa exception.granted; değilse violation.detected.

Simülasyon: freeze.policy.simulate.request → yan etki olmadan karar hesapla → simulate.result.

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (policy/trigger/calendar) → EVALUATE

EVALUATE → APPLY → ACTIVE

ACTIVE → (override.request) REVIEW | (recovered|ttl) LIFT

REVIEW → (approved) EXCEPTION → ACTIVE | (rejected) ACTIVE

LIFT → freeze.state.changed(state='thawed') → IDLE

Hata: ALERT; idem: aynı freezeKey tekrarında yan etki yok (yalnız kart/metrik güncellenir)

8) Kenar Durumlar

Policy çatışması: servis+global çakıştı → most_restrictive_wins; freeze.alert(policy_conflict)

False-positive SLO: kısa süreli spike → histerezis nedeniyle thaw yok

MRF failover: freezeDuringFailover=true → canary/release tamamen blok

Schema “additive”: yalnız app_release sınırlanır; migration serbest (policy’ye bağlı)

Audit strict: audit.window.opened(strict) → policy_change dahil blok; yalnız security hotfix istisna

Observer: PR/branch/flag kimlikleri gizli; yalnız özet görünür

Idempotency: aynı tetik için ikinci APPLY yan etki yapmaz; yalnız TTL/karte güncellenir

9) Telemetri
{
  "freeze.metrics": {
    "event":"freeze.metrics","timestamp":"iso8601",
    "activeWindows":2,"violationsBlocked":3,"exceptionsGranted":1,
    "p50ApplyMs":7,"avgApplyMs":18,"avgLiftMs":12,
    "autoLifted":4,"policyConflicts":0
  }
}

10) Dosya Yapısı (öneri)
services/livia/releaseFreezeController.ts
services/livia/lib/freeze/policy.ts           # Policy DSL yorumlayıcı, TTL/merge
services/livia/lib/freeze/enforce.ts          # CI/CD, registry, k8s, flags, canary, retrain, schema, mrf köprüleri
services/livia/lib/freeze/override.ts         # Onay akışı, quorum, istisna yönetimi
services/livia/lib/freeze/report.ts           # md/html rapor + timeline
services/livia/lib/freeze/simulate.ts         # Yan etkisiz politika simülasyonu
services/livia/lib/bridges.ts                 # L15/L22/L26/L32/L34/L38/L39/L42/L44/L45/L48/L49/L50
services/livia/state/freezeStore.ts           # idem index + aktif pencereler + override kayıtları
services/livia/__tests__/releaseFreezeController.test.ts
cfg/livia.freeze.yaml

11) Test İskeleti (Jest/Vitest)

Incident high → freeze: service bazlı freeze, CI/CD & k8s admission blok, kart warn

SLO burn 7.2%: freeze → recovered×2 sonrası auto-lift

Cost guard hard: model publish/flag blok; violation.detected kaydı

MRF execute: global freeze; override reddi

Schema breaking: migration pencere zorlaması; pencere dışı deneme blocked

Calendar blackout: yılbaşı aralığında global app_release freeze

Override hotfix (quorum): 2 onay yok → blok; 2 onayla exception.granted (tek seferlik)

Policy simulate: girdi seti → simulate.result=would_freeze

Idempotency: aynı freezeKey yinelemesi yan etkisiz

Rapor: md/html yazıldı; L22 dağıtıldı; L38/L48’e eklendi

12) Örnek Akış (kısa)

14:05 slo.guard.triggered(burn=7.2, service=kb_api) → EVALUATE: kinds app_release|flag|model, TTL 90 dk

14:06 APPLY: CI/CD, k8s, flag publish blok; freeze.state.changed(frozen) + kart

14:20 PR #1241 için override.request(hotfix) → quorum 2 onay geldi → exception.granted(validUntil 15:00)

15:02 slo.guard.recovered ×2 pencere → LIFT → rapor/metrics güncellendi.

13) SLO

Apply p95 < 30 ms

Auto-lift gecikmesi ≤ 60 s

Yanlış blok oranı ≤ %1

Idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-52 · chaosExperimentDesigner.ts — Geniş Prompt v3 (+ Güvenli Limitler, Oto-Analiz, GameDay)

Amaç:
Üretim/staging ortamlarında parametrik kaos deneylerini güvenli biçimde tasarla → planla → enjekte et → gözlemle → değerlendir → bulgu & iyileştirme öner. Hedef: dayanıklılık (resilience) zayıflıklarını erken bulup SLO (L32), Maliyet (L34), Release Freeze (L51), Failover (L49), DR Drills (L50) ve Audit (L48) ile entegre kanıtlanabilir geliştirme sağlamak.
Araç köprüleri: Chaos Mesh / Litmus / Gremlin / AWS FIS / Toxiproxy / tc-netem / iptables / k8s fault-injection.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: resilience|ops|policy tam; observer salt okur

Gizlilik: PII yok; serbest metinler L21 ile redakte

İdempotency: expKey = scenarioId + target + windowISO + seed + stageHash

Observability: spans (chaos.plan,chaos.guard,chaos.inject,chaos.observe,chaos.score,chaos.report) + metrics

Uyumluluk: kritik adımlar L26 etik / L38 WORM append; değişimler L39 lineage’a bağlanır

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "chaos.catalog.registered": {
    "event":"chaos.catalog.registered","timestamp":"iso8601",
    "scenarioId":"net-latency-eu-api",
    "title":"EU API net gecikme 300ms ±50ms jitter",
    "targets":{"serviceIds":["kb_api"],"regions":["eu-central"]},
    "stages":[
      {"name":"ramp_up","durationSec":300,"params":{"latencyMs":150,"jitterMs":20,"lossPct":0}},
      {"name":"steady","durationSec":600,"params":{"latencyMs":300,"jitterMs":50,"lossPct":0}},
      {"name":"ramp_down","durationSec":300,"params":{"latencyMs":150,"jitterMs":20,"lossPct":0}}
    ],
    "tools":["chaosmesh","tc-netem"],
    "blastRadius":{"trafficMaxPct":15,"tenants":["sandbox","internal"]},
    "expected":{"p95MsDeltaMax":+200,"errPctMaxDelta":+0.5}
  },

  "chaos.request": {
    "event":"chaos.request","timestamp":"iso8601",
    "scenarioId":"net-latency-eu-api",
    "env":"prod|staging",
    "schedule":{"at":"2025-09-16T03:00:00+03:00","windowMin":30},
    "seed":42,
    "syntheticLoad":{"enabled":true,"rps":80,"pattern":"steady|bursty"},
    "safety":{"abortOnSloBreach":true,"abortOnCostHard":true},
    "notes":"geceleri düşük trafik"
  },

  "chaos.template.request": {
    "event":"chaos.template.request","timestamp":"iso8601",
    "kind":"network|cpu|memory|disk|io|dns|broker|db|fs|featurestore|time_skew|rate_limit|pod_kill",
    "severity":"low|medium|high",
    "durationMin":20,
    "targets":{"serviceIds":["kb_api"],"regions":["eu-central"]},
    "constraints":{"p95MsMax":400,"errPctMax":2.0}
  },

  "chaos.override.request": {
    "event":"chaos.override.request","timestamp":"iso8601",
    "action":"pause|resume|abort|extend",
    "reason":"manual|incident|policy|ethics","by":"op#7f9a12"
  },

  "release.freeze.state": {
    "event":"release.freeze.state","timestamp":"iso8601",
    "state":"frozen|thawed","scope":"service:kb_api","reason":"slo|mrf|drill|calendar"
  },

  "slo.guard.triggered|slo.guard.recovered": {
    "event":"slo.guard.triggered","timestamp":"iso8601",
    "serviceId":"kb_api","slo":"latency_p95|error_rate","burnPct":6.1,"severity":"high"
  },

  "cost.guard.triggered|cost.guard.recovered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "component":"inference|search_stack","severity":"high","deltaUSDPerHour":35.2
  },

  "mrf.state.update": {
    "event":"mrf.state.update","timestamp":"iso8601",
    "phase":"execute|stabilize","fromRegion":"eu-central","toRegion":"us-east"
  }
}


Hazır Template Türleri (öneri):

network: latency/jitter/loss/dup/reorder; toxi/netem

cpu/memory/disk/io: k8s stress-ng; cgroup limit; io-throttle

dns: dns-outage/slow-resolver

broker: Kafka partition offline/URP↑, throttle

db: primary kill / connection pool limit / read-only fence

featurestore: online lag↑ (L46), TTL expirations

rate_limit: gateway 429 enjektesi

time_skew: NTP drift (sadece staging)

pod_kill: controlled chaos (termination, eviction)

3) Çıktılar (Out)
{
  "chaos.plan.ready": {
    "event":"chaos.plan.ready","timestamp":"iso8601",
    "expKey":"net-latency-eu-api#kb_api#2025-09-16T03:00+03:00#seed42",
    "scenarioId":"net-latency-eu-api","env":"prod",
    "stages":["ramp_up","steady","ramp_down"],
    "tools":["chaosmesh","tc-netem"],
    "blastRadius":{"trafficMaxPct":15,"tenants":["sandbox","internal"]},
    "guards":{"abortOnSloBreach":true,"abortOnCostHard":true,"freezeCheck":true},
    "expectedImpact":{"p95MsDeltaMax":200,"errPctMaxDelta":0.5},
    "hash":"sha256:..."
  },

  "chaos.guard.snapshot": {
    "event":"chaos.guard.snapshot","timestamp":"iso8601",
    "status":"ok|at_risk|abort",
    "checks":{"releaseFreeze":"thawed","activeIncident":false,"rbac":true,"sloBudgetOk":true,"costBudgetOk":true,"blastRadiusOk":true}
  },

  "chaos.inject.started": {
    "event":"chaos.inject.started","timestamp":"iso8601",
    "stage":"steady","tool":"chaosmesh|tc-netem","targets":["kb_api@eu-central"],
    "params":{"latencyMs":300,"jitterMs":50,"lossPct":0}
  },

  "chaos.health.snapshot": {
    "event":"chaos.health.snapshot","timestamp":"iso8601",
    "window":"5m",
    "app":{"p95Ms":342,"errPct":1.3,"availPct":99.7,"sloBurnPct":2.2},
    "deps":{"dbLagSec":12,"brokerURP":0,"fsLagMsP95":160},
    "status":"ok|at_risk|breach","reason":"slo|cost|guardrail"
  },

  "chaos.inject.completed": {
    "event":"chaos.inject.completed","timestamp":"iso8601",
    "stage":"steady","success":true,"durationSec":600
  },

  "chaos.findings.ready": {
    "event":"chaos.findings.ready","timestamp":"iso8601",
    "items":[
      {"severity":"high","title":"Retry fırtınası p95’i 180ms artırdı","evidence":"latency spike + error_rate↑","component":"kb_api","suggestion":"exponential backoff jitter + circuit breaker threshold ayarı"},
      {"severity":"medium","title":"FeatureStore lag p95 220ms","evidence":"fsLagMsP95>threshold","component":"fsync","suggestion":"cache warm + nodelocal read"}
    ]
  },

  "chaos.remediation.plan.ready": {
    "event":"chaos.remediation.plan.ready","timestamp":"iso8601",
    "tasks":[
      {"id":"rem-1","owner":"platform","desc":"Gateway rate-limit adaptif (token bucket)","etaDays":5},
      {"id":"rem-2","owner":"search","desc":"Reranker p95 limitte degrade policy","etaDays":3}
    ]
  },

  "chaos.report.ready": {
    "event":"chaos.report.ready","timestamp":"iso8601",
    "path":"data/chaos/2025-09-16/net-latency-eu-api/report.md",
    "summary":"p95 +214ms (OK sınır içinde), err +0.6pp, SLO burn 2.2% • 2 bulgu, 2 remediation.",
    "hash":"sha256:..."
  },

  "chaos.card": {
    "event":"chaos.card","timestamp":"iso8601",
    "title":"Chaos Net Latency (EU) — steady aşama",
    "body":"p95 342ms • err 1.3% • SLO burn 2.2% • ilerleme %60.",
    "severity":"info","ttlSec":600
  },

  "chaos.alert": {
    "event":"chaos.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"abort_due_to_slo|abort_due_to_cost|rbac_denied|tool_failed|idem_duplicate|freeze_active|blast_radius_too_wide"
  },

  "chaos.metrics": {
    "event":"chaos.metrics","timestamp":"iso8601",
    "experiments":1,"passes":1,"aborts":0,
    "avgStageStartMs":420,"p95ObserveMs":9.2,
    "sloBreaches":0,"costHardBlocks":0,"blastRadiusViolations":0
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  safety:{
    freezeCheck:true,                   // L51: aktif freeze varsa koşma
    abortOnSloBreach:true,
    abortOnCostHard:true,
    maxBlastTrafficPct: 20,
    tenantsAllowlist:["sandbox","internal"],
    businessHours:{ start:"09:00", end:"18:00", allowRun:false },
    chaosBudgetMinPerWeek: 120,         // toplam dakika üst sınırı
    killSwitchFlag:"flags:chaos.killswitch"
  },

  sampling:{
    rampSchedule:"0→25→50→75→100",      // aşamalı etki
    window:"5m",                         // health snapshot penceresi
    minStableWindows:2
  },

  templates:{
    network:{ defaultLatencyMs:200, jitterMs:30, lossPct:0 },
    cpu:{ coresPct:80, durationSec:600 },
    memory:{ pct:60, leak:true },
    disk:{ iopsLimit:500, fioProfile:"randread" },
    dns:{ rcode:"SERVFAIL", delayMs:200 },
    broker:{ urpAdd:5, throttleMBps:10 },
    db:{ mode:"primary_kill|ro_fence|slow_queries" },
    fs:{ lagP95Ms:300, ttlExpireKeysPct:1.0 },
    rate_limit:{ http429Pct:10 },
    time_skew:{ offsetSec:120 },
    pod_kill:{ replicasPct:10 }
  },

  integrations:{
    freeze:"LIVIA-51",
    slo:"LIVIA-32",
    cost:"LIVIA-34",
    fsync:"LIVIA-46",
    mrf:"LIVIA-49",
    drills:"LIVIA-50",
    audit:"LIVIA-48",
    provenance:"LIVIA-38",
    lineage:"LIVIA-39",
    dist:"LIVIA-22"
  },

  reporting:{
    outputDir:"data/chaos/{YYYY-MM-DD}/{scenarioId}",
    mdFile:"report.md", htmlFile:"report.html",
    html:{ embedMiniCSS:true, chartsInlineSvg:true },
    include:{ timelines:true, slo_burn:true, deps_lag:true, findings:true }
  },

  rbacViews:{ observer:{ hideTargets:true, showOnlySummary:true } },

  idempotencyTtlSec: 3600
}

5) Deney Türleri & Ölçümler (özet)

Uygulama: p95 latency, error rate, availability, SLO burn, throughput.

Bağımlılıklar: DB lag/conns, broker URP, feature store lag/TTL, DNS latency/rcode.

Kaynaklar: CPU/memory/disk/IO; throttle/shed davranışı; throttle sonrası degrade policy.

Davranış: retry fırtınası, circuit breaker, backoff jitter, timeout bütçesi doğrulaması.

Maliyet: deney başına ek $ etkisi (trafik + reranker/model maliyeti).

6) Pipeline (Kompozisyon)

Plan: chaos.request veya template.request → katalog & şablonlardan plan üret; expKey ve ramp şeması hesapla

Guard: L51 freeze, L32 SLO, L34 cost, blast radius ve RBAC kontrolleri → chaos.guard.snapshot

Inject: seçilen araçla aşamaları uygula (netem/toxi, stress-ng, FIS, Kafka throttle, FS lag, DNS fault)

Observe: her 5m pencerede health snapshot; SLO burn/cost ihlali → auto abort

Score/Findings: sapmaları baz çizgiye göre analiz et; kök neden ipuçları (retry, queue depth, lag)

Remediate: görev listesi çıkar; L22 ile dağıt; L48 denetim paketine ekle

Report: md/html rapor + grafikleri yaz; card/alert/metrics yayımla

Link: tüm adımlar L38/L39’a append; L50 drill raporlarına referanslanabilir

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (chaos.request|template.request) → PLAN

PLAN → GUARD

GUARD → (ok) INJECT | (abort) DONE

INJECT → OBSERVE (ramp & steady pencereleri)

OBSERVE → (ok) NEXT_STAGE|COMPLETE | (breach) ABORT

COMPLETE/ABORT → SCORE → REPORT → EMIT → IDLE

Hata: ALERT; idem: aynı expKey yinelemesinde yan etki yok

8) Kenar Durumlar

Aktif Freeze: L51 state=frozen → freeze_active ve ABORT (yan etki yok).

Gerçek Incident: aktif incident.started → ABORT ve tüm etkiler geri alınır.

Blast Radius ihlali: trafik veya tenant kapsamı aşarsa → abort + alert.

Araç Hatası: Chaos Mesh/FIS çağrısı başarısız → yeniden dene (3×) → tool_failed.

Flaky SLO: tek pencere spike → EWMA ile yumuşat; 2 ardışık pencere olmadan abort yok.

Cost Hard Guard: maliyet sınırı aşıldı → ABORT + freeze önerisi.

FeatureStore Tutarsızlığı: L46 lag/ttl fail → deney partial ve zorunlu remediation.

Staging “time_skew”: üretimde devre dışı; yalnız staging.

Observer görünümü: hedeflerin kimlikleri gizli, yalnız özet verilir.

Idempotency: aynı expKey tekrarında yalnız kart/metrik güncellenir.

9) Telemetri
{
  "chaos.metrics": {
    "event":"chaos.metrics","timestamp":"iso8601",
    "experiments":1,"passes":1,"aborts":0,
    "p50PlanMs":10,"avgStageStartMs":420,"p95ObserveMs":9.2,
    "sloBreaches":0,"costHardBlocks":0,"blastRadiusViolations":0
  }
}

10) Dosya Yapısı (öneri)
services/livia/chaosExperimentDesigner.ts        # FSM + orchestrator
services/livia/lib/chaos/catalog.ts              # senaryo şablonları & kayıt
services/livia/lib/chaos/plan.ts                 # parametre → plan/ramp üretimi
services/livia/lib/chaos/guard.ts                # L51/L32/L34/RBAC/blast radius kapıları
services/livia/lib/chaos/inject.ts               # chaosmesh|litmus|gremlin|FIS|toxiproxy|netem köprüleri
services/livia/lib/chaos/observe.ts              # health snapshots + EWMA + abort kuralları
services/livia/lib/chaos/score.ts                # sapma analizi & bulgu/öneri
services/livia/lib/chaos/report.ts               # md/html + grafik (inline SVG)
services/livia/lib/bridges.ts                    # L21/L22/L26/L32/L34/L38/L39/L46/L48/L49/L50/L51
services/livia/state/chaosStore.ts               # idem index + koşu geçmişi + chaos budget
services/livia/__tests__/chaosExperimentDesigner.test.ts
cfg/livia.chaos.yaml

11) Test İskeleti (Jest/Vitest)

Plan: template’ten plan üretildi; ramp 0→25→50→75→100

Guard: aktif freeze → ABORT; normalde INJECT

Inject/Observe: steady aşamada p95 +200ms, err +0.5pp → ok (eşikler içinde)

SLO breach: 2 ardışık pencere ihlal → ABORT + alert

Cost hard: maliyet sınırı aşımı → ABORT + card error

Blast radius: tenant dışı hedef — reject

Remediation: 2 bulgu + görev planı üretildi

Idempotency: aynı expKey yinelemesi yan etkisiz

Report: md/html yazıldı; L22 dağıtıldı; L38/L48’e eklendi

12) Örnek Akış (kısa)

02:55 PLAN/GUARD: freeze yok; SLO & cost bütçeleri uygun; blast radius ≤15%

03:00 INJECT: netem 150→300ms latency ramp; synthetic 80 rps

03:05 OBSERVE: p95 342ms, err 1.3%, SLO burn 2.2% (OK)

03:20 COMPLETE: SCORE + FINDINGS (retry jitter, FS lag) → REMEDIATION (2 görev)

03:25 REPORT + kart/alert/metrics; L48 denetim paketine eklendi.

13) SLO

p95 plan < 30 ms

false abort ≤ %1; missed critical breach ≤ %1

chaos budget ihlali = 0

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-53 · costAnomalyGuard.ts — Geniş Prompt v3 (+ Otomatik Degrade/Throttle, Simülasyon, Bütçe Koruması)

Amaç:
Gerçek zamanlı maliyet anomalilerini (ani sıçrama, sürünen artış, konfig değişimi sonrası beklenmeyen yük) tespit et → teşhis et → aksiyon planı uygula → raporla. Bileşenler: model/inference, reranker, vektör indeks/KB arama, feature store, veri aktarım/egress, depolama/I/O, broker, DB, genel bulut kaynakları.
Uygulama adımları: throttle/shed, degrade merdiveni (ör. topK↓, reranker off/ce-small, quant=int8, batch↑, cache↑, precision↓), ucuz profile yönlendirme, A/B-canary (L45) ile kontrollü geçiş, geri alma (rollback).
İyileştirme: sebep analizi (konfig, trafik, hata oranı/retry, fiyat tablosu değişimi), tasarruf raporu ve öneriler.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.
Entegrasyonlar: SLO (L32), Cost yönetimi (L34), KB Tuning (L47), Freeze (L51), Chaos (L52), Audit (L48), Failover/DR (L49/L50), FSync (L46).

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; gün penceresi 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: finance|ops|mlops|policy tam, observer salt okur

Gizlilik: PII yok; yalnız maliyet metrikleri; operatör kimliği L21 ile hash

İdempotency: costGuardKey = service + component + scope + windowISO + ruleId

Observability: spans (cost.collect,cost.detect,cost.rca,cost.decide,cost.apply,cost.report) + metrics

Uyum: tüm kararlar L26 etik + L38 WORM append; L39 lineage kenarları

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "price.table.updated": {
    "event":"price.table.updated","timestamp":"iso8601",
    "provider":"openai|bedrock|vertex|faiss|redis|s3|kafka|pg",
    "items":[
      {"resource":"inference:gpt-xyz","unit":"1k_tokens","usd":0.9},
      {"resource":"kb:hnsw_mem","unit":"GB_hour","usd":0.018}
    ],
    "effectiveAt":"iso8601"
  },

  "budget.policy.updated": {
    "event":"budget.policy.updated","timestamp":"iso8601",
    "serviceId":"kb_api",
    "window":"1h|1d","currency":"USD",
    "limits":{
      "inference_usd_per_1k_req": 0.8,
      "search_stack_usd_per_1k_req": 0.5,
      "total_usd_per_hour": 60
    },
    "hardGuards":{"total_usd_per_hour": 80}
  },

  "cost.usage.sample": {
    "event":"cost.usage.sample","timestamp":"iso8601",
    "serviceId":"kb_api","component":"inference|search|fsync|broker|db|egress",
    "unitCost":{"name":"inference:gpt-xyz","qty":2.1,"usd":0.00189},
    "request":{"id":"req#7f9a12","variant":"A|B","profile":"tr"},
    "aux":{"topK":100,"reranker":"ce-large","dim":768,"quant":"fp32"}
  },

  "cost.usage.rollup": {
    "event":"cost.usage.rollup","timestamp":"iso8601",
    "serviceId":"kb_api","window":"5m",
    "per1kReq":{"inference":0.92,"search":0.41,"total":1.45},
    "perHourUSD":{"total":64.2,"inference":40.1,"search":18.6,"egress":5.5},
    "reqRateRps": 35.4
  },

  "config.change.applied": {
    "event":"config.change.applied","timestamp":"iso8601",
    "serviceId":"kb_api",
    "change":{"key":"kb.topK","from":50,"to":120},
    "by":"op#28c1","reason":"quality_uplift"
  },

  "kb.tuning.promoted": {
    "event":"kb.tuning.promoted","timestamp":"iso8601",
    "namespace":"kb_default","profile":"tr",
    "to":"cand#ivf-pq-384-nprobe16-k100-a0.2-rerank:none"
  },

  "slo.guard.triggered|slo.guard.recovered": {
    "event":"slo.guard.triggered","timestamp":"iso8601",
    "serviceId":"kb_api","slo":"latency_p95","severity":"high"
  }
}

3) Çıktılar (Out)
{
  "cost.guard.triggered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "serviceId":"kb_api","component":"inference|search|egress|total",
    "window":"5m|1h","severity":"warn|high|critical",
    "signal":{"kind":"spike|drift|step_change|chg_point","value":1.45,"baseline":0.92,"upliftPct":"+57%"},
    "ruleId":"R-per1k-total>1.2","budget":{"limit":1.2,"hard":1.5},
    "rca":{"suspects":["kb.topK↑","reranker:ce-large","A/B:B variant"],"confidence":0.71}
  },

  "cost.action.plan.ready": {
    "event":"cost.action.plan.ready","timestamp":"iso8601",
    "serviceId":"kb_api","component":"search",
    "ladder":[
      {"step":1,"action":"topK↓","to":60,"expectedSavePct":22},
      {"step":2,"action":"reranker→ce-small","expectedSavePct":11},
      {"step":3,"action":"hybridAlpha→0.2","expectedSavePct":6},
      {"step":4,"action":"cache.ttl↑","toSec":900,"expectedSavePct":5}
    ],
    "canary":{"trafficPct":10,"durationMin":15},
    "rollbackOn":{"slo_breach":true,"quality_drop_ndcg10_pct":-3.0}
  },

  "cost.action.applied": {
    "event":"cost.action.applied","timestamp":"iso8601",
    "serviceId":"kb_api","step":1,"action":"topK↓","to":60,
    "via":"LIVIA-35|LIVIA-47","status":"ok"
  },

  "cost.guard.recovered": {
    "event":"cost.guard.recovered","timestamp":"iso8601",
    "serviceId":"kb_api","component":"total",
    "window":"1h","afterActions":["topK↓","reranker→ce-small"],"recoveryDelayMin":22
  },

  "cost.savings.report.ready": {
    "event":"cost.savings.report.ready","timestamp":"iso8601",
    "path":"data/cost/2025-09-16/kb_api/report.md",
    "summary":"TopK 100→60 ve ce-small ile saatlik maliyet -%34; kalite (NDCG@10) -%1.2; p95 +12ms.",
    "hash":"sha256:..."
  },

  "cost.card": {
    "event":"cost.card","timestamp":"iso8601",
    "title":"Maliyet Guard — kb_api (total +57%/5m)",
    "body":"Ladder step#1 uygulandı (topK 60). Canary %10/15dk.",
    "severity":"warn","ttlSec":600
  },

  "cost.alert": {
    "event":"cost.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"hard_guard_breach|price_table_change|dq_gap|idem_duplicate|rbac_denied|apply_failed|rollback|freeze_active"
  },

  "cost.metrics": {
    "event":"cost.metrics","timestamp":"iso8601",
    "detections":3,"actionsApplied":2,"rollbacks":0,
    "avgDetectMs":28,"p95DetectMs":65,
    "avgSavingsPct":26.4,"hoursToRecoverP50":0.4
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul", currency:"USD" },

  windows:{ detect:"5m", budget:"1h", report:"1d" },

  thresholds:{
    per1k:{ total:{ warn:1.2, high:1.4, critical:1.6 }, inference:{ warn:0.7, high:0.9 } },
    perHourUSD:{ total:{ warn:60, high:70, critical:80 } },
    changePoint:{ z:3.0, minConsecutive:2 },
    driftEWMA:{ alpha:0.2, warnPct:15, highPct:30 },
    hardGuard:{ enforce:true }                 // aşıldığında degrade merdiveni atlanıp hızlı aksiyon
  },

  anomalyDetectors:{
    methods:["EWMA","CUSUM","IQR","STL+CP"],  // seçilebilir
    seasonality:{ weekly:true, businessHours:true },
    minSamples:24
  },

  budgetPolicy:{
    respectPriceTableEffectiveAt:true,
    currency:"USD",
    fx:{ enable:false }                        // Çoklu para birimi için genişletilebilir
  },

  degradeLadder:{
    search:[
      {"action":"topK_dec","bounds":[10,200],"step":20},
      {"action":"reranker_switch","order":["ce-large","ce-small","none"]},
      {"action":"hybridAlpha_dec","step":0.1,"floor":0.1},
      {"action":"cache_ttl_inc","maxSec":1800},
      {"action":"quant_switch","order":["fp32","fp16","int8"]}
    ],
    inference:[
      {"action":"model_fallback","order":["gpt-xl","gpt-l","gpt-m"]},
      {"action":"precision_dec","order":["fp16","int8"]},
      {"action":"batch_inc","ceiling":64}
    ],
    fsync:[ {"action":"read_local_cache_on","expectedSavePct":8} ]
  },

  canary:{ trafficPct:10, durationMin:15, eval:{ slo:"latency_p95", quality:"NDCG@10", maxDropPct:3 } },

  rca:{
    features:["topK","reranker","dim","quant","variant","traffic","price_change","retry_rate","egress_mb"],
    attribution:"shaplike"                     // basit katkı hesaplayıcı
  },

  enforcement:{
    viaFlags:"LIVIA-35",
    viaTuner:"LIVIA-47",
    viaGateway:"gateway",
    freezeHook:"LIVIA-51"                      // aktif freeze varsa yalnız simülasyon
  },

  reporting:{
    outputDir:"data/cost/{YYYY-MM-DD}/{serviceId}",
    mdFile:"report.md", htmlFile:"report.html",
    html:{ embedMiniCSS:true, chartsInlineSvg:true },
    include:{ ladders:true, savings:true, rca:true, timelines:true }
  },

  rbacViews:{ observer:{ hideRCAWeights:true, showOnlySummary:true } },

  idempotencyTtlSec: 3600
}

5) Tespit & Teşhis (özet)

Sinyaller: per1kReq maliyeti, perHourUSD, komponent bazlı (inference/search/egress).

Anomali: EWMA sapma, CUSUM artış, IQR outlier, change-point (konfig/fiyat değişimi sonrası).

RCA: yakın zamanda olan config.change.applied, kb.tuning.promoted, price.table.updated, retry_rate↑, egress_mb↑ ve A/B varyantı ile ilişkilendir; katkı skoru üret.

Kalite & SLO bağlamı: kalite metriği (örn. NDCG@10) L47’den, SLO p95 L32’den; degrade adımlarında kalite düşüş eşiği korunur.

6) Pipeline (Kompozisyon)

Collect: cost.usage.sample/rollup + fiyat tablosu + bütçe politikaları alınır.

Detect: 5m pencerede anomali; 1h pencere için bütçe ihlali kontrolü.

RCA: katkı analizi → şüpheli faktör seti ve güven skoru.

Decide: hardGuard → hızlı adım; değilse degrade merdiveni + canary ile kademeli uygula.

Apply: L35/L47/gateway üzerinden parametre/rota değişiklikleri; freeze varsa yalnız simülasyon.

Evaluate: canary penceresi → kalite/SLO ve maliyet trendi; rollback veya promote.

Report/Emit: card/alert/metrics + tasarruf raporu (md/html); L22 ile dağıt.

Index: tüm adımlar L38 append; L39 lineage; L48 audit paketine girer.

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (cost.usage.rollup|price.table.updated) → DETECT

DETECT → (anomaly) RCA → DECIDE → APPLY → EVALUATE → REPORT → IDLE

RECOVER: maliyet normale döndüğünde cost.guard.recovered → REPORT

Hata: ALERT; idem: aynı costGuardKey yinelemesinde yan etki yok (yalnız kart/metrik güncellenir)

8) Kenar Durumlar

Fiyat Tablosu Değişimi: effectiveAt ile geçmiş pencereler yeniden yorumlanır (yanlış pozitif azalt).

Sezonsallık: hafta içi/sonu ve mesai saatleri farklı baz çizgileri; STL ile trend ayrıştır.

A/B Test: varyant B pahalı ama kalite ↑; min NDCG uplift karşılanıyorsa kabul edilebilir.

Failover/DR: L49/L50 sırasında egress/broker maliyeti spike; freezeHook aktifse yalnız izleme.

Eksik Veri: rollup eksik → dq_gap uyarısı, karar ertelenir.

Ölçüm Kayması: token sayacı/KB hesaplama değişmişse step_change ama config.change.applied ile eşler.

Observer görünümü: RCA ayrıntıları gizli; yalnız özet ve öneriler.

Idempotency: aynı pencere/policy tekrarında merdiven ikinci kez uygulanmaz.

9) Telemetri
{
  "cost.metrics": {
    "event":"cost.metrics","timestamp":"iso8601",
    "detections":3,"actionsApplied":2,"rollbacks":0,
    "avgDetectMs":28,"p95DetectMs":65,
    "avgSavingsPct":26.4,"hoursToRecoverP50":0.4,
    "rcaConfidenceAvg":0.68
  }
}

10) Dosya Yapısı (öneri)
services/livia/costAnomalyGuard.ts                 # FSM + orchestrator
services/livia/lib/cost/collect.ts                 # rollup & price table ingest
services/livia/lib/cost/detect.ts                  # EWMA/CUSUM/IQR/STL+CP
services/livia/lib/cost/rca.ts                     # katkı analizi (shaplike)
services/livia/lib/cost/decide.ts                  # merdiven & canary planlayıcı
services/livia/lib/cost/apply.ts                   # L35/L47/gateway köprüleri
services/livia/lib/cost/report.ts                  # md/html + grafikler (inline SVG)
services/livia/lib/bridges.ts                      # L22/L26/L32/L34/L35/L38/L39/L45/L46/L47/L48/L49/L50/L51/L52
services/livia/state/costStore.ts                  # idem index + pencereler + ladders
services/livia/__tests__/costAnomalyGuard.test.ts
cfg/livia.cost.guard.yaml

11) Test İskeleti (Jest/Vitest)

Spike: per1k total 0.92→1.45 (+57%) → cost.guard.triggered(high)

Hard guard: saatlik > $80 → merdiven atla, hızlı model_fallback/reranker off

Canary: %10/15dk → kalite düşüş ≤ %3, SLO ok → promote; aksi → rollback

RCA: topK↑ + reranker=ce-large şüpheli; güven ≥ 0.6

Price change: fiyat yükseldi → price_table_change; yanlış pozitif yok

Freeze aktif: L51 frozen → freeze_active, apply yok, yalnız simulate

Failover etkisi: egress ↑; failover bitince recovered

Idempotency: aynı costGuardKey tekrarı yan etkisiz

Report: md/html yazıldı; kart/alert/metrics; L38/L48 bağlandı

12) Örnek Akış (kısa)

11:05 cost.usage.rollup(5m) total/1k = 1.45 (baz 0.92) → DETECT

RCA: kb.topK=100, reranker=ce-large, varyant B; güven 0.71

DECIDE: merdiven planı; canary %10/15dk

11:25 EVALUATE: per1k 0.98, NDCG@10 -1.2%, p95 +12ms → promote

11:30 RECOVER: saatlik toplam $42/h → cost.guard.recovered; rapor + tasarruf özeti yayınlandı.

13) SLO

p95 detect < 70 ms (5m pencere kapatıldıktan sonra)

yanlış pozitif ≤ %2, kaçırılan kritik ≤ %1

recovery to budget p50 ≤ 45 dk (canary→promote ile)

idempotent çakışma ≈ 0
______________________________________________________________________________________________
Şunu dedin:
devam et
ChatGPT:
LIVIA-54 · trafficShaper.ts — Geniş Prompt v3 (+ SLA Katmanları, PID+EWMA Kontrol, Adil Paylaşım, Simülasyon)

Amaç:
Sistem yükü ve maliyet baskısı altında istek kabul/önceliklendirme/şekillendirme/shed kararlarını gerçek zamanlı yönetmek. SLO (p95 gecikme, hata oranı) ve bütçe (L34) hedeflerini koruyarak SLA katmanları (gold/silver/bronze), tenant ve işlev (search/answer/infer/ingest) bazlı politikaları uygula. Oran sınırlama (token/leaky bucket), eşzamanlılık limitleme, kuyruklama (WFQ/CBWFQ), önceliklendirme + yaşlandırma (aging), backpressure, graceful shedding, deadline-aware yürütme, önişlem degrade (örn. topK↓, reranker off, maxTokens↓) ve A/B trafikleri için bağımsız kotalar. Gateway/mesh (L35), Failover (L49), Freeze (L51), Cost Guard (L53), KB Tuning (L47), Canary (L45) ile entegre.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: ops|platform|policy tam, observer salt okur

Gizlilik: PII yok; aktörler L21 ile hashlenir

İdempotency: shapeKey = windowISO + policyHash + scope + tier + path

Observability: spans (shape.classify,shape.decide,shape.enqueue,shape.run,shape.drop) + metrics

Uyumluluk: kritik politika değişimi L26 etik/WORM (L38) append; kararlar L39 lineage’a bağlanır

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "shape.policy.updated": {
    "event":"shape.policy.updated","timestamp":"iso8601",
    "policyId":"traffic-v1",
    "tiers":[
      {"name":"gold","rpsMax":120,"burst":240,"concurrencyMax":64,"queueMsMax":250,"deadlineMs":1200,
       "wfqWeight":8,"dropPolicy":"taildrop|lifo-shed|headroom-shed","degrade":{"kb.topKMax":80,"reranker":"ce-small","maxTokens":800}},
      {"name":"silver","rpsMax":80,"burst":160,"concurrencyMax":40,"queueMsMax":350,"deadlineMs":1400,"wfqWeight":4,
       "degrade":{"kb.topKMax":60,"reranker":"none","maxTokens":600}},
      {"name":"bronze","rpsMax":40,"burst":80,"concurrencyMax":16,"queueMsMax":400,"deadlineMs":1600,"wfqWeight":1,
       "degrade":{"kb.topKMax":40,"reranker":"none","maxTokens":400}}
    ],
    "algorithms":{"rate":"token_bucket","queue":"wfq","scheduler":"edf|cbwfq","controller":"pid+ewma"},
    "priorityOrder":["incident|runbook","user:paying","user:trial","batch"],
    "fairness":{"tenantMinSharePct":5,"maxSharePctPerTenant":60,"agingSec":45}
  },

  "shape.target.updated": {
    "event":"shape.target.updated","timestamp":"iso8601",
    "serviceId":"kb_api",
    "targets":{"latencyP95Ms":250,"errorRatePctMax":1.0,"budgetUsdPerHour":60}
  },

  "request.arrived": {
    "event":"request.arrived","timestamp":"iso8601",
    "id":"req#7f9a12",
    "svc":"kb_api","path":"/search","method":"POST",
    "slaTier":"gold|silver|bronze",
    "tenant":"t#acme","subject":"user#f0a1",
    "variant":"A|B","importance":"interactive|background|batch",
    "hints":{"deadlineMs":900,"maxTokens":900,"kb.topK":100,"reranker":"ce-large"}
  },

  "shape.signal.telemetry": {
    "event":"shape.signal.telemetry","timestamp":"iso8601",
    "window":"1m",
    "svc":"kb_api","path":"/search",
    "latencyP95Ms":312,"latencyP50Ms":118,"errPct":1.4,"queueDepth":73,"activeConcurrency":58,"rps":92
  },

  "slo.guard.triggered|slo.guard.recovered": {
    "event":"slo.guard.triggered","timestamp":"iso8601",
    "serviceId":"kb_api","slo":"latency_p95","severity":"high","burnPct":6.4"
  },

  "cost.guard.triggered|cost.guard.recovered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "component":"inference|search_stack|total","severity":"high"
  },

  "mrf.state.update": {
    "event":"mrf.state.update","timestamp":"iso8601",
    "phase":"execute|stabilize","fromRegion":"eu-central","toRegion":"us-east"
  },

  "freeze.state.changed": {
    "event":"freeze.state.changed","timestamp":"iso8601",
    "state":"frozen|thawed","scope":"global|service:kb_api","reason":"slo|mrf|drill|calendar"
  }
}

3) Çıktılar (Out)
{
  "shape.admission.decision": {
    "event":"shape.admission.decision","timestamp":"iso8601",
    "id":"req#7f9a12","svc":"kb_api","tier":"gold","tenant":"t#acme",
    "decision":"admit|queue|shed","queuePos":3,"queueEtaMs":180,
    "appliedDegrade":{"kb.topK":80,"reranker":"ce-small","maxTokens":800},
    "rationale":"pid_control:over_target_p95; fairness:tenant_min_share"
  },

  "shape.rate.updated": {
    "event":"shape.rate.updated","timestamp":"iso8601",
    "svc":"kb_api","path":"/search",
    "rpsTarget":76,"burst":152,"concurrencyLimit":48,
    "controller":{"p95TargetMs":250,"p95ObservedMs":312,"pid":{"p":0.6,"i":0.12,"d":0.04}}
  },

  "shape.queue.snapshot": {
    "event":"shape.queue.snapshot","timestamp":"iso8601",
    "tiers":{"gold":12,"silver":38,"bronze":23},
    "tenants":[["t#acme",22],["t#beta",8]],
    "drops":{"gold":0,"silver":4,"bronze":11}
  },

  "shape.shed.event": {
    "event":"shape.shed.event","timestamp":"iso8601",
    "id":"req#7f9b00","tier":"bronze","reason":"deadline_violation|queue_overflow|budget_guard",
    "policy":"graceful","retryAfterMs":600,"advice":{"use":"background","degrade":"kb.topK≤30"}
  },

  "shape.apply.toGateway": {
    "event":"shape.apply.toGateway","timestamp":"iso8601",
    "via":"LIVIA-35|envoy|kong",
    "rules":[
      {"path":"/search","rps":76,"burst":152,"concurrency":48,"priority":{"gold":8,"silver":4,"bronze":1}},
      {"path":"/answer","rps":40,"burst":80,"concurrency":24}
    ],
    "status":"ok"
  },

  "shape.card": {
    "event":"shape.card","timestamp":"iso8601",
    "title":"Traffic Shaper Aktif — kb_api /search",
    "body":"p95 312ms>250 hedefi; rps 76, conc 48; gold öncelik + min-tenant-paylaşım açıldı.",
    "severity":"warn","ttlSec":600
  },

  "shape.alert": {
    "event":"shape.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|rbac_denied|apply_failed|queue_starvation|tenant_quota_violation|deadline_spike|mrf_derate|freeze_active"
  },

  "shape.metrics": {
    "event":"shape.metrics","timestamp":"iso8601",
    "admitted":1240,"queued":860,"shed":93,"avgQueueMs":140,
    "p95BeforeMs":318,"p95AfterMs":246,"errPctBefore":1.4,"errPctAfter":0.9,
    "budgetUsdPerHourBefore":68.2,"budgetUsdPerHourAfter":55.7
  },

  "shape.report.ready": {
    "event":"shape.report.ready","timestamp":"iso8601",
    "path":"data/shape/2025-09-16/kb_api/search/report.md",
    "summary":"PID+EWMA ile p95 318→246ms; bütçe 68.2→55.7 $/h; gold SLA kayıpsız; bronze %6 graceful shed.",
    "hash":"sha256:..."
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  tiers:{
    gold:{ rpsMax:120, burst:240, concurrencyMax:64, wfqWeight:8, queueMsMax:250, deadlineMs:1200,
           degrade:{ "kb.topKMax":80, "reranker":"ce-small", "maxTokens":800 } },
    silver:{ rpsMax:80,  burst:160, concurrencyMax:40, wfqWeight:4, queueMsMax:350, deadlineMs:1400,
           degrade:{ "kb.topKMax":60, "reranker":"none", "maxTokens":600 } },
    bronze:{ rpsMax:40,  burst:80,  concurrencyMax:16, wfqWeight:1, queueMsMax:400, deadlineMs:1600,
           degrade:{ "kb.topKMax":40, "reranker":"none", "maxTokens":400 } }
  },

  algorithms:{
    rateLimiter:"token_bucket",                 // token_bucket|leaky_bucket
    queueDiscipline:"wfq",                      // wfq|cbwfq|prio
    scheduler:"edf",                            // edf (deadline-aware)
    controller:{ type:"pid+ewma",
                 pid:{ kp:0.9, ki:0.15, kd:0.05, sampleSec:5, clamp:{ rps:[10,200], conc:[8,128] } },
                 ewmaAlpha:0.2 }
  },

  fairness:{
    tenantMinSharePct:5, maxSharePctPerTenant:60, agingSec:45, starvationGuard:true
  },

  quotas:{
    perTenant:{ defaultRps:20, burst:40 },
    perSubject:{ defaultRps:6, burst:12 },
    abVariant:{ A:{rpsSharePct:50}, B:{rpsSharePct:50} }
  },

  degradePolicies:{
    when:{ queueDepth:{warn:50, breach:100}, p95Ms:{warn:250, breach:350}, errPct:{warn:1.0, breach:2.0} },
    steps:[
      { action:"kb.topK_dec", tiers:["bronze","silver"], step:20, floor:30 },
      { action:"reranker_switch", order:["ce-large","ce-small","none"] },
      { action:"maxTokens_dec", step:100, floor:300 },
      { action:"queue_reject_low", tiers:["bronze"], ratio:0.1 } // graceful shed
    ],
    qualityGuard:{ ndcg10DropMaxPct:3.0 }
  },

  deadlines:{ defaultMs:1200, strictPaths:{ "/answer":900 } },

  integration:{
    gateway:"LIVIA-35", kbTune:"LIVIA-47", slo:"LIVIA-32", cost:"LIVIA-34", costGuard:"LIVIA-53",
    canary:"LIVIA-45", failover:"LIVIA-49", freeze:"LIVIA-51", drills:"LIVIA-50",
    provenance:"LIVIA-38", lineage:"LIVIA-39", audit:"LIVIA-48", dist:"LIVIA-22"
  },

  simulation:{
    enable:true, whatIf:{ rps:[-30, -10, +10, +30], mix:[["gold",60],["silver",30],["bronze",10]] }
  },

  rbacViews:{ observer:{ hideTenantIds:true, showOnlySummary:true } },

  idempotencyTtlSec: 1800
}

5) Karar Mantığı (özet)

Sınıflandırma: her istek → tier, tenant, importance, path çıkar; deadline = min(hint, policy).

Kontrol Döngüsü: p95 hedefi için PID + EWMA: p95↑ → rpsTarget↓, concurrency↓, queue cap↓; p95↓ → yavaş slow-start.

Admisyon: token varsa admit, değilse queue; queueMs>queueMsMax ∨ deadline<eta ise graceful shed.

Öncelik & Adalet: WFQ/CBWFQ ile tierWeight; tenant min pay garantisi, max share sınırı; aging ile açlık önlenir.

Degrade: uyarı/breach eşiklerinde kademeli degrade + quality guard (L47 NDCG).

Bütçe/SLO bağlamı: L53 (maliyet) veya L32 (SLO) ihlali varsa hedeflerin önemi artar; PID sınırları sıkılır.

Failover/DR: L49/L50 sırasında rps hedefi düşürülür, deadline gevşetilebilir; bölge başına sınırlar güncellenir.

Freeze: L51 frozen → policy değişikliği yazılmaz (yalnız simülasyon/öneri).

6) Pipeline (Kompozisyon)

Load policy/targets (shape.policy.updated, shape.target.updated)

Classify & Token Check (request.arrived) → admit/queue/shed + opsiyonel degrade setleri

Control (shape.signal.telemetry) → PID+EWMA ile rpsTarget, concurrency, queue caps güncelle

Apply (gateway/mesh) → shape.apply.toGateway

Fairness → WFQ/CBWFQ + tenant kotaları; aging ile terfi

Emit → decision/queue/shed + card/alert/metrics/report

Link & Audit → L38/L39, L48 paketine rapor

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (policy.updated|target.updated) → READY

READY → (request.arrived) ADMISSION → (admit) RUN | (queue) QUEUE | (shed) DONE

QUEUE → (ETA≤deadline ∧ token) RUN | (queueMs>max ∨ deadline<ETA) SHED

RUN → (complete) DONE

CONTROL (yan kanal): signal.telemetry → PID param → APPLY

APPLY → kural/limitleri gateway’e uygula → READY

Hata: ALERT; idem: aynı shapeKey yinelemesinde yan etki yok (yalnız snapshot/karte güncellenir)

8) Kenar Durumlar

Queue Starvation: agingSec ile düşük tier istekleri terfi; maxSharePctPerTenant ile tek tenant işgalini engelle.

Burst Fırtınası: burst bittiğinde token refill yumuşak; slow-start ile toparlan.

Deadline Spike: kısa süreli piklerde EWMA yumuşat; iki pencere üst üste gelmeden sert shed yok.

Long-running İşler: ETA>deadline → erken shed; uzun çalışan yürütmelerde işbirlikçi iptal (cancellation) sinyali.

A/B Adaleti: varyantlar için rps payı korunur; varyant baskınlaşıyorsa cap uygulanır.

Degrade–Quality Çatışması: NDCG düşüşü > %3 → degrade geri sar; canary (L45) ile kademeli uygula.

Failover Bölge Kaybı: etkin bölge kapasitesi düşerse rpsTarget otomatik ölçeklenir; mrf_derate uyarısı.

Freeze Aktif: policy yazımı blok, yalnız simülasyon; uyarı freeze_active.

Observer: tenant/subject kimlikleri maskeli; yalnız özet verilir.

9) Telemetri
{
  "shape.metrics": {
    "event":"shape.metrics","timestamp":"iso8601",
    "admitted":1240,"queued":860,"shed":93,
    "avgQueueMs":140,"p95BeforeMs":318,"p95AfterMs":246,
    "errPctBefore":1.4,"errPctAfter":0.9,
    "budgetUsdPerHourBefore":68.2,"budgetUsdPerHourAfter":55.7,
    "goldLossPct":0.0,"silverLossPct":1.8,"bronzeLossPct":6.0
  }
}

10) Dosya Yapısı (öneri)
services/livia/trafficShaper.ts                     # FSM + orchestrator
services/livia/lib/shape/policy.ts                  # Zod şema + kural motoru
services/livia/lib/shape/controller.ts              # PID+EWMA hedef ayarlayıcı
services/livia/lib/shape/ratelimit.ts               # token/leaky bucket
services/livia/lib/shape/queue.ts                   # WFQ/CBWFQ + aging + fairness
services/livia/lib/shape/admission.ts               # admit/queue/shed + degrade
services/livia/lib/shape/apply.ts                   # L35/envoy/kong kural uygulayıcı
services/livia/lib/shape/report.ts                  # md/html + inline SVG
services/livia/lib/bridges.ts                       # L22/L26/L32/L34/L35/L38/L39/L45/L47/L48/L49/L50/L51/L53
services/livia/state/shapeStore.ts                  # idem index + ölçümler + anlık durum
services/livia/__tests__/trafficShaper.test.ts
cfg/livia.shape.yaml

11) Test İskeleti (Jest/Vitest)

PID Kontrol: p95 318ms→ hedef 250ms; rpsTarget↓, concurrency↓, p95 246ms

WFQ Adalet: gold %0 kayıp, bronze %≤6 shed; tenant min pay korunur

Deadline-aware: ETA>deadline → erken shed; uygun istekler admit

Degrade: kuyruk derinliği 100 → topK↓, reranker ce-small/none uygulanır, kalite düşüş ≤ %3

Cost Guard: L53 tetiklenince rps/conc hedefleri sıkılaşır; bütçe ≤ hedef

Failover: L49 execute → mrf_derate ve rps düşürme uygulanır

Freeze: L51 frozen → gateway’e kalıcı kural yazılmaz; simülasyon sonucu dönülür

Idempotency: aynı shapeKey yinelenince yan etki yok

Rapor: md/html üretildi; L22 dağıtıldı; L38/L48’e eklendi

12) Örnek Akış (kısa)

13:00 p95 318ms, err 1.4%, rps 92 → PID rpsTarget=76, concurrency=48

ADMISSION: gold admit/queue ≤250ms, silver sırada, bronze bazı istekler graceful shed

DEGRADE: topK 100→80; reranker ce-large→ce-small; tokens 900→800

13:10 p95 246ms, err 0.9%, bütçe 55.7$/h → shape.report.ready, kart warn→info.

13) SLO

Karar gecikmesi p95 < 3 ms (admission yolunda)

Kontrol tepki süresi ≤ 2 pencere (≤10 sn)

Gold kayıp ≤ %0.1, Bronze shed ≤ %10 (konfig’e bağlı)

SLO iyileşmesi: p95 düşüşü ≥ %15 (aşırı yükte)

idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-55 · queryOrchestrator.ts — Geniş Prompt v3 (+ Latency/Cost-Aware Planner, Step-Degrade, Cache/Memoization)

Amaç:
Kullanıcı sorgularını çok-aşamalı akış ile yönet: parse → intent/route → retrieve (hybrid) → rerank → synthesize/reason → tool-use → finalize → stream. SLO (L32) ve maliyet (L34/L53) hedeflerine göre plan seçimi (latency/cost aware), adım-degradasyon (L54 ile uyumlu), cache/memoization, A/B & canary (L45), KB tuning (L47) ile kalite (NDCG/MRR/CTR) koruması.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: app|mlops|policy tam; observer salt-okur

Gizlilik: PII yok; aktörler L21 ile hash; prompt/answer redaksiyon politikası

İdempotency: qKey = hash(query + profile + scope + planId + topK)

Observability: spans (qo.parse|route|plan|retrieve|rerank|reason|tool|finalize|stream) + breadcrumbs; OTel attributes (lat/cost/toks)

Uyumluluk: karar ve izlenceler L38 WORM append + L39 lineage; freeze (L51) durumunda yalnız güvenli degrade

2) Girdiler (In) — Zod .strict() örnekleri
{
  "query.request": {
    "event":"query.request","timestamp":"iso8601",
    "id":"q#7f9a12",
    "text":"Avalanche staking APR nedir?",
    "lang":"tr|en|auto","profile":"tr","tenant":"t#acme",
    "mode":"search|answer|chat|tooling",
    "hints":{"deadlineMs":1200,"costHardUsd":0.02,"stream":true,"variant":"A|B"},
    "context":{"userTier":"gold|silver|bronze","sessionId":"sess#abc"}
  },

  "kb.route.policy": {
    "event":"kb.route.policy","timestamp":"iso8601",
    "namespace":"kb_default","strategies":["hybrid","bm25","vector","gen-search"],
    "hybrid":{"alpha":0.35,"bm25TopK":80,"vecTopK":80,"merge":"RRf|BM25→CE|CE→BM25"}
  },

  "qo.plan.catalog.registered": {
    "event":"qo.plan.catalog.registered","timestamp":"iso8601",
    "planId":"P-hybrid-fast",
    "steps":["parse","expand","retrieve","rerank","synthesize","finalize"],
    "latencyBudgetMs":900,"costBudgetUsd":0.015,
    "defaults":{"topK":60,"reranker":"ce-small","reasoner":"gpt-m","maxTokens":700}
  },

  "kb.tuning.profile": {
    "event":"kb.tuning.profile","timestamp":"iso8601",
    "profileId":"kb_default:tr",
    "index":{"type":"ivf-pq","dim":384,"nprobe":16,"quant":"int8"},
    "rerankers":["ce-large","ce-small","none"],
    "synthModels":["gpt-xl","gpt-l","gpt-m"]
  },

  "traffic.shape.hint": {
    "event":"traffic.shape.hint","timestamp":"iso8601",
    "tier":"gold|silver|bronze","rpsTarget":76,"deadlineMs":1200
  },

  "slo.guard.triggered|slo.guard.recovered": {
    "event":"slo.guard.triggered","timestamp":"iso8601",
    "serviceId":"kb_api","slo":"latency_p95","severity":"high","burnPct":6.2
  },

  "cost.guard.triggered|cost.guard.recovered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "component":"inference|search_stack|total","severity":"high"
  },

  "freeze.state.changed": {
    "event":"freeze.state.changed","timestamp":"iso8601",
    "state":"frozen|thawed","scope":"service:kb_api","reason":"slo|mrf|drill|calendar"
  }
}

3) Çıktılar (Out)
{
  "qo.plan.ready": {
    "event":"qo.plan.ready","timestamp":"iso8601",
    "qKey":"sha256:...","planId":"P-hybrid-fast",
    "steps":["parse","expand","retrieve(hybrid 40/40)","rerank(ce-small 60→20)","synthesize(gpt-m)","finalize(stream)"],
    "budgets":{"latencyMs":900,"costUsd":0.015},
    "expected":{"ndcg@10":">=0.52","p95Ms":"<=900"},
    "hash":"sha256:..."
  },

  "qo.cache": {
    "event":"qo.cache","timestamp":"iso8601",
    "kind":"hit|miss|store|bloom_negative",
    "scope":"query|passage|rerank|answer","key":"sha256:...","ageSec":42
  },

  "qo.decision.path": {
    "event":"qo.decision.path","timestamp":"iso8601",
    "route":"hybrid","expand":"multi-lingual|synonyms",
    "degrade":"step#1 topK 60→40 (cost guard)","fallback":"reranker ce-small→none?",
    "canary":{"enabled":true,"pct":10}
  },

  "qo.trace.ready": {
    "event":"qo.trace.ready","timestamp":"iso8601",
    "id":"q#7f9a12","spans":[
      ["parse",12],["expand",18],["retrieve.vec",140],["retrieve.bm25",90],
      ["merge",8],["rerank.ce-small",120],["synthesize.gpt-m",330],["finalize",10]
    ],
    "tokenUsage":{"prompt":620,"completion":210,"total":830}
  },

  "query.result.ready": {
    "event":"query.result.ready","timestamp":"iso8601",
    "id":"q#7f9a12","mode":"answer","stream":true,
    "topDocs":[{"id":"doc#1","score":0.82},{"id":"doc#7","score":0.78}],
    "answerMd":"...kısa özet + kaynak işaretleri...","citations":["doc#1","doc#7"],
    "guardrails":{"pii":"ok","toxicity":"ok"},
    "hash":"sha256:..."
  },

  "qo.card": {
    "event":"qo.card","timestamp":"iso8601",
    "title":"Plan P-hybrid-fast (ndcg@10 ≥0.52) — canlı",
    "body":"topK 60→40 (cost) • ce-small • gpt-m • p95 hedef 900ms.",
    "severity":"info","ttlSec":600
  },

  "qo.alert": {
    "event":"qo.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"deadline_risk|budget_over|freeze_active|dq_gap|vec_index_stale|tool_failure|idem_duplicate|rbac_denied"
  },

  "qo.metrics": {
    "event":"qo.metrics","timestamp":"iso8601",
    "qps":31.2,"p50Ms":410,"p95Ms":882,"avgCostUsd":0.011,
    "cacheHitPct":{"query":38,"passage":22,"answer":9},
    "quality":{"ndcg@10":0.55,"mrr@10":0.61},
    "degradeStepsApplied":0
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  planner:{
    catalog:[
      { id:"P-hybrid-fast", steps:["parse","expand","retrieve","rerank","synthesize","finalize"],
        budget:{ latencyMs:900, costUsd:0.015 },
        defaults:{ topK:60, reranker:"ce-small", reasoner:"gpt-m", maxTokens:700 } },
      { id:"P-vec-lite", steps:["parse","retrieve.vec","synthesize","finalize"],
        budget:{ latencyMs:600, costUsd:0.008 }, defaults:{ topK:40, reasoner:"gpt-m" } },
      { id:"P-bm25-lowcost", steps:["parse","retrieve.bm25","synthesize","finalize"],
        budget:{ latencyMs:700, costUsd:0.004 }, defaults:{ bm25TopK:80, reasoner:"gpt-m" } },
      { id:"P-hybrid-quality", steps:["parse","expand","retrieve","rerank(ce-large)","synthesize(gpt-l)","finalize"],
        budget:{ latencyMs:1400, costUsd:0.03 }, defaults:{ topK:100, maxTokens:900 } }
    ],
    policy:{ pick:"argmin(cost) s.t. p95<=deadline ∧ quality>=target" }
  },

  degrade:{
    when:{ p95Ms:{warn:900, breach:1100}, costUsd:{warn:0.015, breach:0.02} },
    steps:[
      { action:"topK_dec", step:20, floor:20 },
      { action:"reranker_switch", order:["ce-large","ce-small","none"] },
      { action:"reasoner_switch", order:["gpt-l","gpt-m"] },
      { action:"maxTokens_dec", step:100, floor:400 },
      { action:"expand_off" }
    ],
    qualityGuard:{ ndcg10DropMaxPct:3.0 }
  },

  caches:{
    query:{ kind:"lfu", maxItems:10000, ttlSec:7200, bloom:true },
    passage:{ kind:"lru", maxItems:50000, ttlSec:86400 },
    rerank:{ kind:"lru", maxItems:20000, ttlSec:14400 },
    answer:{ kind:"kvstore", ttlSec:10800, keyBy:"qKey+topDocsHash+model" }
  },

  retrieval:{
    vector:{ topK:80, ef:64, timeoutMs:250, prefetch:true },
    bm25:{ topK:80, timeoutMs:200 },
    hybrid:{ alpha:0.35, merge:"RRf" },
    diversity:{ method:"mmr", lambda:0.7 }
  },

  rerank:{ model:"ce-small", truncateTopK:20, timeoutMs:300 },

  synthesize:{
    models:{ fast:"gpt-m", quality:"gpt-l" },
    guardrails:{ pii:true, toxicity:true, jailbreak:true },
    streaming:true, maxTokens:700, citationStyle:"compact"
  },

  qualityTargets:{ "ndcg@10":0.52, "mrr@10":0.58 },

  integrations:{
    shape:"LIVIA-54", cost:"LIVIA-34", costGuard:"LIVIA-53", slo:"LIVIA-32",
    canary:"LIVIA-45", kbTune:"LIVIA-47", fsync:"LIVIA-46",
    audit:"LIVIA-48", provenance:"LIVIA-38", lineage:"LIVIA-39", dist:"LIVIA-22",
    freeze:"LIVIA-51"
  },

  rbacViews:{ observer:{ hidePrompts:true, showOnlySummary:true } },

  idempotencyTtlSec: 600
}

5) Karar Mantığı (özet)

Parse/Intent: dil tespiti, soru türü, araç ihtiyacı (calc/web/tool) → route.

Plan Seçimi: deadline/cost/tier/traffic hedeflerine göre katalogtan plan; quality hedefi sağlanmıyorsa bir üst kalite plana terfi.

Retrieve: hybrid (BM25+Vector) → diversity/MMR; kaynak süre dolarsa kısmi sonuçla devam.

Rerank: CE (large/small/none) – kalite/latency dengesi.

Synthesize: model seçimi (fast/quality); citation zorunlu; guardrails filtreleri.

Step-Degrade: p95 veya cost ihlalinde plan içinde adım kısılır (topK↓, ce-small→none, tokens↓).

Cache/Memo: query/passsage/answer; bloom negative ile gereksiz arama kaçınma.

Canary: yeni plan/param için %10/15dk; sonuç iyi → promote (L45).

Freeze: aktifse yalnız güvenli degrade/plan düşürme; param yazımı yok (L51).

6) Pipeline

Parse/Route → niyet & araç ihtiyacı, dil/tema

Plan → katalogtan seç; bütçeler ayarla

Retrieve → vector/bm25/hybrid; diversity + prefetch

Rerank → CE; truncate→TopN

Synthesize/Guardrails → akış ve citasyonlar

Finalize/Stream → parçalı teslim, md/html biçimi

Record → trace.ready, decision.path, cache olayları; audit/lineage

Emit → result.ready, card/alert/metrics

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (query.request) PARSE

PARSE → PLAN → RETRIEVE → RERANK → SYNTH → FINALIZE → DONE

Yan kanallar: DEGRADE, CACHE (hit/miss), CANARY, ALERT

Hata: ALERT (dq_gap|index_stale|tool_failure); idem: aynı qKey tekrarında cache’den yan etkisiz cevap

8) Kenar Durumlar

DQ Gap: L41 veri boşluğu → BM25 fallback; uyarı dq_gap.

Index Stale: fsync gecikmesi yüksek (L46) → vec_index_stale, BM25 ağırlığı ↑.

Cost Hard: L53 critical → reranker none, topK min, model gpt-m; bütçe korunur.

SLO Burn: deadline daralt; plan vec-lite’a düş.

Long Answers: token limiti aşımı → özetle parça parça.

Language Mismatch: lang=auto ve TR→EN içerik → çeviri-öncesi genişletme (expand).

Observer: prompt/answer gövdeleri gizli.

9) Telemetri
{
  "qo.metrics": {
    "event":"qo.metrics","timestamp":"iso8601",
    "qps":31.2,"p50Ms":410,"p95Ms":882,"avgCostUsd":0.011,
    "cacheHitPct":{"query":38,"passage":22,"answer":9},
    "quality":{"ndcg@10":0.55,"mrr@10":0.61},
    "degradeStepsApplied":0,"canaryPromoted":1
  }
}

10) Dosya Yapısı (öneri)
services/livia/queryOrchestrator.ts                 # FSM + orchestrator
services/livia/lib/qo/parse.ts                      # dil/intent/route
services/livia/lib/qo/plan.ts                       # latency/cost-aware plan seçici
services/livia/lib/qo/retrieve.ts                   # vector/bm25/hybrid + diversity
services/livia/lib/qo/rerank.ts                     # CE large/small/none
services/livia/lib/qo/synthesize.ts                 # LLM çağrısı + guardrails + citations
services/livia/lib/qo/finalize.ts                   # stream + md/html cevaplayıcı
services/livia/lib/qo/degrade.ts                    # step-degrade + quality guard
services/livia/lib/qo/cache.ts                      # query/passage/answer cache + bloom
services/livia/lib/qo/report.ts                     # md/html rapor + inline SVG
services/livia/lib/bridges.ts                       # L21/L22/L32/L34/L35/L38/L39/L41/L45/L46/L47/L48/L51/L53/L54
services/livia/state/qoStore.ts                     # idem index + trace & cache meta
services/livia/__tests__/queryOrchestrator.test.ts
cfg/livia.qo.yaml

11) Test İskeleti (Jest/Vitest)

Plan seçimi: deadline=900ms, budget $0.015 → P-hybrid-fast seçildi

Hybrid retrieve: vector+bm25 birleştirme; MMR çeşitlilik; timeout’ta kısmi sonuç

Rerank degrade: cost guard uyarısında ce-small→none; ndcg düşüş ≤ %3

Cache: aynı qKey → answer cache hit; yeni varyantta miss

Canary: %10/15dk → metrikler iyi → promote

Freeze: state=frozen → yalnız plan düşürme; param yazımı yok

Index stale: L46 lag yüksek → BM25 ağırlık ↑; alert vec_index_stale

Idempotency: aynı qKey tekrarı yan etkisiz; sadece qo.cache(hit)

Rapor: md/html, trace.ready, decision.path üretildi; L48’e eklendi

12) Örnek Akış (kısa)

10:02 query.request (gold, deadline 1200ms) → PLAN: P-hybrid-fast

RETRIEVE: vec(80)+bm25(80) → MMR → 60 doc

RERANK: ce-small → Top20

SYNTH: gpt-m, citations; stream açık

10:03 RESULT: p95 820ms, avgCost $0.011, NDCG@10 0.56 → kart/info, metrikler güncellendi.

13) SLO

p95 plan→finalize ≤ budget latency (örn. 900ms)

avgCostUsd ≤ budget (±%10 tolerans)

quality (ndcg@10) ≥ hedef (örn. ≥0.52)

cache hit toplam ≥ %30; idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-56 · querySafetyGuard.ts — Geniş Prompt v3 (+ Akış-İçi Güvenlik, Kanıt Zorlaması, Redaksiyon, Rıza)

Amaç:
Sorgu/cevap akışında güvenlik ve uygunluk katmanı sağla: istek ön-kontrol → kanıt/zemin denetimi → PII/duyarlı veri redaksiyonu → toksisite/nefret/şiddet/öz-zarar → yasa-dışı eylem → tıbbi/hukuki/finansal yönlendirme → rıza (consent). Cevap akış-İÇİ (stream) kontrolüyle ihlal durdurma → güvenli alternatif/özet → sitasyon zorlaması uygula. KVKK/GDPR farkındalığı, WORM/Provenance (L38) ve Lineage (L39) ile tam izlenebilirlik. SLO (L32), Maliyet (L34/53), Orkestratör (L55), Freeze (L51), KB Tuning (L47), Traffic Shaper (L54) ile entegre.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601, yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: policy|compliance|ops tam, observer salt okur

Gizlilik: PII saptanır ve L21 ile redakte edilir; operatör kimliği hash’lenir

İdempotency: safetyKey = queryId + stage + windowISO + policyHash

Observability: spans (safety.precheck|classify|redact|ground|streamGuard|finalize) + metrics

Uyumluluk: tüm kararlar L26 (Etik), L38 (WORM append) ve L39 (lineage)’e yazılır

2) Girdiler (In) — Zod .strict() şemaları
{
  "safety.policy.updated": {
    "event":"safety.policy.updated","timestamp":"iso8601",
    "policyId":"safety-v1",
    "locale":"tr-TR",
    "categories": {
      "toxicity":"block|filter|allow",
      "hate":"block|filter",
      "violence":"filter|allow",
      "self_harm":"block|safe_alt",
      "illicit":"block|contextual",
      "sexual":"filter|block",
      "extremism":"block",
      "medical":"consent|disclaimer|safe_alt",
      "legal":"consent|disclaimer|safe_alt",
      "financial":"consent|disclaimer|safe_alt",
      "political":"disclaimer|safe_alt",
      "privacy":"strict"
    },
    "pii": { "enable": true, "confidenceMin": 0.85, "redactStyle":"hash|mask|drop",
      "patterns":["iban_tr","tckn","email","phone","address","credit_card"] },
    "grounding": {
      "requireCitationsFor": ["stats","dates","medical","legal","finance"],
      "minCitationCoveragePct": 60,
      "hallucinationScoreThreshold": 0.65
    },
    "streaming": { "cutoffOnViolation": true, "graceTokens": 20 }
  },

  "pii.lexicon.updated": {
    "event":"pii.lexicon.updated","timestamp":"iso8601",
    "patterns":[
      {"code":"tckn","regex":"\\b\\d{11}\\b"},
      {"code":"iban_tr","regex":"\\bTR\\d{24}\\b"},
      {"code":"phone_tr","regex":"\\b\\+?90\\d{10}\\b"}
    ]
  },

  "consent.policy.updated": {
    "event":"consent.policy.updated","timestamp":"iso8601",
    "requiresConsent":["medical","legal","financial","geolocation","biometric"],
    "templates":{
      "medical":"Tıbbi içerik için bilgilendirme onayı veriyor musunuz? (E/H)",
      "legal":"Hukuki bilgi için yönlendirici içerik sunacağım; onaylıyor musunuz? (E/H)"
    }
  },

  "user.context": {
    "event":"user.context","timestamp":"iso8601",
    "region":"TR|EU|US|…","age":"unknown|adult|minor",
    "tenant":"t#acme","tier":"gold|silver|bronze"
  },

  "user.consent.event": {
    "event":"user.consent.event","timestamp":"iso8601",
    "category":"medical|legal|financial|geolocation|biometric",
    "given": true, "expiresAt":"iso8601", "by":"user#hash"
  },

  "query.request": {
    "event":"query.request","timestamp":"iso8601",
    "id":"q#7f9a12","text":"...", "lang":"auto|tr|en","mode":"search|answer|chat",
    "hints":{"deadlineMs":1200,"stream":true}
  },

  "qo.stage.output": {
    "event":"qo.stage.output","timestamp":"iso8601",
    "id":"q#7f9a12","stage":"retrieve|rerank|synthesize","chunk":"text|null",
    "citations":["doc#1","doc#7"], "tokens":{"prompt":420,"completion":128}
  },

  "retrieval.docs.snapshot": {
    "event":"retrieval.docs.snapshot","timestamp":"iso8601",
    "docs":[{"id":"doc#1","title":"...","url":"...","hash":"sha256:..."}]
  },

  "safety.exception.request": {
    "event":"safety.exception.request","timestamp":"iso8601",
    "reason":"security_research|red_team|pentest","scope":"tenant:t#acme",
    "requester":"sec#42","ttlMin":60"
  }
}

3) Çıktılar (Out)
{
  "safety.precheck.ready": {
    "event":"safety.precheck.ready","timestamp":"iso8601",
    "id":"q#7f9a12","labels":{"toxicity":"low","illicit":"none","privacy":"possible_pii"},
    "action":"allow|filter|block|consent_needed"
  },

  "safety.redaction.applied": {
    "event":"safety.redaction.applied","timestamp":"iso8601",
    "id":"q#7f9a12",
    "areas":["query|retrieval|answer"],
    "redactions":[{"kind":"tckn","from":"12345678901","to":"hash:8f.."}]
  },

  "safety.consent.request": {
    "event":"safety.consent.request","timestamp":"iso8601",
    "id":"q#7f9a12","category":"medical|legal|financial",
    "prompt":"Tıbbi içerik için bilgilendirme onayı veriyor musunuz? (E/H)",
    "ttlSec":300
  },

  "safety.stream.guard": {
    "event":"safety.stream.guard","timestamp":"iso8601",
    "id":"q#7f9a12","action":"cutoff|mask|replace_with_safe_alt",
    "reason":"toxicity|pii|illicit|hallucination_risk","graceTokens":20
  },

  "safety.grounding.snapshot": {
    "event":"safety.grounding.snapshot","timestamp":"iso8601",
    "id":"q#7f9a12",
    "coveragePct":72,"hallucinationScore":0.41,"uncitedClaims":1,
    "status":"grounded|at_risk|ungrounded"
  },

  "safety.answer.ready": {
    "event":"safety.answer.ready","timestamp":"iso8601",
    "id":"q#7f9a12",
    "mode":"answer","stream":true,
    "answerMd":"(redakte/güvenli) …","citations":["doc#1","doc#7"],
    "disclaimer":"Bu yanıt yalnızca bilgilendirme amaçlıdır…"
  },

  "safety.violation.blocked": {
    "event":"safety.violation.blocked","timestamp":"iso8601",
    "id":"q#7f9a12","category":"extremism|sexual|illicit|self_harm",
    "message":"policy_blocked","httpStatus":403
  },

  "safety.card": {
    "event":"safety.card","timestamp":"iso8601",
    "title":"Güvenlik Kalkanı Aktif — q#7f9a12",
    "body":"PII redaksiyon uygulandı • Grounding %72 • Akışta 1 kez maskeleme.",
    "severity":"info","ttlSec":600
  },

  "safety.alert": {
    "event":"safety.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"idem_duplicate|rbac_denied|cutoff|policy_block|consent_missing|hallucination_high|dq_gap"
  },

  "safety.metrics": {
    "event":"safety.metrics","timestamp":"iso8601",
    "guarded":1,"blocked":0,"cutoffs":1,"redactions":2,
    "avgPrecheckMs":14,"p95ScanMs":6,"groundingCoverageAvg":68
  },

  "safety.report.ready": {
    "event":"safety.report.ready","timestamp":"iso8601",
    "path":"data/safety/2025-09-16/q_7f9a12/report.md",
    "summary":"Consent gerekmedi; PII 2 alan maskelendi; grounding %72; 1 maskeleme; ihlal yok.",
    "hash":"sha256:..."
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  classifiers:{
    toxicity:{ model:"fasttox-v2", thresholds:{ low:0.3, high:0.7 } },
    hate:{ model:"safety-multi-v1", thresholds:{ block:0.6 } },
    self_harm:{ model:"safety-multi-v1", thresholds:{ block:0.5 } },
    illicit:{ model:"intent-guard-v1", thresholds:{ block:0.7, contextual:0.4 } },
    sexual:{ model:"safety-multi-v1", thresholds:{ block:0.6, filter:0.4 } },
    extremism:{ model:"safety-multi-v1", thresholds:{ block:0.5 } }
  },

  pii:{
    enable:true, confidenceMin:0.85, redactStyle:"hash",
    patterns:["tckn","iban_tr","email","phone_tr","address","credit_card"]
  },

  grounding:{
    requireCitationsFor:["stats","dates","medical","legal","finance"],
    minCitationCoveragePct:60,
    hallucinationScoreThreshold:0.65,         // üstü risk
    entailmentModel:"entail-nli-mini",        // basit NLI doğrulayıcı
    numericClaimHeuristics:true               // sayısal iddialarda kaynak zorla
  },

  streaming:{
    cutoffOnViolation:true, graceTokens:20,
    replaceWithSafeAltTemplate:"İçerikte risk tespit edildi; güvenli özet: {safe_summary}."
  },

  consent:{
    categories:["medical","legal","financial","geolocation","biometric"],
    ttlSec:600,
    templates:{ medical:"…", legal:"…", financial:"…" }
  },

  disclaimers:{
    medical:"Bu yanıt tıbbi tavsiye niteliği taşımaz…",
    legal:"Bu yanıt hukuki danışmanlık değildir…",
    financial:"Bu yanıt finansal tavsiye değildir…"
  },

  freezeHook:"LIVIA-51",                // frozen → politika değişimi yazılmaz
  integrations:{
    qo:"LIVIA-55", slo:"LIVIA-32", cost:"LIVIA-34", costGuard:"LIVIA-53",
    tune:"LIVIA-47", shape:"LIVIA-54",
    provenance:"LIVIA-38", lineage:"LIVIA-39", audit:"LIVIA-48", dist:"LIVIA-22"
  },

  rbacViews:{ observer:{ hidePIIExamples:true, showOnlySummary:true } },

  idempotencyTtlSec: 900
}

5) Karar Mantığı (özet)

Ön-Kontrol: query.request → sınıflandır; block/filter/consent_needed/allow kararı ver.

PII Redaksiyon: giriş, ara belgeler ve çıktı üzerinde çok katmanlı regex+NER+heuristik; confidence≥min → hash/mask.

Grounding & Sitasyon: qo.stage.output + retrieval.docs.snapshot kullan; claim→evidence eşle; coverage% ≥ min ve hallucinationScore < th ise grounded. Aksi: dil yumuşatma + kanıt isteği + safe alt.

Akış-İçi Guard: stream’de ihlal skoru eşik geçerse cutoff (+ graceTokens), riskli kısmı mask et; güvenli özetle replace.

Rıza: kategori requiresConsent ise ve onay yoksa → safety.consent.request; yanıt beklet veya genel bilgi moduna düş.

Disclaimers: medical|legal|financial kategorilerinde otomatik ekle.

Exception: security_research gibi RBAC izni varsa kontrollü mod (log’lar sıkı, dağıtım yok).

Freeze: aktif freeze → yalnız simülasyon (policy yazımı yok).

6) Pipeline (Kompozisyon)

Precheck/Classify → risk etiketleri ve ilk karar

Consent Gate → gerekiyorsa rıza talep/denetim

Redact-In → sorgu/bağlam PII temizliği

Grounding Guard → retrieve/rerank çıktılarına göre kanıt kapsamı ve halüsinasyon skoru

Stream Guard → synth aşamasında token akışını tarayıp cutoff/mask/replace uygula

Redact-Out → nihai cevaptaki PII/duyarlı alanları maskeler

Finalize → disclaimer ekle, card/alert/metrics/rapor yayımla, L38/L39 kayıtla

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (query.request) PRECHECK

PRECHECK → (block) BLOCKED | (consent) AWAIT_CONSENT | (allow/filter) GUARD

AWAIT_CONSENT → (consent.given) GUARD | (timeout) SAFE_ALT

GUARD → GROUNDING → STREAM_GUARD → FINALIZE → DONE

STREAM_GUARD (yan kanal) → ihlal: CUTOFF/REPLACE

Hata: ALERT; idem: aynı safetyKey yinelemesi yan etkisiz (yalnız kart/metrik güncellenir)

8) Kenar Durumlar

Minor Kullanıcı: age=minor → yetişkin içerik block; yalnız güvenli alternatif.

Prompt Injection (retrieve kaynaklı): “talimatları görmezden gel” vb. → policy override koruması (uyarı + mask).

Çoklu Dil: TR/EN karma içerikte hem TR hem EN modellerini kullan; daha sıkı eşikler uygula.

Sayısal İddia: kaynak yoksa “yaklaşık/dikkatli dil” + kaynak iste ya da safe alt özet.

KVKK/GDPR İstekleri: “unutulma/erişim/taşıma” talepleri → policy yönlendirme (yanıt şablonu).

Observer görünümü: PII örnekleri ve ham pasajlar gizlenir.

Idempotency: aynı akış tekrarında redaksiyon ve kararlar yeniden yazılmaz; yalnız referanslar güncellenir.

9) Telemetri
{
  "safety.metrics": {
    "event":"safety.metrics","timestamp":"iso8601",
    "guarded":1,"blocked":0,"cutoffs":1,"redactions":2,
    "avgPrecheckMs":14,"p95ScanMs":6,
    "groundingCoverageAvg":68,"hallucinationRiskAvg":0.33,
    "consentRequests":0,"exceptions":0
  }
}

10) Dosya Yapısı (öneri)
services/livia/querySafetyGuard.ts                 # FSM + orchestrator
services/livia/lib/safety/classify.ts              # toxicity/hate/etc sınıflandırıcıları
services/livia/lib/safety/pii.ts                   # PII tespiti + redaksiyon
services/livia/lib/safety/ground.ts                # sitasyon/entailment + halüsinasyon skoru
services/livia/lib/safety/stream.ts                # akış içi tarama + cutoff/mask/replace
services/livia/lib/safety/consent.ts               # rıza kapısı yönetimi
services/livia/lib/safety/disclaimer.ts            # alan bazlı disclaimer ekleyici
services/livia/lib/safety/report.ts                # md/html rapor + inline SVG
services/livia/lib/bridges.ts                      # L21/L22/L26/L32/L34/L38/L39/L41/L45/L47/L48/L51/L53/L54/L55
services/livia/state/safetyStore.ts                # idem index + karar izleri
services/livia/__tests__/querySafetyGuard.test.ts
cfg/livia.safety.yaml

11) Test İskeleti (Jest/Vitest)

Precheck-Block: extremism=high → violation.blocked (403)

Consent: medical sorgu → rıza istenir; rıza yoksa safe_alt

PII: TCKN & IBAN → hash redaksiyon; safety.redaction.applied yayıldı

Grounding: numeric iddia ve kaynak yetersiz (coverage%<60) → at_risk + dil yumuşatma + kaynak isteği

Stream Cutoff: synth sırasında toksisite ↑ → cutoff+replace_with_safe_alt

Disclaimers: finansal içerikte otomatik eklendi

Freeze: L51 frozen → politika güncellenmez; yalnız karar uygula

Idempotency: aynı safetyKey yinelemesinde ikinci yan etki yok

Rapor: md/html çıktı; L38/L48 kaydı; card/alert/metrics üretildi

12) Örnek Akış (kısa)

10:01 PRECHECK: toksisite düşük, PII “possible” → filter

10:01 PII: TCKN maskelendi (2 alan)

10:02 GROUNDING: coverage %72, halüsinasyon 0.41 → grounded

10:02 STREAM: bir cümlede riskli ifade → mask + safe alt cümle

10:03 FINALIZE: finansal disclaimer eklendi; answer.ready + rapor + kart.

13) SLO

Precheck p95 < 30 ms, stream scan p95 < 8 ms/token-chunk

Grounding coverage ≥ %60 hedef; hallucination risk < 0.65

Yanlış pozitif cutoff ≤ %1; kaçan kritik ihlal ≤ %0.5

Idempotent çakışma ≈ 0
____________________________________________________________________________________
LIVIA-57 · evidenceAttributionVerifier.ts — Geniş Prompt v3 (+ Parça-Düzeyi Kanıt, NLI/Entailment, Sayısal Doğrulama)

Amaç:
Üretilen yanıtın tüm iddialarının (cümle/alt cümle/nümerik ifade) atıf verilen kanıtlarla gerçekten desteklendiğini teyit etmek:

Claim çıkar → kanıt eşle → NLI (entail/contradict/neutral) → sayısal/doğruluk kontrolü → kapsam yüzdesi → risk skoru → düzeltme/öneri.

Cümle-parça (span-level) hizalama, doküman parçası hash (WORM/L38), çapraz-kaynak tutarlılığı, çelişki tespiti, eksik atıf tamamlama.

LIVIA-55 (queryOrchestrator) ve LIVIA-56 (querySafetyGuard) ile akış-içi; rapor/denetim L48, köken L38, soy-ağacı L39.
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; gün penceresi 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: policy|compliance|mlops tam, observer salt okur

Gizlilik: PII yok; ham pasajlar observer görünümünde maskeli (L21)

İdempotency: evKey = answerHash + citationsHash + policyHash + windowISO

Observability: spans (ev.claims,ev.align,ev.nli,ev.numeric,ev.coverage,ev.patch,ev.report) + metrics

Uyum: tüm bulgular WORM (L38), audit paketi (L48), lineage (L39)

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "query.result.ready": {
    "event":"query.result.ready","timestamp":"iso8601",
    "id":"q#7f9a12","mode":"answer","stream":true,
    "answerMd":"...metin [^1][^2] ...",
    "citations":["doc#1#p3:45-88","doc#7#p1:0-120"],
    "hash":"sha256:ans..."
  },

  "qo.trace.ready": {
    "event":"qo.trace.ready","timestamp":"iso8601",
    "id":"q#7f9a12","spans":[["retrieve.vec",140],["rerank.ce-small",120],["synthesize",330]],
    "tokenUsage":{"prompt":620,"completion":210,"total":830}
  },

  "retrieval.docs.snapshot": {
    "event":"retrieval.docs.snapshot","timestamp":"iso8601",
    "docs":[
      {"id":"doc#1","title":"AVAX Staking","url":"https://…","page":3,"chunk":{"start":45,"end":200,"text":"...APR 7.3%..."}, "hash":"sha256:doc1p3"},
      {"id":"doc#7","title":"Piyasa Raporu","url":"https://…","page":1,"chunk":{"start":0,"end":220,"text":"...geçen ay 6.8%..."}, "hash":"sha256:doc7p1"}
    ]
  },

  "qo.claims.extracted": {
    "event":"qo.claims.extracted","timestamp":"iso8601",
    "id":"q#7f9a12",
    "claims":[
      {"idx":0,"text":"AVAX staking APR %7.3'tür.","type":"numeric","unit":"pct","value":7.3},
      {"idx":1,"text":"Geçen aya göre artış vardır.","type":"comparative"}
    ],
    "segments":[{"idx":0,"answerSpan":{"start":120,"end":148}},{"idx":1,"answerSpan":{"start":190,"end":220}}],
    "hash":"sha256:claims..."
  },

  "dq.snapshot": {
    "event":"dq.snapshot","timestamp":"iso8601",
    "sources":[{"docId":"doc#1","freshnessDays":2,"quality":"high"},{"docId":"doc#7","freshnessDays":35,"quality":"medium"}]
  },

  "pii.lexicon.updated": {
    "event":"pii.lexicon.updated","timestamp":"iso8601",
    "patterns":[{"code":"iban_tr","regex":"\\bTR\\d{24}\\b"}]
  }
}


Not: qo.claims.extracted yoksa modül kendi claim extractor’ını çalıştırır (cümle/numara/durum).

3) Çıktılar (Out)
{
  "evidence.validation.ready": {
    "event":"evidence.validation.ready","timestamp":"iso8601",
    "id":"q#7f9a12",
    "coveragePct":84,
    "claims":[
      {"idx":0,"status":"entailed","doc":"doc#1#p3:45-88","supportSpan":{"docHash":"sha256:doc1p3","start":60,"end":92},"score":0.93},
      {"idx":1,"status":"entailed|neutral|contradict","doc":"doc#7#p1:0-120","supportSpan":{"docHash":"sha256:doc7p1","start":30,"end":80},"score":0.71}
    ],
    "contradictions":[
      {"claimIdx":1,"doc":"doc#2","note":"doc#2 trend düşüş diyor"}
    ],
    "numericChecks":[
      {"claimIdx":0,"ok":true,"method":"digit-by-digit","tolerance":"abs=0.1%"}
    ],
    "risk":{"hallucination":0.21,"contradiction":0.08,"staleness":0.34},
    "status":"grounded|at_risk|ungrounded"
  },

  "evidence.patch.suggestion": {
    "event":"evidence.patch.suggestion","timestamp":"iso8601",
    "id":"q#7f9a12",
    "actions":[
      {"type":"add_citation","claimIdx":1,"doc":"doc#1#p3:100-160","reason":"kapsam artır"},
      {"type":"replace_citation","from":"doc#7#p1:0-120","to":"doc#9#p2:10-90","reason":"daha güncel"}
    ]
  },

  "evidence.highlight.map": {
    "event":"evidence.highlight.map","timestamp":"iso8601",
    "id":"q#7f9a12",
    "answerSpans":[
      {"idx":0,"answer":{"start":120,"end":148},"doc":"doc#1#p3","docSpan":{"start":60,"end":92}}
    ],
    "style":"inline_footnote|hovercard"
  },

  "evidence.report.ready": {
    "event":"evidence.report.ready","timestamp":"iso8601",
    "path":"data/evidence/2025-09-16/q_7f9a12/report.md",
    "summary":"%84 kapsam, 1 sayısal iddia doğrulandı, 0 kritik çelişki; 1 atıf güncelleme önerildi.",
    "hash":"sha256:..."
  },

  "evidence.card": {
    "event":"evidence.card","timestamp":"iso8601",
    "title":"Atıf Doğrulama — %84 kapsam (grounded)",
    "body":"1 iddia entailed • 0 çelişki • 1 güncelleme önerisi.",
    "severity":"info","ttlSec":600
  },

  "evidence.alert": {
    "event":"evidence.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"coverage_low|contradiction_found|stale_source|idem_duplicate|rbac_denied|dq_gap"
  },

  "evidence.metrics": {
    "event":"evidence.metrics","timestamp":"iso8601",
    "answers":1,"avgCoveragePct":84,"contradictions":0,
    "avgNLI":{"entailed":0.85,"neutral":0.11,"contradict":0.04},
    "numericOkPct":100,"patchesSuggested":1,
    "avgVerifyMs":78
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  claims:{
    segmenter:{ mode:"sentence+clause", maxLen:280 },
    types:["numeric","temporal","comparative","categorical","quote"],
    minConfidence:0.65
  },

  alignment:{
    search:"bm25+vec", topK:8, windowChars:180,
    fuzzy:{ charWindow:6, allowSynonym:true, trAccentAware:true },
    multiDocCombine:"best_first_then_merge"
  },

  nli:{
    model:"entail-mini-v2",
    thresholds:{ entailed:0.7, contradict:0.6 },   // entailed≥0.7; contradict≥0.6; aksi neutral
    contradictionWins:true
  },

  numeric:{
    method:"digit_by_digit", tolerance:{ pctAbs:0.2, pctRel:2.0, moneyAbs:0.01 },
    thousandSepAware:true, percentSymbols:["%","pct"],
    dateNorm:"YYYY-MM-DD"
  },

  coverage:{
    minPct:70, targetPct:85,
    requireFor:["stats","dates","medical","legal","finance"]
  },

  freshness:{
    preferRecent:true, stalenessWarnDays:30
  },

  patch:{
    autoApplyWhen:{ coverageBelow:70, contradictionNone:true },
    addHovercards:true, footnoteStyle:"[^n]"          // md inline dipnot stili
  },

  dq:{
    minQuality:"medium", allowStaleIfNoAlternative:false
  },

  integrations:{
    qo:"LIVIA-55", safety:"LIVIA-56", slo:"LIVIA-32", cost:"LIVIA-34",
    provenance:"LIVIA-38", lineage:"LIVIA-39", audit:"LIVIA-48",
    dist:"LIVIA-22"
  },

  rbacViews:{ observer:{ hideDocChunks:true, showOnlyScores:true } },

  idempotencyTtlSec: 1800
}

5) Karar Mantığı (özet)

Claim çıkarımı: yanıt metninden cümle/alt cümle ve sayısal ifadeler çekilir; claims[].

Parça hizalama: her claim için doküman parçalarında (chunk) fuzzy + vektör arama; en iyi topN bulunur.

NLI/Entailment: claim⇄parça çifti için entailed/neutral/contradict skoru; contradiction üstün gelir.

Sayısal doğrulama: yüzde/tarih/para — digit-by-digit parse; tolerans içinde mi?

Kapsam hesabı: atıflı cümlelerin toplam kapsam yüzdesi; minPct/targetPct ile statü grounded/at_risk/ungrounded.

Tazelik: kaynak freshnessDays>stalenessWarnDays → stale_source uyarısı ve replace önerisi.

Patch önerileri: add_citation, replace_citation, tighten_span, hedge_language.

Akış-İçi entegrasyon: L56 stream.guard tetiklerse özet/durdurma; yetersiz kanıt varsa hedged dil + kaynak iste.

6) Pipeline (Kompozisyon)

Ingest: query.result.ready + retrieval.docs.snapshot + (opsiyonel) qo.claims.extracted

Extract: claim & answer span çıkar; gerekirse kendi extractor devreye girer

Align: doküman chunk arama + span hizalama; Hovercard/footnote eşlemleri üret

NLI: claim-parça çiftlerinde entail/contradiction skorları

Numeric Verify: sayısal iddiaların tarih/para/yüzde kontrolü

Score & Cover: kapsam %, risk skorları; statü belirle

Patch: atıf ekle/değiştir, span daralt; gerekirse hedged dil öner

Report & Emit: validation.ready, patch.suggestion, highlight.map, report.ready, card/alert/metrics

Audit & Provenance: tüm eşleşmeler L38 hash zinciri, L39 kenarları, L48 paketine eklenir

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (query.result.ready) EXTRACT

EXTRACT → ALIGN → NLI → NUMERIC → COVERAGE → PATCH → REPORT → DONE

Ara olaylar: dq.snapshot (kalite/tazelik) tespitleri COVERAGE aşamasını etkiler

Hata: ALERT; idem: aynı evKey yinelemesinde yan etki yok (sadece card/metrik güncellenir)

8) Kenar Durumlar

Parafraz/özet: claim doğrudan alıntı değil → fuzzy+NLI ile destek; tighten_span öner.

Çoklu kaynak: claim birden fazla kaynaktan birleşik → birleşik multi-span atıf üret.

Dil farkı: TR cevap, EN kaynak → çeviri-tabanlı NLI; eşik +0.05 yükseltilir.

OCR hatası: chunk metin bozuksa dq_gap ve replace_citation öner.

Tarih kayması: farklı zaman dilimleri → dateNorm ile normalize; uyuşmazlıkta neutral.

Çelişen kaynaklar: biri artış, biri düşüş → contradictions[]; at_risk + uyarı.

Stale kaynak: freshnessDays > stalenessWarnDays → stale_source; yeni kanıt öner.

Observer görünümü: yalnız skorlar/kapsam göster; metin gizli.

Freeze: L51 frozen → patch otomatik uygulanmaz, yalnız öneri üretilir.

9) Telemetri
{
  "evidence.metrics": {
    "event":"evidence.metrics","timestamp":"iso8601",
    "answers":1,"avgCoveragePct":84,"contradictions":0,
    "avgNLI":{"entailed":0.85,"neutral":0.11,"contradict":0.04},
    "numericOkPct":100,"patchesSuggested":1,"patchesAutoApplied":0,
    "avgVerifyMs":78,"p95VerifyMs":160
  }
}

10) Dosya Yapısı (öneri)
services/livia/evidenceAttributionVerifier.ts      # FSM + orchestrator
services/livia/lib/evidence/claims.ts              # claim extract & span
services/livia/lib/evidence/align.ts               # doküman parça arama + hizalama
services/livia/lib/evidence/nli.ts                 # entail/contradict skorlayıcı
services/livia/lib/evidence/numeric.ts             # sayısal tarih/para/yüzde denetimi
services/livia/lib/evidence/coverage.ts            # kapsam yüzdesi & risk
services/livia/lib/evidence/patch.ts               # atıf ek/değiştir, hedge
services/livia/lib/evidence/report.ts              # md/html + inline footnote/hovercard
services/livia/lib/bridges.ts                      # L21/L22/L32/L34/L38/L39/L41/L48/L51/L55/L56
services/livia/state/evidenceStore.ts              # idem index + sonuç cache
services/livia/__tests__/evidenceAttributionVerifier.test.ts
cfg/livia.evidence.yaml

11) Test İskeleti (Jest/Vitest)

%84 kapsam: iki claim’den biri entailed, diğeri neutral → status=grounded

Kapsam düşük: %60 → coverage_low + add_citation önerisi

Çelişki: bir claim contradict → contradiction_found + hedge_language önerisi

Sayısal doğrulama: 7.3% ±0.1% ok; 7.9% → fail

Tazelik: doc#7 freshness=35d → stale_source ve replace_citation

DQ gap: OCR bozuk → dq_gap uyarısı

Idempotency: aynı evKey ikinci çalıştırmada yalnız kart/metrik güncellenir

Rapor: md/html üretildi; footnote/hovercard eklendi; L38/L48 kayıtları

12) Örnek Akış (kısa)

10:04 EXTRACT: 2 claim, 1 numeric

10:04 ALIGN: doc#1 p3, doc#7 p1 eşleşti

10:05 NLI: claim#0 entailed 0.93; claim#1 entailed 0.71

10:05 NUMERIC: 7.3% doğrulandı

10:06 COVERAGE: %84 → grounded; doc#7 stale → replace önerisi

10:06 REPORT/EMIT: validation.ready + patch.suggestion + highlight.map + kart/alert/metrik

13) SLO

Doğrulama p95 < 180 ms (cevap başına)

Yanlış negatif çelişki ≤ %1, yanlış pozitif çelişki ≤ %2

Kapsam hedefi ≥ %85 (mümkünse), asgari ≥ %70

Idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-58 · knowledgeFreshnessGuard.ts — Geniş Prompt v3 (+ Tazelik Skoru, Otomatik Recrawl/Reindex, Zaman-Duyarlı Sorgu Koruması)

Amaç:
Bilgi kaynaklarının tazeliğini/versiyonunu izleyip bayat riskini düşürmek:

Kaynak → ingest → indeks → servis zincirinde age/lag/ttl/version tutarlılığı,

recrawl/reingest/reindex otomasyonu (bütçe ve politikaya uygun),

zaman-duyarlı sorgular için tazelik kapısı ve boost/fallback ipuçları,

Sorgu yanıtında “eski bilgi” riski varsa uyarı/patch/disclaimer.
Entegrasyon: Query Orchestrator (L55), Safety (L56), Evidence (L57), FSync (L46), KB Tuning (L47), Cost (L34/53), Freeze (L51), DR/MRF (L50/L49), Audit (L48), WORM/Lineage (L38/L39), Dist (L22).
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; gün penceresi 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: content|mlops|ops|policy tam; observer salt okur

Gizlilik: PII yok; operator/tenant kimlikleri L21 ile hash

İdempotency: freshKey = sourceId + version + windowISO + policyHash

Observability: spans (fresh.observe|score|plan|recrawl|reindex|emit) + metrics

Uyum: tüm kararlar L26 etik, L38 WORM append, L39 lineage

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "freshness.policy.updated": {
    "event":"freshness.policy.updated","timestamp":"iso8601",
    "policyId":"fresh-v1",
    "ttlDaysBySourceType": { "news":2, "pricing":1, "docs":90, "faq":30, "regulatory":7, "market":1 },
    "criticalDomains": ["pricing","market","status","incident","release_notes"],
    "recrawlBudget": { "maxRequestsPerHour": 300, "maxBytesPerDayMB": 800 },
    "reindex": { "maxBuildsPerDay": 6, "canaryTrafficPct": 10, "promoteAfterMin": 20 },
    "stalenessThreshold": { "warnScore": 0.6, "blockScore": 0.8 }
  },

  "knowledge.source.registered": {
    "event":"knowledge.source.registered","timestamp":"iso8601",
    "sourceId":"src#co_pricing","type":"pricing|news|docs|faq|regulatory|market|changelog",
    "fetch":{"kind":"http|s3|db|git","url":"https://…","auth":"opaque?"},
    "updateHint":{"cron":"0 */2 * * *","deltaOnly":true}
  },

  "knowledge.crawl.finished": {
    "event":"knowledge.crawl.finished","timestamp":"iso8601",
    "sourceId":"src#co_pricing","fetchedDocs":142,"bytesMB":18.3,
    "latestDocAt":"iso8601","earliestDocAt":"iso8601","etag":"hash"
  },

  "knowledge.ingest.finished": {
    "event":"knowledge.ingest.finished","timestamp":"iso8601",
    "sourceId":"src#co_pricing","namespace":"kb_default",
    "normalizedDocs":142,"skipped":3,"avgChunkChars":820,
    "watermark":{"upTo":"iso8601"}
  },

  "index.build.completed": {
    "event":"index.build.completed","timestamp":"iso8601",
    "namespace":"kb_default","indexId":"ivf-pq-384-np16-2025-09-16",
    "baseSourceIds":["src#co_pricing","src#release_notes"],"freshFrom":"iso8601",
    "lagSec": 420, "sizeGB": 3.2
  },

  "fsync.lag.snapshot": {
    "event":"fsync.lag.snapshot","timestamp":"iso8601",
    "namespace":"kb_default","lagSec": 780, "queueDepth": 12
  },

  "qo.query.context": {
    "event":"qo.query.context","timestamp":"iso8601",
    "id":"q#7f9a12","text":"AVAX APR bugün kaç?","profile":"tr",
    "timeSensitivity":"auto|low|medium|high",
    "deadlineMs":1200
  },

  "knowledge.ping.request": {
    "event":"knowledge.ping.request","timestamp":"iso8601",
    "target":"pricing|status|market|weather|custom",
    "args":{"symbol":"AVAX","pair":"USDT"}
  },

  "knowledge.ping.result": {
    "event":"knowledge.ping.result","timestamp":"iso8601",
    "target":"pricing","ok":true,"ageSec":12,
    "payloadHash":"sha256:..","provider":"connector#pricing_v2"
  },

  "change.log.published": {
    "event":"change.log.published","timestamp":"iso8601",
    "sourceId":"src#kb_docs","version":"v1.42","notes":"Breaking param rename..."
  },

  "freeze.state.changed": {
    "event":"freeze.state.changed","timestamp":"iso8601",
    "state":"frozen|thawed","scope":"service:kb_api","reason":"audit|mrf|drill"
  }
}

3) Çıktılar (Out)
{
  "freshness.snapshot": {
    "event":"freshness.snapshot","timestamp":"iso8601",
    "namespace":"kb_default",
    "score":0.37,
    "components":{
      "ageScore":0.22,"lagScore":0.30,"ttlScore":0.18,"volatilityAdj":-0.05,"coverageAdj":-0.08
    },
    "topStale":[{"sourceId":"src#release_notes","ageDays":14,"ttlDays":7},{"sourceId":"src#faq","ageDays":45,"ttlDays":30}],
    "indexLagSec":420,
    "status":"ok|at_risk|stale"
  },

  "stale.risk.triggered": {
    "event":"stale.risk.triggered","timestamp":"iso8601",
    "namespace":"kb_default",
    "severity":"warn|high|block",
    "reason":"ttl_exceeded|index_lag|fsync_lag|volatile_domain|time_sensitive_query",
    "score":0.83,
    "hints":{"boostRecent":true,"forcePing":"pricing"}
  },

  "recrawl.scheduled": {
    "event":"recrawl.scheduled","timestamp":"iso8601",
    "sourceId":"src#co_pricing","mode":"delta|full","eta":"iso8601",
    "budget":{"req":120,"bytesMB":70}
  },

  "reindex.scheduled": {
    "event":"reindex.scheduled","timestamp":"iso8601",
    "namespace":"kb_default","indexId":"ivf-pq-384-np16-2025-09-16-canary",
    "canaryTrafficPct":10,"promoteAfterMin":20
  },

  "qo.retrieval.boost.hint": {
    "event":"qo.retrieval.boost.hint","timestamp":"iso8601",
    "namespace":"kb_default",
    "actions":[
      {"type":"boost_recent","alpha":0.25,"sinceDays":7},
      {"type":"demote_stale","ttlExceededOnly":true},
      {"type":"prefer_sources","ids":["src#co_pricing","src#release_notes"],"weight":1.2}
    ]
  },

  "knowledge.patch.suggestion": {
    "event":"knowledge.patch.suggestion","timestamp":"iso8601",
    "namespace":"kb_default",
    "actions":[
      {"type":"unlink_outdated_faq","ids":["doc#faq_2019_12"],"reason":"ttl_exceeded"},
      {"type":"add_disclaimer_rule","scope":"pricing","text":"Veriler anlıktır; değişebilir."}
    ]
  },

  "freshness.card": {
    "event":"freshness.card","timestamp":"iso8601",
    "title":"KB Tazelik — at_risk (lag 13dk, 2 kaynak TTL>limit)",
    "body":"Recrawl planlandı • Canary reindex %10 • Qo’ya boost/demote ipuçları gönderildi.",
    "severity":"warn","ttlSec":600
  },

  "freshness.alert": {
    "event":"freshness.alert","timestamp":"iso8601",
    "level":"info|warn|error",
    "message":"idem_duplicate|rbac_denied|budget_exceeded|crawl_failed|index_failed|freeze_active|ping_timeout"
  },

  "freshness.metrics": {
    "event":"freshness.metrics","timestamp":"iso8601",
    "snapshots":1,"avgScore":0.41,"atRisk":1,"stale":0,
    "recrawls":1,"reindexes":1,"canaryPromotes":0,
    "avgCrawlMs":8200,"avgIndexMs":92000
  },

  "freshness.report.ready": {
    "event":"freshness.report.ready","timestamp":"iso8601",
    "path":"data/fresh/2025-09-16/kb_default/report.md",
    "summary":"Score 0.41 (at_risk). TTL aşımı 2 kaynak. Lag 13dk. Recrawl+canary başlatıldı.",
    "hash":"sha256:..."
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  scoring:{
    weights:{ age:0.35, lag:0.25, ttl:0.25, volatility:0.10, coverage:0.05 },
    normalize:{ maxAgeDays:365, maxLagSec:7200 },
    volatilityTable:{ "pricing":0.9, "market":0.8, "news":0.7, "docs":0.2, "faq":0.1 }
  },

  ttlDaysBySourceType:{ news:2, pricing:1, market:1, docs:90, faq:30, regulatory:7, changelog:14 },

  recrawl:{
    schedulerCron:"*/15 * * * *", // 15 dakikada bir fırsat penceresi
    deltaPreferred:true,
    backoff:{ baseSec:60, maxSec:1800 },
    budget:{ maxRequestsPerHour:300, maxBytesPerDayMB:800 },
    robotsRespect:true
  },

  reindex:{
    minChangePctForRebuild: 3,   // doküman/terim değişimi %
    canaryTrafficPct: 10,
    promoteAfterMin: 20,
    rollbackOn:{ ndcgDropPct:3.0, p95RiseMs:80 }
  },

  pingTargets:{
    pricing:{ enable:true, timeoutMs:1500 },
    status:{ enable:true, timeoutMs:1500 },
    market:{ enable:true, timeoutMs:1500 },
    custom:{ enable:true }
  },

  querySensitivity:{
    classifier:"temporal-intent-v1",
    labels:{ high:["today","now","son dakika","bugün","şimdi","aylık oran","APR","fiyat"] },
    default:"auto", escalateIf:["pricing","market","incident","release_notes"]
  },

  retrievalHints:{
    boostRecentAlpha:0.25, sinceDays:7,
    demoteOnlyIfTtlExceeded:true,
    preferSourcesWeight:1.2
  },

  integrations:{
    qo:"LIVIA-55", safety:"LIVIA-56", evidence:"LIVIA-57",
    fsync:"LIVIA-46", tune:"LIVIA-47",
    cost:"LIVIA-34", costGuard:"LIVIA-53",
    freeze:"LIVIA-51", mrf:"LIVIA-49", drills:"LIVIA-50",
    provenance:"LIVIA-38", lineage:"LIVIA-39", audit:"LIVIA-48", dist:"LIVIA-22"
  },

  rbacViews:{ observer:{ hideSourceUrls:true, showOnlyScores:true } },

  idempotencyTtlSec: 1800
}

5) Karar Mantığı (özet)

Skor: score = w_age*ageNorm + w_lag*lagNorm + w_ttl*ttlBreach + w_vol*volatilityAdj + w_cov*coverageAdj

ageNorm: en yeni dokümana göre normalize, ttlBreach: TTL aşımı binarize/şiddetli

volatilityAdj: domain volatilitesine göre risk ↑

coverageAdj: kritik domainlerde kapsama düşükse ceza

Risk Seviyesi: score ≥ blockScore → block (L55’e “stale risk — use ping/canary-only”), ≥ warnScore → at_risk.

Plan: at_risk/block → recrawl (delta>full), reindex canary, qo.retrieval.boost.hint gönder.

Zaman-Duyarlı Sorgu: qo.query.context.timeSensitivity∈{high,auto} ∧ risk → ping (pricing/market/status) + fresh cache; L56 ile disclaimer.

Cost Bilinci: recrawl/reindex bütçe aşıyorsa plan böl (kaynak önceliği: criticalDomains).

Freeze: aktif freeze → yalnız planla (schedule), uygulama yok; kart/alert üret.

6) Pipeline (Kompozisyon)

Observe: crawl/ingest/index/fsync sinyalleri → lag/age/ttl ölçümleri

Score: politika + tabloya göre tazelik skoru

Decide: risk eşiği → recrawl/reindex/ping planı + retrieval boost hints

Apply: (freeze değilse) recrawl job, canary index build; ping ve cache yazımı

Emit: snapshot, stale.risk.triggered, recrawl.scheduled, reindex.scheduled, qo.boost.hint, card/alert/metrics/report

Audit/Provenance/Lineage: tüm adımlar L38/L39/L48

Dist: rapor ve kartlar L22 ile yayılır

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (crawl.finished|ingest.finished|index.completed|fsync.lag|qo.query.context) → SCORE

SCORE → (score<warn) IDLE | (warn≤score<block) PLAN_AT_RISK | (≥block) PLAN_BLOCK

PLAN_*: (freeze? PLAN_ONLY) else APPLY → (jobs ok) EMIT → IDLE

PING PATH: qo.query.context high/auto & risk → PING → EMIT_HINTS → IDLE

Hata: ALERT; idem: aynı freshKey yinelenmesinde yalnız snapshot güncellenir

8) Kenar Durumlar

Volatil Domain: pricing/market/status kaynakları TTL aşımı olmasa bile age/lag ile at_risk olabilir.

Index Drift: ingest güncel fakat index eski → reindex canary; başarısızsa rollback.

Partial Crawl: delta eksik → full’e terfi (backoff ve bütçe kontrolü).

Robots/Legal Hold: crawl engeli → budget_exceeded|rbac_denied|legal_hold uyarıları.

Duplicate/Canonical: aynı içeriğin farklı URL’leri → canonicalize ve tek kaynağı yaşat.

Multi-TZ Tarihler: belge tarihleri normalize (Europe/Istanbul) yoksa stale yanlış pozitif önleme.

MRF/DR: failover sırasında dış kaynak ping kapasitesi sınırlanır; retry/backoff.

Observer: kaynak URL/ham veri gizli; skorlar görünür.

Freeze: yalnız plan/rapor; job uygulanmaz (uygulama sonrası otomatik tetiklenecek şekilde kuyruklanır).

9) Telemetri
{
  "freshness.metrics": {
    "event":"freshness.metrics","timestamp":"iso8601",
    "snapshots":1,"avgScore":0.41,"atRisk":1,"stale":0,
    "recrawls":1,"reindexes":1,"canaryPromotes":0,
    "avgCrawlMs":8200,"avgIndexMs":92000,
    "pingOkPct":96,"budgetUsePct":72
  }
}

10) Dosya Yapısı (öneri)
services/livia/knowledgeFreshnessGuard.ts        # FSM + orchestrator
services/livia/lib/fresh/score.ts                # tazelik skoru (age/lag/ttl/volatility/coverage)
services/livia/lib/fresh/plan.ts                 # recrawl/reindex/ping planlayıcı + bütçe/güvenlik
services/livia/lib/fresh/apply.ts                # crawler/indexer/connector köprüleri
services/livia/lib/fresh/hints.ts                # Qo retrieval boost/demote tercihleri
services/livia/lib/fresh/report.ts               # md/html + grafik (inline SVG)
services/livia/lib/bridges.ts                    # L22/L26/L34/L38/L39/L46/L47/L48/L49/L50/L51/L53/L55/L56/L57
services/livia/state/freshStore.ts               # idem index + snapshot cache + job queue
services/livia/__tests__/knowledgeFreshnessGuard.test.ts
cfg/livia.fresh.yaml

11) Test İskeleti (Jest/Vitest)

TTL Aşımı: docs TTL 30g, age 45g → stale.risk.triggered(warn) + recrawl.scheduled

Index Lag: ingest güncel, index lag 15dk → reindex.scheduled(canary 10%)

Temporal Query: “bugün/şimdi” → ping.request(pricing) ve Qo’ya boost_recent

Freeze: state=frozen → planlandı ama apply edilmedi; kart freeze_active

Bütçe Limit: recrawl talebi > saatlik kota → throttle ve batch

Rollback: canary promote sonrası NDCG düşüşü %3.5 → rollback

Idempotency: aynı freshKey ikinci çalıştırmada yalnız snapshot/güncelleme

Rapor: md/html üretildi; L22 dağıtıldı; L38/L48 kaydedildi

12) Örnek Akış (kısa)

12:05 SCORE: kb_default score 0.67 (at_risk), lag 13dk, 2 TTL aşımı

12:06 PLAN: pricing/news recrawl (delta), reindex canary %10

12:20 APPLY: crawl bitti, index canary hazır → Qo’ya boost_recent+demote_stale ipuçları

12:45 EVALUATE: canary iyi (NDCG -0.4pp, p95 +18ms) → promote; kart/rapor/metrik yayımlandı

13) SLO

Snapshot p95 < 50 ms

Recrawl tetik gecikmesi ≤ 5 dk (at_risk)

Canary promote/rollback kararı ≤ 30 dk içinde

Yanlış blok ≤ %1, kaçan stale risk ≤ %2

Idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-59 · personalizationPolicyEngine.ts — Geniş Prompt v3 (+ Çok-Kısıtlı Optimizasyon, Segment-DSL, Adil Kişiselleştirme)

Amaç:
Tenant/rol/tier/bölge/dil/kanal bağlamına göre model/pipeline/cevap stili ve UI/guardrail politikalarını dinamik ve denetlenebilir biçimde belirlemek.
Hedef: kalite (NDCG/MRR/CTR), maliyet ($/sorgu) ve SLO (p95/hata oranı) arasında çok-kısıtlı optimizasyon yaparak kişiselleştirme sunmak; aynı zamanda adil kullanım (fairness), gizlilik, etik, yasal kısıtları korumak.
Entegrasyon: Qo (L55) plan seçimi, Traffic Shaper (L54) katmanları, KB Tuning (L47) profilleri, Safety (L56)/ Evidence (L57), Freshness (L58), Cost Guard (L53), Freeze (L51), Provenance (L38), Lineage (L39), Audit (L48).
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: policy|mlops|ops|compliance tam; observer salt okur

Gizlilik: PII yok; kullanıcı/operatör kimlikleri L21 ile hash; “do-not-personalize” bayrağına saygı

İdempotency: persKey = tenant + tier + region + locale + channel + policyHash + windowISO

Observability: spans (pers.resolve|score|apply|report) + metrics; bütün kararlar WORM (L38) ve Lineage (L39)

Uyum/Etik: L26; adil kullanım kısıtları (korunan özelliklere göre kişiselleştirme yok)

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "personalization.policy.updated": {
    "event":"personalization.policy.updated","timestamp":"iso8601",
    "policyId":"pers-v1",
    "objectives":{"quality":0.5,"latency":0.25,"cost":0.25},        // ağırlıklar
    "constraints":{
      "latencyP95Ms":{"max":900,"goldBonus":-100},
      "costPerQueryUsd":{"max":0.015,"bronzeHard":0.008},
      "quality":{"ndcg10Min":0.50,"mrr10Min":0.55}
    },
    "fairness":{"protectedAttributes":["age","gender","religion"],"noUse":true,"proxyGuard":true},
    "segmentDSL":[
      {
        "if":"tier=gold AND region in ['TR','EU'] AND lang in ['tr','auto']",
        "then":{
          "qo.plan":"P-hybrid-fast",
          "reranker":"ce-small",
          "synthModel":"gpt-m",
          "ui.variant":"gold-tr",
          "style":{"locale":"tr-TR","units":"metric","currency":"USD"}
        }
      },
      {
        "if":"tier=bronze OR channel='batch'",
        "then":{
          "qo.plan":"P-bm25-lowcost",
          "reranker":"none","synthModel":"gpt-m",
          "caps":{"maxTokens":600,"kb.topK":50}
        }
      }
    ],
    "dayparting":[{"windowLocal":"09:00-18:00","boost":"quality:+0.05"},{"windowLocal":"18:00-23:59","boost":"latency:+0.05"}],
    "flags":{"doNotPersonalizeRespect":true,"abEnable":true}
  },

  "tenant.profile.updated": {
    "event":"tenant.profile.updated","timestamp":"iso8601",
    "tenant":"t#acme","region":"TR","locale":"tr-TR","tier":"gold",
    "channels":["web","api"],"vertical":"finance","consent":{"personalization":true}
  },

  "user.preference.updated": {
    "event":"user.preference.updated","timestamp":"iso8601",
    "user":"user#f0a1","tenant":"t#acme","locale":"tr-TR","units":"metric",
    "doNotPersonalize":false,"topics":{"block":["politics"],"favor":["devops"]}
  },

  "context.request": {
    "event":"context.request","timestamp":"iso8601",
    "id":"q#7f9a12","tenant":"t#acme","user":"user#f0a1",
    "tier":"gold","region":"TR","locale":"auto|tr-TR|en-US","channel":"web",
    "mode":"search|answer|chat","deadlineMs":1200,
    "hints":{"qualityBias":"+0.03","costHardUsd":0.02}
  },

  "freeze.state.changed": {
    "event":"freeze.state.changed","timestamp":"iso8601",
    "state":"frozen|thawed","scope":"service:kb_api","reason":"audit|mrf|drill"
  },

  "slo.guard.triggered|slo.guard.recovered": {
    "event":"slo.guard.triggered","timestamp":"iso8601",
    "serviceId":"kb_api","slo":"latency_p95","severity":"high","burnPct":6.4
  },

  "cost.guard.triggered|cost.guard.recovered": {
    "event":"cost.guard.triggered","timestamp":"iso8601",
    "component":"inference|search_stack|total","severity":"high"
  },

  "ab.experiment.registered": {
    "event":"ab.experiment.registered","timestamp":"iso8601",
    "expId":"EXP-qo-plan","scope":"tenant:t#acme",
    "arms":[{"id":"A","sharePct":50},{"id":"B","sharePct":50}],
    "metrics":["ndcg10","mrr10","p95ms","costUsd","acceptRate"],
    "guardrails":{"p95msMax":950,"costUsdMax":0.016,"ndcg10Min":0.50}
  }
}

3) Çıktılar (Out)
{
  "personalization.decision.ready": {
    "event":"personalization.decision.ready","timestamp":"iso8601",
    "id":"q#7f9a12","policyId":"pers-v1","segment":"gold-tr",
    "plan":{"qo.plan":"P-hybrid-fast","reranker":"ce-small","synthModel":"gpt-m","kb.topK":60,"maxTokens":700},
    "localization":{"locale":"tr-TR","units":"metric","currency":"USD"},
    "ui":{"variant":"gold-tr","disclaimer":"tr-finance?"},
    "constraintsApplied":{"p95MsMax":900,"costUsdMax":0.015,"ndcg10Min":0.50},
    "reasoning":["segmentDSL#1 matched","dayparting:quality+0.05 applied"],
    "hash":"sha256:..."
  },

  "personalization.hint.qo": {
    "event":"personalization.hint.qo","timestamp":"iso8601",
    "id":"q#7f9a12","overrides":{"plan":"P-hybrid-fast","reranker":"ce-small","synthModel":"gpt-m"},
    "caps":{"kb.topK":60,"maxTokens":700}
  },

  "personalization.hint.shape": {
    "event":"personalization.hint.shape","timestamp":"iso8601",
    "svc":"kb_api","tier":"gold","priorityBoost":2,"deadlineMs":1100
  },

  "personalization.ui.assets": {
    "event":"personalization.ui.assets","timestamp":"iso8601",
    "variantId":"gold-tr","strings":{"greet":"Merhaba","cta":"Devam"},
    "style":{"dateFmt":"DD MMM YYYY","thousandsSep":"."}
  },

  "personalization.fairness.snapshot": {
    "event":"personalization.fairness.snapshot","timestamp":"iso8601",
    "scope":"tenant:t#acme","period":"1d",
    "parity":{"acceptRate":{"gold":0.78,"silver":0.61,"bronze":0.55},"tierDisparity":"ok"},
    "proxyScan":{"passed":true}
  },

  "personalization.card": {
    "event":"personalization.card","timestamp":"iso8601",
    "title":"Kişiselleştirme Aktif — gold-tr",
    "body":"P-hybrid-fast • ce-small • gpt-m • p95≤900ms • $≤0.015/sorgu.",
    "severity":"info","ttlSec":600
  },

  "personalization.alert": {
    "event":"personalization.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"idem_duplicate|rbac_denied|freeze_active|constraint_conflict|fairness_violation|proxy_flag|dq_gap"
  },

  "personalization.metrics": {
    "event":"personalization.metrics","timestamp":"iso8601",
    "decisions":1,"segmentsUsed":1,"abActive":true,
    "avgP95Ms":842,"avgCostUsd":0.011,"quality":{"ndcg10":0.56,"mrr10":0.61},
    "fairnessOk":true
  },

  "personalization.report.ready": {
    "event":"personalization.report.ready","timestamp":"iso8601",
    "path":"data/pers/2025-09-16/t_acme/report.md",
    "summary":"gold-tr segmenti, p95 842ms, ndcg@10 0.56, maliyet $0.011. Fairness ok.",
    "hash":"sha256:..."
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul", currency:"USD" },

  objectives:{ quality:0.5, latency:0.25, cost:0.25 },   // ağırlık tabanı
  constraints:{
    latencyP95Ms:{ max:900, goldBonus:-100, bronzeRelax:+100 },
    costPerQueryUsd:{ max:0.015, bronzeHard:0.008 },
    quality:{ ndcg10Min:0.50, mrr10Min:0.55 }
  },

  fairness:{
    protectedAttributes:["age","gender","religion","ethnicity"],
    noUse:true,                      // korunanların doğrudan kullanımı yasak
    proxyGuard:true,                 // proxy sinyaller (coarse usage) taranır
    parityChecks:["acceptRate","latencyP95","costUsd"],
    disparityTolerancePct:10
  },

  segmentDSL:{
    ops:["AND","OR","NOT"],
    fields:["tier","region","locale","lang","channel","vertical","consent.personalization","doNotPersonalize"],
    comparators:[">=","=","in","matches"],
    examples:[
      "tier=gold AND region in ['TR','EU']",
      "doNotPersonalize=true → enforce: plan='P-bm25-lowcost', reranker='none'"
    ]
  },

  defaults:{
    plan:"P-vec-lite", reranker:"ce-small", synthModel:"gpt-m",
    caps:{ "kb.topK":60, "maxTokens":700 },
    ui:{ variant:"default", locale:"tr-TR", units:"metric" }
  },

  dayparting:[
    { windowLocal:"09:00-18:00", boosts:{ quality:+0.05 } },
    { windowLocal:"18:00-23:59", boosts:{ latency:+0.05 } }
  ],

  ab:{ enable:true, minSample:500, guardrails:{ p95MsMax:950, costUsdMax:0.016, ndcg10Min:0.50 } },

  integrations:{
    qo:"LIVIA-55", shape:"LIVIA-54", tune:"LIVIA-47",
    cost:"LIVIA-34", costGuard:"LIVIA-53", slo:"LIVIA-32",
    safety:"LIVIA-56", evidence:"LIVIA-57", fresh:"LIVIA-58",
    freeze:"LIVIA-51", provenance:"LIVIA-38", lineage:"LIVIA-39", audit:"LIVIA-48", dist:"LIVIA-22"
  },

  rbacViews:{ observer:{ hideDSL:true, showOnlyDecisions:true } },

  cache:{ ttlSec:900, keyBy:["tenant","tier","region","locale","channel","policyHash"] },

  idempotencyTtlSec: 900
}

5) Karar Mantığı (özet)

Segment Eşleştirme: tenant/tier/region/locale/channel/lang/consent → Segment-DSL kurallarını sırayla değerlendir; ilk eşleşen + varsayılanlar birleşik olur (most_specific_overrides).

Çok-Kısıtlı Optimizasyon: hedef fonksiyon score = w_q*Q - w_l*L - w_c*C; kısıtlar: p95 ≤ limit, cost ≤ limit, NDCG/MRR ≥ min. Çakışma → constraint_conflict uyarısı ve en yakın feasible profil seçimi.

Fairness & Gizlilik: korunan özellikler politikada kullanılamaz; proxyGuard ile korelasyon taraması; eşik aşımı → fairness_violation ve varsayılan profile düş.

Do-Not-Personalize: kullanıcı/tenant bayrağı → kişiselleştirme kapalı; yalnız güvenli varsayılan.

SLO/Cost Etkisi: L32/L53 uyarısında latency/cost ağırlıkları ↑, plan düşürme (topK↓, reranker none, tokens↓).

Freeze: L51 frozen → politika yazılmaz, yalnız resolve ve hint üretilir.

AB & Dayparting: trafik dilimlerine göre ağırlık düzelt; AB aktifse kolları guardrail altında dağıt.

Localization: dil/ülke → sayı/tarih/para biçimleri, UI stringleri, uyarı/disclaimer şablonları.

6) Pipeline (Kompozisyon)

Load: personalization.policy.updated, tenant.profile.updated, user.preference.updated

Resolve: context.request → segment match → plan & overrides → Qo/Shape ipuçları

Constrain: SLO/Cost/Freshness/Safety bağlamını uygula (kısıtlar)

Fairness Scan: proxy sinyalleri ve tier dağılımında parity analizi

Emit: decision.ready, hint.qo, hint.shape, ui.assets, card/alert/metrics

Audit: karar & gerekçeler WORM/Lineage; rapor L48

Cache: persKey ile snapshot sakla

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (policy/tenant/user updated) READY

READY → (context.request) RESOLVE → CONSTRAIN → FAIRNESS → EMIT → IDLE

Hata: ALERT; idem: aynı persKey yinelemesinde yan etki yok (yalnız kart/metrik güncellenir)

8) Kenar Durumlar

Çelişen DSL Kuralları: birden çok kural uygunsa en spesifik (en çok alanı eşleyen) kazanır; eşitlikte son güncellenen.

Do-Not-Personalize: true → tüm DSL atlanır; varsayılan plan + minimal caps.

Minor Kullanıcı: kişiselleştirme seviyesi kısıtlanır; pazarlama/özel ilgi temelli varyantlar devre dışı.

Proxy Şüphesi: bölge + saat + cihaz → korunan özelliğe yüksek korelasyon → uyarı ve otomatik sade profil.

Vertical Kısıt: vertical=health/legal/finance → Safety (L56) consent/disclaimer zorunlu.

Freshness At-Risk: L58 at_risk → boost_recent, demote_stale ipuçlarını karar içine göm.

AB Guardrail İhlali: kol B p95>950ms → otomatik pause ve kol A’ya geri sar.

Freeze Aktif: yalnız karar/hint/rapor; persist yok.

Observer Görünümü: DSL gizli; yalnız sonuç ve kısıt özetleri.

9) Telemetri
{
  "personalization.metrics": {
    "event":"personalization.metrics","timestamp":"iso8601",
    "decisions":1,"segmentsUsed":1,
    "avgScore":0.62,"avgP95Ms":842,"avgCostUsd":0.011,
    "quality":{"ndcg10":0.56,"mrr10":0.61},
    "fairnessOk":true,"abActive":true,"abAutoPaused":0
  }
}

10) Dosya Yapısı (öneri)
services/livia/personalizationPolicyEngine.ts        # FSM + resolver
services/livia/lib/pers/dsl.ts                       # Segment-DSL değerlendirici
services/livia/lib/pers/optimizer.ts                 # çok-kısıtlı optimizasyon (quality/latency/cost)
services/livia/lib/pers/fairness.ts                  # parity/proxy guard (korunan kullanımı yok)
services/livia/lib/pers/localize.ts                  # locale/units/currency/ui strings
services/livia/lib/pers/hints.ts                     # Qo/Shape override & caps üretimi
services/livia/lib/pers/report.ts                    # md/html rapor + inline SVG
services/livia/lib/bridges.ts                        # L21/L22/L26/L32/L34/L38/L39/L41/L45/L47/L48/L51/L53/L54/L55/L56/L57/L58
services/livia/state/persStore.ts                    # idem index + cache + fairness snapshot
services/livia/__tests__/personalizationPolicyEngine.test.ts
cfg/livia.pers.yaml

11) Test İskeleti (Jest/Vitest)

Gold-TR Eşleşmesi: segmentDSL#1 → P-hybrid-fast, ce-small, gpt-m, locale tr-TR

Bronze/Batch: P-bm25-lowcost, reranker none, caps uygulanır

SLO/COST Baskısı: L32/L53 tetik → plan düşürme, p95≤limit, cost≤limit

Fairness: acceptRate farkı > %10 → fairness_violation ve varsayılan profile düşüş

Do-Not-Personalize: true → kişiselleştirme kapalı

AB Guardrail: kol B p95>950 → auto-pause

Freeze: frozen → freeze_active, persist yok; yalnız hints

Idempotency: aynı persKey yinelemesinde yan etki yok

Rapor: md/html üretildi; L38/L48 kaydı

12) Örnek Akış (kısa)

14:02 context.request(gold, TR, web) → RESOLVE: segment gold-tr

CONSTRAIN: p95≤900, $≤0.015, NDCG≥0.50 → P-hybrid-fast, ce-small, gpt-m, topK 60, tokens 700

FAIRNESS: parity “ok”; proxyGuard “passed”

EMIT: Qo/Shape hints + UI assets + card/metrics + rapor

13) SLO

Resolve p95 < 20 ms (cache varken <10 ms)

Hatalı segment oranı ≤ %1

Fairness uyarısı yanlış pozitif ≤ %2, kaçan ihlal ≤ %1

Idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-60 · multilingualAdaptationLayer.ts — Geniş Prompt v3 (+ Oto-Dil Algılama, Terminoloji Zorlaması, Biçim/Üslup Uyumlama, Doğrulama)

Amaç:
Sorgu ve yanıtları çok dilli akışta güvenli ve tutarlı biçimde algıla → çevir (gerekirse) → uyarlama (terminoloji/üslup/biçim) → doğrula → teslim et.
Hedef: kalite (anlam koruma, terminoloji tutarlılığı), SLO (p95 gecikme), maliyet (token/çeviri), güvenlik (PII/toksisite) ve kanıt (atıf hizalama) standartlarını korumak.
Entegrasyon: Qo (L55), Safety (L56), Evidence (L57), Freshness (L58), Personalization (L59), Traffic (L54), KB Tuning (L47), FSync (L46), Cost (L34/53), Freeze (L51), Audit/Provenance/Lineage (L48/L38/L39).
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: mlops|policy|localization|ops tam, observer salt okur

Gizlilik: PII çeviri öncesi ve sonrası (L56) maskelenir; kullanıcı/operatör kimliği L21 hash

İdempotency: mlangKey = queryId + srcLang + tgtLang + styleProfile + glossaryHash + windowISO

Observability: spans (mlang.detect|plan|translate|adapt|verify|finalize) + metrics

Uyumluluk: tüm kararlar L26 etik, L38 WORM append, L39 lineage

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "mlang.policy.updated": {
    "event":"mlang.policy.updated","timestamp":"iso8601",
    "policyId":"mlang-v1",
    "defaultTarget":"auto",                         // auto → user/tenant/l59’dan
    "preserveBlocks":["code","math","urls","emails","citations","footnotes"],
    "style":{"tone":"neutral","formality":"medium","localeAwareNumbers":true,"spellVariant":"tr-TR"},
    "constraints":{"maxLatencyMs":250,"maxCostUsdPerQuery":0.004},
    "fallbacks":{"pivotLang":"en","lowResourceDegrade":"lexical+glossary_only"}
  },

  "translation.engine.catalog": {
    "event":"translation.engine.catalog","timestamp":"iso8601",
    "engines":[
      {"id":"nmt-fast","kind":"NMT","langs":["tr","en","ar","ru","de"],"latencyMsP95":120,"costUsdPerK":0.2},
      {"id":"nmt-quality","kind":"NMT","langs":["tr","en","fr","de"],"latencyMsP95":240,"costUsdPerK":0.35},
      {"id":"llm-translate","kind":"LLM","langs":["*"],"latencyMsP95":420,"costUsdPerK":0.9}
    ],
    "routing":{"default":"nmt-fast","hiQuality":"nmt-quality","fallback":"llm-translate"}
  },

  "glossary.updated": {
    "event":"glossary.updated","timestamp":"iso8601",
    "namespace":"kb_default:tr",
    "entries":[
      {"src":"retrieval-augmented generation","tgt":"retrieval destekli üretim"},
      {"src":"reranker","tgt":"yeniden sıralayıcı"}
    ],
    "enforce":true
  },

  "style.guide.updated": {
    "event":"style.guide.updated","timestamp":"iso8601",
    "profileId":"sg-tr-tech",
    "rules":{
      "quoteStyle":"«»|“”","listMarker":"-","codeFence":"```",
      "capitalization":"turkish","diacritics":"strict","genderNeutrality":true
    }
  },

  "terminology.enforce.list": {
    "event":"terminology.enforce.list","timestamp":"iso8601",
    "items":[{"src":"GPU","tgt":"GPU"},{"src":"token","tgt":"token"}],
    "caseSensitive":true
  },

  "query.request": {
    "event":"query.request","timestamp":"iso8601",
    "id":"q#7f9a12","text":"AVAX staking APR nedir?","lang":"auto|tr|en","profile":"tr",
    "mode":"answer","hints":{"deadlineMs":1200,"stream":true}
  },

  "qo.stage.output": {
    "event":"qo.stage.output","timestamp":"iso8601",
    "id":"q#7f9a12","stage":"synthesize|finalize","chunk":"partial answer text",
    "citations":["doc#1","doc#7"],"tokens":{"prompt":420,"completion":128},"lang":"en|tr|auto"
  },

  "personalization.decision.ready": {
    "event":"personalization.decision.ready","timestamp":"iso8601",
    "id":"q#7f9a12","localization":{"locale":"tr-TR","units":"metric","currency":"USD"}
  },

  "evidence.validation.ready": {
    "event":"evidence.validation.ready","timestamp":"iso8601",
    "id":"q#7f9a12","coveragePct":84,"claims":[{"idx":0,"status":"entailed"}]
  },

  "freeze.state.changed": {
    "event":"freeze.state.changed","timestamp":"iso8601",
    "state":"frozen|thawed","scope":"service:kb_api","reason":"audit|mrf|drill"
  }
}

3) Çıktılar (Out)
{
  "mlang.detected": {
    "event":"mlang.detected","timestamp":"iso8601",
    "id":"q#7f9a12","srcLang":"en","tgtLang":"tr","confidence":0.98,
    "reason":"l59 locale=tr-TR; query.lang=auto; chunk.lang=en"
  },

  "mlang.plan.ready": {
    "event":"mlang.plan.ready","timestamp":"iso8601",
    "id":"q#7f9a12",
    "engine":"nmt-quality","pivot":"none|en",
    "preserve":["code","citations","footnotes"],
    "styleProfile":"sg-tr-tech","glossary":"kb_default:tr",
    "budget":{"latencyMs":250,"costUsd":0.0032},
    "hash":"sha256:..."
  },

  "mlang.redaction.in": {
    "event":"mlang.redaction.in","timestamp":"iso8601",
    "id":"q#7f9a12","areas":["query|chunk"],"piiMasked":2
  },

  "mlang.translation.chunk": {
    "event":"mlang.translation.chunk","timestamp":"iso8601",
    "id":"q#7f9a12","seq":3,"src":"...","tgt":"...","engine":"nmt-quality",
    "preserved":{"codeBlocks":1,"citations":2}
  },

  "mlang.adaptation.applied": {
    "event":"mlang.adaptation.applied","timestamp":"iso8601",
    "id":"q#7f9a12",
    "steps":["glossary_enforce","number_format_locale","date_fmt_locale","style_rules","terminology_lock"],
    "unitsConverted":[],"currencyConverted":false
  },

  "mlang.verify.snapshot": {
    "event":"mlang.verify.snapshot","timestamp":"iso8601",
    "id":"q#7f9a12",
    "scores":{"COMET":0.84,"TER":0.19,"styleCompliance":0.93,"toxicityDelta":-0.01},
    "terminologyMismatches":0,"citationPreserved":true,
    "status":"ok|at_risk|retry_pivot"
  },

  "mlang.answer.final": {
    "event":"mlang.answer.final","timestamp":"iso8601",
    "id":"q#7f9a12","lang":"tr","stream":true,
    "answerMd":"…(Türkçe, uygun terminoloji ve biçim)…","citations":["doc#1","doc#7"]
  },

  "mlang.card": {
    "event":"mlang.card","timestamp":"iso8601",
    "title":"Çok Dilli Uyum — tr-TR (glossary enforced)",
    "body":"nmt-quality • COMET 0.84 • stil uyumu %93 • atıf korundu.",
    "severity":"info","ttlSec":600
  },

  "mlang.alert": {
    "event":"mlang.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"idem_duplicate|rbac_denied|engine_timeout|pivot_retry|glossary_violation|style_mismatch|freeze_active"
  },

  "mlang.metrics": {
    "event":"mlang.metrics","timestamp":"iso8601",
    "translatedChars":1820,"chunks":6,"p50Ms":88,"p95Ms":210,
    "avgCostUsd":0.0026,"COMETavg":0.83,"styleComplianceAvg":0.92,
    "piiMasked":2,"citationPreservePct":100
  },

  "mlang.report.ready": {
    "event":"mlang.report.ready","timestamp":"iso8601",
    "path":"data/mlang/2025-09-16/q_7f9a12/report.md",
    "summary":"tr-TR çıktı, glossary & stil uygulandı, COMET 0.84, atıf/PII korundu.",
    "hash":"sha256:..."
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  detection:{
    model:"langid-fast-v2",
    threshold:0.85,
    mixedChunkStrategy:"majority_vote+per_chunk",
    trDiacriticsAware:true                    // I/İ, ı/i ayrımı
  },

  routing:{
    engineByQuality:{ default:"nmt-fast", high:"nmt-quality", llm:"llm-translate" },
    pick:"argmin(cost) s.t. p95<=250ms ∧ quality>=target",
    qualityTargets:{ COMET:0.80, TER:0.25 },
    pivot:{ enable:true, lang:"en", when:{ lowResource:true, backoff:true } }
  },

  adaptation:{
    glossary:{ enforce:true, caseSensitive:false, fallbackSuggest:true },
    styleProfile:"sg-tr-tech",
    styleRules:{
      quoteStyle:"“”",
      capitalization:"turkish",      // Türkçe büyük/küçük harf kuralları
      diacritics:"strict",
      genderNeutrality:true
    },
    localeFormat:{ numbers:true, dates:true, currency:false }, // currency sadece açık istekle
    keepSections:["code","math","urls","citations","footnotes"],
    entityPolicy:{ names:"preserve_original|transliterate_if_known" }
  },

  verification:{
    metrics:["COMET","TER","styleCompliance","toxicityDelta"],
    thresholds:{ COMET:0.80, TER:0.25, styleCompliance:0.90, toxicityDeltaMax:0.05 },
    citationPreserveRequired:true,
    retry:{ pivotOnFail:true, maxRetries:1 }
  },

  streaming:{
    enable:true, chunkChars:600, graceTokens:20,
    cutOnSafetyViolation:true                   // L56 ile birlikte
  },

  conversions:{
    units:{ enable:false, allow:["metric↔imperial"], requireUserOptIn:true },
    currency:{ enable:false, fxSource:"L34/L53", requireExplicit:true }
  },

  integrations:{
    qo:"LIVIA-55", safety:"LIVIA-56", evidence:"LIVIA-57",
    fresh:"LIVIA-58", pers:"LIVIA-59", shape:"LIVIA-54",
    tune:"LIVIA-47", fsync:"LIVIA-46",
    cost:"LIVIA-34", costGuard:"LIVIA-53",
    freeze:"LIVIA-51", provenance:"LIVIA-38", lineage:"LIVIA-39", audit:"LIVIA-48", dist:"LIVIA-22"
  },

  rbacViews:{ observer:{ hideSourceText:true, showOnlyScores:true } },

  cache:{ ttlSec:900, keyBy:["srcLang","tgtLang","styleProfile","glossaryHash"] },

  idempotencyTtlSec: 900
}

5) Karar Mantığı (özet)

Algılama: query/qo.chunk dilini saptar; L59 locale ve kullanıcı tercihiyle hedef dili seç.

Plan: kalite hedefleri ve SLO≤250ms altında motor seçimi; karma dil → per-chunk.

Redaksiyon (In): PII (L56) → mask; preserveBlocks maskeleri (code/citations/footnotes) korunur.

Çeviri: seçilen NMT/LLM; düşük kaynak → pivot EN (isteğe bağlı).

Uyarlama: terminoloji/glossary zorlaması, Türkçe büyük harf/diakritik, liste/alıntı/başlık biçimi; locale-aware sayı/tarih.

Doğrulama: COMET/TER + stil uyumu + toksisite delta; atıf koruması (L57).

Geri Dönüş: eşikler tutmazsa retry_pivot (tek deneme); olmazsa “at_risk” + yumuşatılmış dil uyarısı.

Freeze: aktifse politika güncellemesi yapılmaz; sadece plan/uyarlama uygulanır ve raporlanır.

6) Pipeline (Kompozisyon)

Detect → mlang.detected

Plan → motor seçimi + preserve seti + bütçe

Redact-In → PII & blok koruma

Translate (stream) → chunk chunk; preserve yer tutucular

Adapt → glossary/style/locale + terminoloji kilidi

Verify → COMET/TER/stil/toksisite + atıf koruma

Finalize → placeholder geri koy, akışla teslim; kart/alert/metrics/rapor

Audit → WORM/Lineage; dağıtım (L22)

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (query.request|qo.stage.output) DETECT

DETECT → PLAN → REDACT_IN → TRANSLATE → ADAPT → VERIFY → FINALIZE → DONE

VERIFY sonucu at_risk → RETRY_PIVOT? (opsiyonel) → FINALIZE

Hata: ALERT; idem: aynı mlangKey yinelemesinde yan etki yok (yalnız snapshot/metrik güncellenir)

8) Kenar Durumlar

TR Diakritik Sorunları: I/İ/ı/i yanlış → diacritics=strict ve otomatik düzeltme.

Kod/Matematik: triple-fence içi asla çevrilmez; satır sonları korunur.

Atıf Ayraçları: [^n] dipnotları ve URL’ler korunur; çevrilmez.

Ad/Marka/Ürün: preserve_original, yalnız bilinen transliterasyon varsa teklif edilir.

Karışık Dil Paragrafları: per-sentence dil; tek chunk içinde çok dilli işleme.

Toksisite Drift: çeviri sonrası toksisite ↑ → L56 stream guard ile mask/replace.

Tarih/Para/Sayı: TR yerel biçim; para/döviz dönüşümü yalnız açık istekle.

Düşük Kaynak Dil: pivot EN, yetmezse lexical+glossary_only (terim tabanlı).

Observer görünümü: kaynak metin gizli, yalnız skor/özet.

Freeze: frozen → freeze_active uyarısı; kalıcı politika yazımı yok.

9) Telemetri
{
  "mlang.metrics": {
    "event":"mlang.metrics","timestamp":"iso8601",
    "translatedChars":1820,"chunks":6,
    "p50Ms":88,"p95Ms":210,"avgCostUsd":0.0026,
    "COMETavg":0.83,"TERavg":0.21,"styleComplianceAvg":0.92,
    "terminologyMismatches":0,"pivotUsedPct":4,
    "citationPreservePct":100,"piiMasked":2
  }
}

10) Dosya Yapısı (öneri)
services/livia/multilingualAdaptationLayer.ts        # FSM + orchestrator
services/livia/lib/mlang/detect.ts                   # dil algılama + per-chunk karar
services/livia/lib/mlang/route.ts                    # motor seçimi (SLO/cost/quality)
services/livia/lib/mlang/redact.ts                   # PII & block-preserve maskeleri
services/livia/lib/mlang/translate.ts                # NMT/LLM/pivot çeviri
services/livia/lib/mlang/adapt.ts                    # glossary/style/locale/terminoloji kilidi
services/livia/lib/mlang/verify.ts                   # COMET/TER/stil/toksisite + atıf koruma
services/livia/lib/mlang/finalize.ts                 # placeholder restore + stream
services/livia/lib/bridges.ts                        # L21/L22/L26/L32/L34/L38/L39/L46/L47/L48/L51/L53/L54/L55/L56/L57/L58/L59
services/livia/state/mlangStore.ts                   # idem index + cache + glossary hash
services/livia/__tests__/multilingualAdaptationLayer.test.ts
cfg/livia.mlang.yaml

11) Test İskeleti (Jest/Vitest)

Algılama: EN chunk, hedef TR (locale tr-TR) → mlang.detected(en→tr)

Glossary & Stil: “retrieval-augmented generation” → “retrieval destekli üretim”; tırnak “”; İ/ı doğru

Preserve: code fence ve [^1] dipnot korundu

Doğrulama: COMET ≥0.80, TER ≤0.25, stil ≥0.90; geçmezse pivot retry

Toksisite Delta: |Δ| ≤ 0.05; aşarsa L56 ile mask/replace

Atıf: citationPreserved=true; L57 kapsama düşmez

SLO/Cost: p95≤250ms; maliyet ≤ 0.004$/sorgu

Freeze: frozen → freeze_active; politika yazılmaz

Idempotency: aynı mlangKey tekrarında yan etki yok; yalnız metrik güncellenir

Rapor: md/html üretildi; L38/L48 kaydedildi

12) Örnek Akış (kısa)

10:12 qo.stage.output(lang=en, stream) → DETECT (tgt=tr, pers L59’dan)

PLAN: nmt-quality, glossary kb_default:tr, stil sg-tr-tech, preserve code/citations

REDACT_IN: 2 PII alan maskelendi

TRANSLATE: 6 chunk çevrildi; code & dipnot korunarak

ADAPT: terminoloji/stil/biçim uygulandı; sayılar TR biçimi

VERIFY: COMET 0.84, TER 0.19, stil 0.93, toksisite Δ -0.01 → ok

FINALIZE: mlang.answer.final(tr) + kart/rapor/metrik yayımlandı

13) SLO

Çeviri+Uyarlama p95 < 250 ms (sorgu başına; stream chunk’ı başına <90 ms)

Terminoloji uyumu hata oranı ≤ %1

Atıf koruma = %100 (dipnot/URL bozulmaz)

Yanlış dil algılama ≤ %1.5

Idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-61 · feedbackLearningLooper.ts — Geniş Prompt v3 (+ Güvenli Öğrenme Döngüsü, Karşı-Olgusal Değerlendirme, Politika Öneri→Canary→Promote)

Amaç:
Kullanıcı ve sistem geri bildirimlerinden (explicit: beğen/puan/düzeltme/rapor; implicit: dwell/abandon/eskalasyon/tekrar-sorgu/konversiyon; sistem: SLO, maliyet, kanıt/safety) online+offline bir döngü kurup plan/parametre/pipeline ayarlarını güvenli biçimde iyileştirmek:
topla → normalize → ilişkilendir (attribution) → öğren (bandit/linUCB/TS) → karşı-olgusal değerlendir (IPS/DR) → öneri üret → canary (L45) → guardrail (SLO/Cost/Safety/Fairness) → promote/rollback → raporla.
Entegrasyon: Qo (L55), Traffic (L54), KB Tuning (L47), Cost Guard (L53), Safety (L56), Evidence (L57), Freshness (L58), Freeze (L51), Audit/Provenance/Lineage (L48/L38/L39), Release Freeze (L51).
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; gün penceresi 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: mlops|policy|ops|compliance tam, observer salt okur

Gizlilik: PII yok; kullanıcı/operatör kimlikleri L21 ile hash; “do-not-personalize” ve “opt-out-of-learning” bayraklarına saygı

İdempotency: learnKey = windowISO + scope + policyHash + datasetHash

Observability: spans (learn.collect|join|attrib|estimate|propose|rollout|report) + metrics

Uyumluluk: karar/öneri/deneyler WORM (L38) ve Lineage (L39); L26 etik kısıtları

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "feedback.user.thumbs": {
    "event":"feedback.user.thumbs","timestamp":"iso8601",
    "id":"q#7f9a12","tenant":"t#acme","user":"user#f0a1",
    "thumb":"+1|-1","reason":"helpful|wrong|outdated|unsafe|other","freeText":"..."
  },

  "feedback.user.rating": {
    "event":"feedback.user.rating","timestamp":"iso8601",
    "id":"q#7f9a12","score":1..5,"dimensions":{"accuracy":5,"usefulness":4,"style":4}
  },

  "feedback.user.edit.patch": {
    "event":"feedback.user.edit.patch","timestamp":"iso8601",
    "id":"q#7f9a12","before":"...","after":"...","diffChars":182,
    "labels":{"fix_kind":"factual|style|format","severity":"low|med|high"}
  },

  "feedback.user.flag": {
    "event":"feedback.user.flag","timestamp":"iso8601",
    "id":"q#7f9a12","category":"safety|privacy|bias|copyright|other"
  },

  "session.behavior.snapshot": {
    "event":"session.behavior.snapshot","timestamp":"iso8601",
    "id":"q#7f9a12","metrics":{
      "dwellMs":12800,"abandon":false,"followupWithinMin":12,"escalation":false,"conversion":true
    }
  },

  "qo.decision.path": {
    "event":"qo.decision.path","timestamp":"iso8601",
    "route":"hybrid","planId":"P-hybrid-fast",
    "params":{"topK":60,"reranker":"ce-small","model":"gpt-m","maxTokens":700},
    "propensity":0.62, "variant":"A|B"
  },

  "slo.window.metrics": {
    "event":"slo.window.metrics","timestamp":"iso8601",
    "window":"5m|1h","p95Ms":842,"errPct":0.9
  },

  "cost.window.metrics": {
    "event":"cost.window.metrics","timestamp":"iso8601",
    "window":"5m|1h","avgUsdPerQuery":0.011,"per1kReqTotal":1.05
  },

  "evidence.validation.ready": {
    "event":"evidence.validation.ready","timestamp":"iso8601",
    "id":"q#7f9a12","coveragePct":84,"status":"grounded|at_risk|ungrounded"
  },

  "safety.stream.guard|safety.violation.blocked": {
    "event":"safety.stream.guard","timestamp":"iso8601",
    "id":"q#7f9a12","action":"mask|cutoff|replace","reason":"toxicity|pii"
  },

  "freshness.snapshot": {
    "event":"freshness.snapshot","timestamp":"iso8601",
    "namespace":"kb_default","status":"ok|at_risk|stale","score":0.41
  },

  "learning.dataset.snapshot": {
    "event":"learning.dataset.snapshot","timestamp":"iso8601",
    "period":"1d|1h","size":182000,"biasChecks":{"classImbalance":"ok","propensityCoverage":"ok"},
    "hash":"sha256:dataset..."
  },

  "policy.candidate.registered": {
    "event":"policy.candidate.registered","timestamp":"iso8601",
    "scope":"qo|shape|tune|cost","id":"cand#qo-topK-40","base":"P-hybrid-fast",
    "diff":{"topK":40,"reranker":"ce-small"},"rationale":"cost↓, quality≈"
  }
}

3) Çıktılar (Out)
{
  "learn.estimate.snapshot": {
    "event":"learn.estimate.snapshot","timestamp":"iso8601",
    "scope":"qo","policyBase":"P-hybrid-fast",
    "method":"IPS|DR","uplift":{"acceptRate":"+2.1pp","ndcg10":"+0.7pp"},
    "risk":{"p95Ms":"+14ms","costUsd":"-0.002"},
    "ci95":{"acceptRate":[+0.9,+3.2],"p95Ms":[+6,+22]},
    "sampleSize":12420,"effectiveSample":9320
  },

  "learn.proposal.ready": {
    "event":"learn.proposal.ready","timestamp":"iso8601",
    "id":"prop#qo-topK-40","scope":"qo",
    "changes":{"topK":40,"reranker":"ce-small"},
    "constraints":{"p95MsMax":900,"costUsdMax":0.015,"ndcg10Min":0.50},
    "explain":{"shaplike":[["query_len",0.22],["fresh_score",-0.11],["tier_gold",0.07]]},
    "guardrails":{"safety_incidents_no_increase":true,"fairness_parity":"±10%"},
    "recommendation":"canary_10pct_30min_then_promote_if_ok"
  },

  "learn.rollout.started": {
    "event":"learn.rollout.started","timestamp":"iso8601",
    "scope":"qo","candidate":"cand#qo-topK-40",
    "canary":{"trafficPct":10,"durationMin":30,"owner":"mlops#hash"},
    "monitor":{"metrics":["p95Ms","costUsd","ndcg10","acceptRate"],"thresholds":{"p95MsMax":900,"ndcg10Min":0.50}}
  },

  "learn.rollout.evaluation": {
    "event":"learn.rollout.evaluation","timestamp":"iso8601",
    "scope":"qo","candidate":"cand#qo-topK-40",
    "result":"promote|rollback|extend","obs":{"p95Ms":848,"ndcg10":0.553,"costUsd":0.0098}
  },

  "learn.policy.applied": {
    "event":"learn.policy.applied","timestamp":"iso8601",
    "scope":"qo","candidate":"cand#qo-topK-40",
    "via":"LIVIA-45|LIVIA-55|LIVIA-47","status":"ok",
    "hash":"sha256:apply..."
  },

  "learn.policy.rolledback": {
    "event":"learn.policy.rolledback","timestamp":"iso8601",
    "scope":"qo","candidate":"cand#qo-topK-40","reason":"ndcg_drop>3pp"
  },

  "learn.card": {
    "event":"learn.card","timestamp":"iso8601",
    "title":"Öğrenme Önerisi Uygulandı — Qo topK 60→40",
    "body":"acceptRate +2.1pp, p95 +14ms (≤900), cost -$0.002/sorgu.",
    "severity":"info","ttlSec":600
  },

  "learn.alert": {
    "event":"learn.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"idem_duplicate|rbac_denied|freeze_active|dataset_bias|propensity_low|guardrail_breach|apply_failed"
  },

  "learn.metrics": {
    "event":"learn.metrics","timestamp":"iso8601",
    "onlineBandit":{"method":"linUCB","explorePct":5,"regretMean":-0.012},
    "proposals":3,"applied":1,"rolledBack":0,
    "ipsVar":0.006,"drVar":0.004,
    "quality":{"ndcg10":"+0.6pp","acceptRate":"+1.8pp"},
    "slo":{"p95Ms":"+10ms"},"cost":{"usdPerQuery":"-0.0016"}
  },

  "learn.report.ready": {
    "event":"learn.report.ready","timestamp":"iso8601",
    "path":"data/learn/2025-09-16/report.md",
    "summary":"Qo topK 60→40 canary %10/30dk; promote edildi. NDCG +0.6pp, p95 +10ms, cost -$0.0016.",
    "hash":"sha256:..."
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  learning:{
    mode:"hybrid",                              // offline+online
    online:{ method:"linUCB", explorePct:5, contextFeat:["tier","lang","hour","query_len","fresh_score","cost_per1k","topK","reranker","model"] },
    offline:{ estimator:"DR", clipW:10, minPropensity:0.05, bootstrapB:200 },
    safety:{ spi:"conservative", deltaMax:{ p95Ms:+30, ndcg10:-0.02, costUsd:+0.002 }, hardStops:{ safetyIncidents:true } },
    fairness:{ check:["acceptRate","p95Ms","costUsd"], tolerancePct:10, protected:["age","gender","religion","ethnicity"], proxyGuard:true },
    exploration:{ perTenantBudgetPct:3, guardByTier:{ gold:1, silver:3, bronze:5 } }, // trafikten
    dataset:{ minSize:5000, maxAgeDays:7, balanceTarget:"class_weighted" }
  },

  attribution:{
    method:"shaplike+last_touch",
    credit:["retrieve","rerank","model","kb_profile","shape"]       // hangi kararlar pay alır
  },

  propose:{
    candidates:[
      { scope:"qo", diff:{ topK:"-20|floor:20" } },
      { scope:"qo", diff:{ reranker:"ce-small→none" } },
      { scope:"tune", diff:{ profile:"ivf-pq np:16→12" } },
      { scope:"shape", diff:{ deadlineMs:"-100" } }
    ],
    maxSimultaneous:2,
    needHumanReviewIf:{ riskHigh:true, fairnessCloseToLimit:true }
  },

  rollout:{
    canary:{ trafficPct:10, durationMin:30 },
    promoteCriteria:{ p95MsMax:900, ndcg10Min:0.50, costUsdMax:0.015, safetyNoWorse:true },
    rollbackCriteria:{ ndcgDropPct:3.0, p95RiseMs:80, safetyEvent:true }
  },

  integrations:{
    qo:"LIVIA-55", shape:"LIVIA-54", tune:"LIVIA-47",
    cost:"LIVIA-34", costGuard:"LIVIA-53", slo:"LIVIA-32",
    safety:"LIVIA-56", evidence:"LIVIA-57", fresh:"LIVIA-58",
    freeze:"LIVIA-51", ab:"LIVIA-45",
    provenance:"LIVIA-38", lineage:"LIVIA-39", audit:"LIVIA-48", dist:"LIVIA-22"
  },

  rbacViews:{ observer:{ hideBanditParams:true, showOnlyOutcomes:true } },

  cache:{ ttlSec:1800, keyBy:["policyHash","datasetHash","scope"] },

  idempotencyTtlSec: 3600
}

5) Karar Mantığı (özet)

Toplama & Normalize: explicit/implicit/sistem sinyallerini aynı örnek uzayında birleştir; opt-out ve observer kurallarını uygula.

Attribution: karar yolundaki adımlara (retrieve/rerank/model/shape/tune) SHAP-vari + last-touch ile kredi dağıt.

Tahmin & Değerlendirme:

Online: linUCB/TS ile bağlamsal seçim; exploration bütçesi ve tier sınırları.

Offline: IPS/DR (propensity-log’lu) ile karşı-olgusal; clipW ve bootstrap CI.

Öneri: propose.candidates ve öğrenme sinyalleriyle en güvenli değişiklikleri hazırla.

Guardrails: SLO/Cost/Safety/Fairness kısıtları + SPI (safe policy improvement); risk yüksekse manual review.

Rollout: canary (L45) → promote/rollback; freeze aktifse yalnız simülasyon.

Rapor: WORM/Lineage/Audit ile kaydet; dist (L22) ile kart/rapor dağıt.

6) Pipeline (Kompozisyon)

Collect: feedback & davranış & sistem metrikleri

Join: qo.decision.path + propensities + outcome’lar

Attrib: karar adımlarına etki paylaştır

Estimate: IPS/DR ile uplift, CI, risk

Propose: güvenli değişiklik seti oluştur

Rollout: canary başlat, izle, promote/rollback

Emit: estimate.snapshot, proposal.ready, rollout.started/evaluation, policy.applied/rolledback, card/alert/metrics/report

Audit/Provenance/Lineage: tam izlenebilirlik

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (learning.dataset.snapshot veya yeterli sinyal eşiği) ESTIMATE

ESTIMATE → PROPOSE → (freeze? SIMULATE) else ROLLOUT → EVALUATE → APPLY/ROLLBACK → REPORT → IDLE

Hata: ALERT; idem: aynı learnKey yinelemesinde yalnız snapshot/metrik güncellenir

8) Kenar Durumlar

Propensity Eksik/Düşük: DR kullan, clipW uygula; propensity_low uyarısı.

Bias/İmbalance: veri dengesizse reweigh/stratified resample; dataset_bias.

Konsept Kayması: PSI/KS test → büyük sapmada eski politikaya ağırlık; yeni politika canary-only.

Fairness Yakın Limit: ±10% eşik yakın → human review zorunlu.

Safety/PII: safety olayları artıyorsa öneri reddedilir.

Freeze Aktif: yalnız proposal.ready ve simulate; freeze_active.

Observer: bandit parametreleri gizlenir; yalnız sonuçlar görünür.

Idempotency: aynı dataset/pencere için ikinci öğrenim yan etkisiz.

9) Telemetri
{
  "learn.metrics": {
    "event":"learn.metrics","timestamp":"iso8601",
    "onlineBandit":{"method":"linUCB","explorePct":5,"regretMean":-0.012,"updates":84},
    "offline":{"ipsVar":0.006,"drVar":0.004,"ciWidth.acceptRate":2.3},
    "proposals":3,"applied":1,"rolledBack":0,
    "quality":{"ndcg10":"+0.6pp","acceptRate":"+1.8pp"},
    "slo":{"p95Ms":"+10ms"},"cost":{"usdPerQuery":"-0.0016"},
    "fairnessOk":true,"safetyIncidentsDelta":0
  }
}

10) Dosya Yapısı (öneri)
services/livia/feedbackLearningLooper.ts               # FSM + orchestrator
services/livia/lib/learn/collect.ts                    # sinyal ingest + normalize
services/livia/lib/learn/attrib.ts                     # attribution (shaplike+last_touch)
services/livia/lib/learn/estimate.ts                   # IPS/DR + CI + drift test
services/livia/lib/learn/propose.ts                    # güvenli değişiklik üretici
services/livia/lib/learn/rollout.ts                    # canary/promote/rollback orkestrasyonu
services/livia/lib/learn/report.ts                     # md/html rapor + inline grafik
services/livia/lib/bridges.ts                          # L21/L22/L26/L32/L34/L38/L39/L45/L47/L48/L51/L53/L54/L55/L56/L57/L58
services/livia/state/learnStore.ts                     # idem index + dataset cache + proposals
services/livia/__tests__/feedbackLearningLooper.test.ts
cfg/livia.learn.yaml

11) Test İskeleti (Jest/Vitest)

Offline DR: topK -20 için DR uplift +1.5pp (CI>0) → proposal.ready

Guardrail İhlali: NDCG düşüş ≥3pp → learn.rollout.evaluation(result=rollback)

Freeze: frozen → simulate ve freeze_active uyarısı; apply yok

Fairness: acceptRate tier disparity >10% → fairness_violation, öneri iptal

Propensity Low: IPS varyans yüksek → dr’a geçiş

Konsept Kayması: PSI>0.2 → canary extended; promote ertelendi

Idempotency: aynı learnKey yinelenmesinde ikinci kez yan etki yok

Rapor: md/html üretildi; L38/L48 kaydı; kart/metrik üretildi

12) Örnek Akış (kısa)

14:00–15:00 sinyaller toplandı; dataset 12420 örnek, DR uplift +2.1pp

PROPOSE: Qo topK 60→40, guardrails: p95≤900, NDCG≥0.50

ROLLOUT: canary %10/30dk; sonuçlar iyi → promote

APPLY: L45/L55/L47 ile uygulandı; kart info, rapor ve metrikler yayınlandı

13) SLO

Estimate p95 < 120 ms (1k örnek başına)

Yanlış promote ≤ %1.5, gereksiz rollback ≤ %3

Fairness ihlali ≤ %1, safety olay artışı ≤ 0

Idempotent çakışma ≈ 0

hazır. Sırada LIVIA-62 · autoRunbookSynthesizer.ts (incident ve tekrarlı görevlerden canlı çalıştırılabilir runbook üretimi: adım çıkarımı, koşul/if-guard, parametreleşme, simülasyon ve onay akışı). “Devam” dersen aynı kalitede çıkarırım.

Şunu dedin:
Devam et
ChatGPT:
LIVIA-62 · autoRunbookSynthesizer.ts — Geniş Prompt v3 (+ Canlı Çalıştırılabilir Runbook, Adım Madenciliği, Simülasyon, Onay Akışı)

Amaç:
Incident’lar ve tekrarlayan operasyon görevlerinden canlı çalıştırılabilir runbook üretmek:
log/konuşma/olay akışı → adım madenciliği → koşullar/guardlar → parametreleşme → pre/post-check’ler → simülasyon (dry-run) → onay → yürütme/izleme → geri-al (rollback).
Çıktı: Markdown rehber + yürütülebilir DSL (YAML/JSON); idempotent, audit + lineage, RBAC & güvenlik gözetimli.
Entegrasyon: Incident (L15/L52), Release Freeze (L51), SLO (L32), Traffic (L54), Qo (L55), Safety (L56), Evidence (L57), Freshness (L58), KB Tuning (L47), Cost (L34/L53), Drills (L50), Failover (L49), Provenance/Audit/Lineage (L38/L48/L39), Dist (L22).
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel gün 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: ops|sre|policy|security tam, observer salt okur

Gizlilik: PII/sır bilgiler redakte (L21); gizli anahtarlar vault ref ile kullanılır

İdempotency: rbKey = incidentId|taskId + templateId + env + version + windowISO

Observability: spans (rb.mine|design|simulate|approve|execute|rollback|report) + OTel metrics

Uyumluluk: tüm adımlar WORM (L38) ve Audit (L48)’e; Lineage (L39) ile bağlar

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "incident.timeline.snapshot": {
    "event":"incident.timeline.snapshot","timestamp":"iso8601",
    "id":"inc-2025-09-13-1","severity":"high",
    "events":[
      {"t":"iso8601","kind":"alert","msg":"Slip spike on SG02"},
      {"t":"iso8601","kind":"action","actor":"ops#h1","cmd":"rollback policy v42→v41"},
      {"t":"iso8601","kind":"result","msg":"latency normalized"}
    ],
    "rootCause":"policy-regression"
  },

  "ops.activity.logs": {
    "event":"ops.activity.logs","timestamp":"iso8601",
    "source":"cli|slack|pagerduty|jira|kubectl",
    "entries":[
      {"t":"iso8601","actor":"ops#h1","cmd":"kubectl rollout undo deploy/kb-api --to-revision=41","exit":0},
      {"t":"iso8601","actor":"ops#h2","cmd":"helm rollback kb-api 41","exit":0}
    ]
  },

  "slo.window.metrics": {
    "event":"slo.window.metrics","timestamp":"iso8601",
    "serviceId":"kb_api","window":"5m","p95Ms":920,"errPct":1.3,"burnPct":4.8
  },

  "capability.registry": {
    "event":"capability.registry","timestamp":"iso8601",
    "actions":[
      {"id":"kubectl.rollout.undo","params":["deploy","toRevision"],"pre":["kube.ctx"],"post":["deploy.status"],"risk":"med"},
      {"id":"feature.flag.set","params":["flag","value"],"risk":"low"},
      {"id":"gateway.rate.update","params":["path","rps","burst"],"risk":"med"}
    ]
  },

  "runbook.template.registered": {
    "event":"runbook.template.registered","timestamp":"iso8601",
    "templateId":"rb-rollback-policy",
    "dslVersion":"1.0",
    "steps":[
      {"use":"gateway.rate.update","with":{"path":"/answer","rps":40,"burst":80},"if":"slo.burn>4"},
      {"use":"kubectl.rollout.undo","with":{"deploy":"kb-api","toRevision":41}},
      {"checkpoint":"verify_slo","expect":{"p95<":"900","errPct<":"1.0"}}
    ]
  },

  "environment.inventory": {
    "event":"environment.inventory","timestamp":"iso8601",
    "env":"prod","services":["kb_api","gateway","search"],"regions":["eu-central","us-east"]
  },

  "policy.guardrails": {
    "event":"policy.guardrails","timestamp":"iso8601",
    "constraints":{
      "requiresApprovalFor":["risk=high|med","prod"],
      "maxConcurrentActions":2,"freezeRespect":true,
      "costMaxUsdPerChange":10
    }
  },

  "approval.state": {
    "event":"approval.state","timestamp":"iso8601",
    "runbookId":"rb#inc-2025-09-13-1","status":"pending|approved|rejected",
    "by":"opslead#h0","ttlMin":30
  },

  "secret.vault.reference": {
    "event":"secret.vault.reference","timestamp":"iso8601",
    "keys":[{"name":"kube.ctx","ref":"vault://kube/prod/context"}]
  },

  "freeze.state.changed": {
    "event":"freeze.state.changed","timestamp":"iso8601",
    "state":"frozen|thawed","scope":"global|service:kb_api","reason":"incident|audit|drill"
  }
}

3) Çıktılar (Out)
{
  "runbook.synth.ready": {
    "event":"runbook.synth.ready","timestamp":"iso8601",
    "runbookId":"rb#inc-2025-09-13-1",
    "title":"Rollback Policy v42→v41 + SLO Stabilizasyonu",
    "dslVersion":"1.0",
    "pathYaml":"data/runbooks/2025-09-13/rb_inc-1.yaml",
    "pathMd":"data/runbooks/2025-09-13/rb_inc-1.md",
    "summary":"Önce gateway kısma, sonra rollback, ardından SLO doğrulama.",
    "params":{"deploy":"kb-api","toRevision":41,"path":"/answer","rps":40,"burst":80},
    "hash":"sha256:..."
  },

  "runbook.simulation.report": {
    "event":"runbook.simulation.report","timestamp":"iso8601",
    "runbookId":"rb#inc-2025-09-13-1",
    "mode":"dry-run","checks":{
      "pre":"ok","capabilities":{"missing":[]},
      "impactEst":{"p95":"-80ms","costUsd":"+1.2","risk":"med"}
    },
    "issues":[]
  },

  "runbook.approval.request": {
    "event":"runbook.approval.request","timestamp":"iso8601",
    "runbookId":"rb#inc-2025-09-13-1",
    "needed":["ops_lead"],"ttlSec":1800,
    "reason":"risk=med & env=prod (guardrail)"
  },

  "runbook.execute.request": {
    "event":"runbook.execute.request","timestamp":"iso8601",
    "runbookId":"rb#inc-2025-09-13-1","env":"prod","region":"eu-central",
    "mode":"automated|semi|manual","approvedBy":"opslead#h0"
  },

  "runbook.execute.progress": {
    "event":"runbook.execute.progress","timestamp":"iso8601",
    "runbookId":"rb#inc-2025-09-13-1",
    "step":2,"use":"kubectl.rollout.undo","status":"ok|fail|skipped",
    "stdout":"...","stderr":"...", "durationMs":4200
  },

  "runbook.execute.status": {
    "event":"runbook.execute.status","timestamp":"iso8601",
    "runbookId":"rb#inc-2025-09-13-1","final":"success|partial|failed",
    "observations":{"p95Ms":860,"errPct":0.9},
    "rollbackUsed":false
  },

  "runbook.rollback.invoked": {
    "event":"runbook.rollback.invoked","timestamp":"iso8601",
    "runbookId":"rb#inc-2025-09-13-1","reason":"checkpoint_failed","status":"ok|fail"
  },

  "runbook.card": {
    "event":"runbook.card","timestamp":"iso8601",
    "title":"Runbook Hazır — inc-2025-09-13-1",
    "body":"dry-run ok • onay bekliyor • 3 adım • risk: orta.",
    "severity":"info","ttlSec":600
  },

  "runbook.alert": {
    "event":"runbook.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"idem_duplicate|rbac_denied|freeze_active|capability_missing|precheck_failed|approval_required|exec_failed|checkpoint_failed|rollback_failed|cost_limit"
  },

  "runbook.metrics": {
    "event":"runbook.metrics","timestamp":"iso8601",
    "synth":1,"dryRuns":1,"exec":1,"rollbacks":0,
    "avgDesignMs":92,"avgExecMs":8500,"stepSuccessPct":96
  },

  "runbook.report.ready": {
    "event":"runbook.report.ready","timestamp":"iso8601",
    "path":"data/runbooks/2025-09-13/rb_inc-1/report.md",
    "summary":"3 adım yürütüldü, p95 920→860ms; rollback gerekmedi.",
    "hash":"sha256:..."
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  dsl:{ version:"1.0", schema:"zod.strict", fileExt:"yaml", allowIncludes:true },

  mining:{
    sources:["incident.timeline","ops.logs","chat.slack","jira"],
    heuristics:{
      mergeDuplicates:true, orderBy:"causal", collapseNoops:true,
      parameterize:{ detectEnv:true, detectVersions:true, detectPaths:true }
    },
    patterns:[
      { name:"rollback_then_verify", match:["rollout.undo","verify_slo"] },
      { name:"rate_limit_then_change", match:["gateway.rate.update","apply_change","verify"] }
    ],
    libraryPreference:["runbook.template.registered","capability.registry"]
  },

  guardrails:{
    requiresApprovalFor:["risk≥med","env=prod"],
    maxConcurrentActions:2, checkpointEnforce:true,
    freezeRespect:true, costMaxUsdPerChange:10
  },

  simulation:{
    enable:true, mode:"dry-run", sandbox:"ephemeral-ns", mockIO:true,
    impactModel:{ sloDeltaMsPerAction:{ "gateway.rate.update":-60, "kubectl.rollout.undo":-40 }, costPerActionUsd:{ "kubectl.rollout.undo":0.8 } }
  },

  execution:{
    modeDefault:"semi", retry:{ max:1, backoffMs:1500 },
    timeouts:{ perStepMs:120000, totalMs:900000 },
    secrets:{ via:"vault", redact:true },
    checkpoint:{
      slo:{ p95MsMax:900, errPctMax:1.0 },
      custom:["deploy.status","gateway.rules.applied"]
    }
  },

  approvals:{ roles:["ops_lead","security"], ttlMin:30 },

  integrations:{
    incident:"LIVIA-15|LIVIA-52", freeze:"LIVIA-51", slo:"LIVIA-32",
    traffic:"LIVIA-54", qo:"LIVIA-55", safety:"LIVIA-56",
    evidence:"LIVIA-57", fresh:"LIVIA-58", tune:"LIVIA-47",
    cost:"LIVIA-34", costGuard:"LIVIA-53", drills:"LIVIA-50",
    provenance:"LIVIA-38", lineage:"LIVIA-39", audit:"LIVIA-48", dist:"LIVIA-22"
  },

  rbacViews:{ observer:{ hideSecrets:true, showOnlySummary:true } },

  idempotencyTtlSec: 3600
}

5) Karar Mantığı (özet)

Adım Madenciliği: incident zaman akışı + komut logları + kapasiteler → kanditat adımlar; de-dup, sıralama (nedensel), parametreleşme.

Şablonlama: varsa template ile eşle; yoksa motif/pattern ile iskelet üret.

Guardlar: freeze aktifse yalnız taslak & simülasyon; prod & risk≥med → onay zorunlu; maliyet sınırı.

Simülasyon: sandbox/dry-run ile precheck (capability, env, secret); etki tahmini (SLO/cost).

Koşullar/Checkpoint’ler: if/when ile koşullu adımlar; pre/post-check zorunlu.

Yürütme: onay alındıysa seri + maxConcurrentActions; adım başarısızsa rollback dalı.

Telemetri & Rapor: her adım stdout/stderr + süresi; SLO gözlemi; sonuçlar WORM/Audit/Lineage.

6) Pipeline (Kompozisyon)

Mine: timeline/loglardan adımları çıkar

Design: template/motif ile DSL + Markdown üret

Simulate: dry-run; precheck, impact estimasyonu

Approve: guardrail gereği onay iste

Execute: adımları yürüt; pre/post-check, rollback planı

Observe: SLO/metrikler; cost & etkiler

Emit: synth.ready, simulation.report, approval.request, execute.*, card/alert/metrics/report

Persist: L38/L48/L39 kayıtları; runbook kataloguna ekle

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (incident.timeline.snapshot|ops.activity.logs|runbook.template.registered) MINE

MINE → DESIGN → SIMULATE → (freeze? PARKED) | (approval_needed? AWAIT_APPROVAL) | READY_TO_EXEC

AWAIT_APPROVAL → (approved) READY_TO_EXEC | (rejected/timeout) DONE

READY_TO_EXEC → EXECUTE → (success) REPORT | (checkpoint_failed) ROLLBACK → REPORT

Hata: ALERT; idem: aynı rbKey yinelemesinde yan etki yok (yalnız rapor/güncelleme)

8) Kenar Durumlar

Capability Eksik: kayıtlı aksiyon yok → capability_missing + öneri: “manual step / template register”.

Çakışan Adımlar: aynı hedefi etkileyen paralel adımlar → seri hale getir veya maxConcurrentActions uygulanır.

Environment Drift: simülasyon ok, gerçek yürütmede env farkı → precheck_failed; rollback.

Freeze Aktif: yalnız taslak + dry-run; freeze_active uyarısı, yürütme yok.

Gizli Anahtar Eksik: vault referansı çözülemez → rbac_denied|secret_missing.

Maliyet Sınırı: planlanan değişiklik cost üstü → cost_limit ve onay zorunlu.

Drill Modu: L50 tatbikatında sandbox-only yürüt; prod kapalı.

Observer: stdout/stderr ve secrets gizlenir; sadece özet.

İdempotency: aynı incident/runbook tekrarında mevcut DSL üzerine append (versiyonlama); ikinci yürütmede skip.

9) Telemetri
{
  "runbook.metrics": {
    "event":"runbook.metrics","timestamp":"iso8601",
    "synth":1,"dryRuns":1,"exec":1,"rollbacks":0,
    "avgDesignMs":92,"avgExecMs":8500,"stepSuccessPct":96,
    "approvalWaitMs":42000,"costUsd":1.2
  }
}

10) Dosya Yapısı (öneri)
services/livia/autoRunbookSynthesizer.ts              # FSM + orchestrator
services/livia/lib/runbook/mine.ts                     # adım madenciliği (timeline/log/chat)
services/livia/lib/runbook/design.ts                   # DSL üretimi + Markdown şablonu
services/livia/lib/runbook/simulate.ts                 # dry-run + etki tahmini + precheck
services/livia/lib/runbook/approve.ts                  # onay akışı (ttl/roles)
services/livia/lib/runbook/execute.ts                  # adım yürütücü + checkpoint/rollback
services/livia/lib/runbook/report.ts                   # md/html rapor + inline grafik
services/livia/lib/bridges.ts                          # L21/L22/L26/L32/L34/L38/L39/L47/L48/L49/L50/L51/L53/L54/L55/L56/L57/L58
services/livia/state/runbookStore.ts                   # idem index + katalog + sürümler
services/livia/__tests__/autoRunbookSynthesizer.test.ts
cfg/livia.runbook.yaml

11) Test İskeleti (Jest/Vitest)

Madencilik: timeline+logs → 3 adım, parametreleşme doğru

Template Eşlemesi: rb-rollback-policy seçildi; DSL oluştu

Simülasyon: dry-run ok; etkiler (p95 -80ms) tahmin edildi

Onay: risk=med & prod → onay istenir; onay gelmeden execute yok

Yürütme: adımlar sırasıyla, checkpoint p95<900 & err<1.0 geçti

Rollback Dalı: checkpoint fail → rollback çağrılır

Freeze: frozen → yalnız synth.ready + simulation.report; execute.request yok

Idempotency: aynı rbKey tekrarında dosya overwrite yok; versiyon artışı

Rapor: md/html dosyaları yazıldı; L22 ile dağıtıldı; L38/L48 kayıtlandı

12) Örnek Akış (kısa)

18:12 MINE: incident + ops log → “rate limit ↓ → rollback → verify SLO”

18:13 DESIGN: DSL + Markdown üretildi; vault ref eklendi

18:13 SIMULATE: dry-run ok; p95 tahmini -80ms

18:14 APPROVE: ops_lead onayladı (TTL 30dk)

18:15 EXECUTE: 3 adım, 8.5s toplam; SLO p95 920→860ms; rollback gerekmedi

18:16 REPORT: kart/metrik/rapor yayımlandı

13) SLO

Synth (design) p95 < 150 ms

Dry-run precheck p95 < 400 ms

Exec başarısı ≥ %95 (checkpoint’lerle)

Yanlış yürütme (rollback gerektiren) ≤ %2

Idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-63 · policyDriftDetector.ts — Geniş Prompt v3 (+ Çok-Katmanlı Drift, Risk Skoru, Oto-Düzeltme Planı)

Amaç:
Tüm kritik politika/konfig yüzeylerinde (LLM/qo planları, guardrail/safety, KB/freshness, cost/slo, release, RBAC/iam, feature-flag, connector/secret, infra) drift (hedef → gerçek) tespit etmek; risk skorla, kök nedenlendir, etki simüle et, düzeltme planı (fix/roll-forward/roll-back) öner ve (gerekirse) canary + onay ile uygula.
Entegrasyon: Release Freeze (L51), Qo (L55), Safety (L56), Evidence (L57), Freshness (L58), Personalization (L59), MLang (L60), Learning (L61), Runbook (L62), Cost (L34/L53), SLO (L32), Audit/Provenance/Lineage (L48/L38/L39), Dist (L22).
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; yerel pencere 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: policy|mlops|ops|security|compliance tam, observer salt-okur

Gizlilik: PII yok; aktör/tenant kimlikleri L21 hash

İdempotency: driftKey = scope + target + baselineHash + windowISO

Observability: spans (drift.collect|diff|score|simulate|propose|apply|report)

Uyumluluk: karar/öneri/uygulamalar WORM (L38), Lineage (L39), Audit (L48)

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "baseline.snapshot.registered": {
    "event":"baseline.snapshot.registered","timestamp":"iso8601",
    "target":"qo|safety|fresh|cost|slo|release|rbac|feature|connector|infra",
    "version":"2025-09-15#42",
    "specHash":"sha256:...","specUrl":"git+https://...#commit",
    "spec":{"json|yaml": "..."}                      // normalize edilmiş
  },

  "runtime.snapshot.captured": {
    "event":"runtime.snapshot.captured","timestamp":"iso8601",
    "target":"qo|safety|fresh|cost|slo|release|rbac|feature|connector|infra",
    "env":"prod|stg|dev","source":"live_api|k8s|vault|flags|cfgdb",
    "specHash":"sha256:...","spec":{"json":"..."}     // gerçek durum
  },

  "change.intent.declared": {
    "event":"change.intent.declared","timestamp":"iso8601",
    "ticket":"jira-1234","actor":"ops#h1","target":"qo",
    "diff":{"plan":"P-hybrid-fast→P-vec-lite"},"window":"iso8601-iso8601"
  },

  "freeze.state.changed": {
    "event":"freeze.state.changed","timestamp":"iso8601",
    "state":"frozen|thawed","scope":"global|service:kb_api","reason":"incident|audit|drill"
  },

  "policy.guardrails": {
    "event":"policy.guardrails","timestamp":"iso8601",
    "constraints":{
      "allowAutoApplyFor":["risk=low","env=stg"],
      "requireApprovalFor":["risk≥med","env=prod"],
      "maxAutoChangesPerDay":3
    }
  },

  "slo.window.metrics": {
    "event":"slo.window.metrics","timestamp":"iso8601",
    "serviceId":"kb_api","window":"5m|1h",
    "p95Ms":842,"errPct":0.7,"burnPct":3.1
  },

  "cost.window.metrics": {
    "event":"cost.window.metrics","timestamp":"iso8601",
    "window":"1h","avgUsdPerQuery":0.011
  },

  "ab.experiment.registered": {
    "event":"ab.experiment.registered","timestamp":"iso8601",
    "expId":"EXP-safety-thresholds","scope":"tenant:t#acme",
    "arms":[{"id":"A","sharePct":50},{"id":"B","sharePct":50}]
  }
}

3) Çıktılar (Out)
{
  "drift.diff.ready": {
    "event":"drift.diff.ready","timestamp":"iso8601",
    "target":"safety","env":"prod",
    "baselineVersion":"2025-09-15#42",
    "changes":[
      {"path":"/pii/confidenceMin","from":0.85,"to":0.75,"kind":"numeric"},
      {"path":"/grounding/minCitationCoveragePct","from":60,"to":40,"kind":"numeric"},
      {"path":"/categories/self_harm","from":"block","to":"filter","kind":"enum"}
    ],
    "semanticEquivalence":{"notes":"none","ok":false},
    "hash":"sha256:..."
  },

  "drift.score.snapshot": {
    "event":"drift.score.snapshot","timestamp":"iso8601",
    "target":"safety","env":"prod",
    "riskScore":0.83,
    "factors":{
      "surface":"safety","blastRadius":"global","severity":"high",
      "sloContext":{"p95Ms":842,"errPct":0.7,"burnPct":3.1},
      "costContext":{"avgUsdPerQuery":0.011},
      "changeIntentOverlap":false
    },
    "status":"warn|high|block"
  },

  "drift.impact.simulation": {
    "event":"drift.impact.simulation","timestamp":"iso8601",
    "target":"safety","env":"prod",
    "method":"counterfactual-replay",
    "estimates":{
      "toxicityIncidents":"+0.4pp [CI 0.1,0.8]",
      "acceptRate":"+0.2pp [CI -0.1,0.5]",
      "costUsd":"+0.0002"
    }
  },

  "drift.proposal.ready": {
    "event":"drift.proposal.ready","timestamp":"iso8601",
    "target":"safety","env":"prod",
    "actions":[
      {"type":"roll_back","paths":["/pii/confidenceMin","/grounding/minCitationCoveragePct","/categories/self_harm"],"toBaseline":"2025-09-15#42"},
      {"type":"guardrail","rule":"requireApprovalFor:safety.high"}
    ],
    "recommendation":"canary_10pct_20min_then_promote_if_ok",
    "needsApproval":true
  },

  "drift.apply.started": {
    "event":"drift.apply.started","timestamp":"iso8601",
    "target":"safety","env":"prod",
    "mode":"canary","trafficPct":10,"durationMin":20,
    "owner":"policy#h9"
  },

  "drift.apply.evaluation": {
    "event":"drift.apply.evaluation","timestamp":"iso8601",
    "target":"safety","result":"promote|rollback|extend",
    "guardrails":{"p95MsMax":900,"ndcg10Min":0.50,"safetyNoWorse":true}
  },

  "drift.card": {
    "event":"drift.card","timestamp":"iso8601",
    "title":"Policy Drift — safety (risk: yüksek) • prod",
    "body":"3 alan baseline’dan saptı • öneri: roll-back (canary %10/20dk).",
    "severity":"warn","ttlSec":600
  },

  "drift.alert": {
    "event":"drift.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"idem_duplicate|rbac_denied|freeze_active|baseline_missing|runtime_missing|apply_failed|guardrail_breach"
  },

  "drift.metrics": {
    "event":"drift.metrics","timestamp":"iso8601",
    "targetsScanned":8,"driftFound":2,"autoFixed":1,
    "avgDiffMs":46,"avgScore":0.41,"blocked":0
  },

  "drift.report.ready": {
    "event":"drift.report.ready","timestamp":"iso8601",
    "path":"data/drift/2025-09-16/prod/report.md",
    "summary":"safety ve feature flag yüzeylerinde drift; safety roll-back canary ile düzeldi.",
    "hash":"sha256:..."
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  surfaces:[
    "qo","safety","fresh","cost","slo","release","rbac","feature","connector","infra"
  ],

  diff:{
    numericTolerance:{ relPct:1.0, abs:0.0001 },
    unorderedSets:true, caseInsensitiveKeys:true,
    semanticEquivalence:{ enable:true, nlpModel:"spec-sim-mini", threshold:0.92 }, // metin tabanlı kurallar aynı mı?
    ignorePaths:["/metadata/updatedAt","/comments/*","/notes/*"]
  },

  scoring:{
    baseWeightBySurface:{ safety:0.35, qo:0.2, release:0.15, rbac:0.1, fresh:0.08, cost:0.06, slo:0.06 },
    blastRadiusWeights:{ global:1.0, tenant:0.6, service:0.7, feature:0.4 },
    severityMap:{ low:0.2, med:0.5, high:0.8 },
    contextMods:{ sloBurn:{ lt2:0, lt5:0.05, gte5:0.1 }, costHigh:+0.05 },
    thresholds:{ warn:0.6, block:0.8 }
  },

  simulate:{
    method:"counterfactual-replay",            // geçmiş log + propensities
    minSamples:1000, ci:"bootstrapB=200", clipW:10,
    guardrails:{ p95MsMax:900, ndcg10Min:0.50, safetyNoWorse:true }
  },

  proposals:{
    actions:["fix","roll_back","roll_forward","guardrail","document"],
    prefer:"roll_back_if_risk≥high_else_fix",
    requireApprovalFor:["env=prod","risk≥med"],
    maxAutoChangesPerDay:3
  },

  apply:{
    via:"LIVIA-45 (canary) + L62 (runbook) when needed",
    canary:{ trafficPct:10, durationMin:20, promoteIf:"guardrails_ok" },
    rollbackCriteria:{ ndcgDropPct:3.0, p95RiseMs:80, safetyEvent:true }
  },

  schedule:{ cron:"*/15 * * * *" },           // 15 dakikada bir tarama

  integrations:{
    freeze:"LIVIA-51", qo:"LIVIA-55", safety:"LIVIA-56", evidence:"LIVIA-57",
    fresh:"LIVIA-58", pers:"LIVIA-59", mlang:"LIVIA-60", learn:"LIVIA-61", runbook:"LIVIA-62",
    slo:"LIVIA-32", cost:"LIVIA-34", costGuard:"LIVIA-53",
    provenance:"LIVIA-38", lineage:"LIVIA-39", audit:"LIVIA-48", dist:"LIVIA-22"
  },

  rbacViews:{ observer:{ hideDiffDetails:true, showOnlyScores:true } },

  cache:{ ttlSec:600, keyBy:["target","env","baselineHash"] },

  idempotencyTtlSec: 1800
}

5) Karar Mantığı (özet)

Topla: en güncel baseline (git/registry) ve runtime (live kaynaklar) snapshot’larını çek.

Karşılaştır: yapılandırılmış diff (numeric tolerans, set eşleme, anahtar duyarsızlığı) + semantik eşdeğerlik.

Sınıfla: drift → noise|benign|risk_low|risk_med|risk_high; blastRadius (global/tenant/service) ve surface ağırlıklarıyla riskScore üret.

Kapsam & Bağlam: SLO/cost penceresi ve ilan edilmiş değişikliklerle (change.intent) niyet uyumu kontrol et; niyet dışı sapmalara öncelik ver.

Simüle: karşı-olgusal replay ile etki tahmini (acceptRate, p95, cost, safety).

Öner: kural: risk≥high → roll_back; risk=med → fix (targeted); low → document or schedule. Guardrail ve freeze’e saygı.

Uygula: freeze aktifse yalnız öneri/rapor; değilse canary + guardrail; gerekirse L62 runbook ile yarı-otomatik.

Kaydet & Yay: diff/score/sim/öneri/uygulama durumlarını WORM/Lineage/Audit; kart/rapor L22.

6) Pipeline (Kompozisyon)

Collect → baseline & runtime snapshotlarını oku

Diff → yapısal + semantik karşılaştırma

Score → risk puanı (surface/blastRadius/severity + bağlam)

Simulate → karşı-olgusal replay + CI

Propose → fix/roll-back/roll-forward/guardrail

Apply → (freeze? park et) | (canary + guardrails) | (runbook ile yarı-otomatik)

Emit → diff.ready, score.snapshot, impact.simulation, proposal.ready, apply.*, card/alert/metrics/report

Persist → L38/L39/L48 kayıtları; cache güncelle

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (baseline.registered|runtime.captured|schedule.tick) DIFF

DIFF → SCORE → (risk<warn) REPORT | (warn≤risk<block) SIMULATE → PROPOSE | (≥block) PROPOSE

PROPOSE → (freeze? PARK) | (approval? AWAIT_APPROVAL) | APPLY

APPLY → EVALUATE → PROMOTE/ROLLBACK/EXTEND → REPORT → IDLE

Hata: ALERT; idem: aynı driftKey yinelemesinde yalnız kart/metrik güncellenir

8) Kenar Durumlar

Baseline Eksik/Eski: baseline_missing → L58’le freshness uyar; varsayılan: no-op + document.

Runtime Çok Kaynaklı: çakışan kaynaklar → consensus (çoğunluk/öncelik sırası) + uyarı.

AB Deneyleri: deney kapsamında beklenen farklar harici tutulur (whitelist).

Drift Storm: çok sayıda küçük drift → coalesce ve batch öneri üret.

Gizli Anahtar/Flag: vault/flag provider tutarsız → connector drift, risk↑.

NIYET Örtüşmesi: change.intent ile eşleşen farklar benign puan düşürür (zaman penceresi içinde).

Observer: diff ayrıntıları gizlenir; yalnız risk/öneri gösterilir.

Freeze: frozen → yalnız propose/report; apply yok.

Idempotency: aynı driftKey için ikinci çalıştırma yan etkisiz.

9) Telemetri
{
  "drift.metrics": {
    "event":"drift.metrics","timestamp":"iso8601",
    "targetsScanned":8,"driftFound":2,"autoFixed":1,"blocked":0,
    "avgDiffMs":46,"avgScore":0.41,
    "proposals":2,"applied":1,"rolledBack":0
  }
}

10) Dosya Yapısı (öneri)
services/livia/policyDriftDetector.ts                # FSM + orchestrator
services/livia/lib/drift/collect.ts                  # baseline/runtime çekme (git/registry/k8s/vault/flags)
services/livia/lib/drift/diff.ts                     # yapısal + semantik diff
services/livia/lib/drift/score.ts                    # risk skoru (surface/blast/severity/bağlam)
services/livia/lib/drift/simulate.ts                 # counterfactual replay + CI
services/livia/lib/drift/propose.ts                  # fix/roll-back/roll-forward/guardrail önerici
services/livia/lib/drift/apply.ts                    # canary + guardrails + runbook köprüleri
services/livia/lib/drift/report.ts                   # md/html rapor + inline grafik
services/livia/lib/bridges.ts                        # L22/L32/L34/L38/L39/L45/L48/L51/L55/L56/L57/L58/L59/L60/L61/L62
services/livia/state/driftStore.ts                   # idem index + snapshots + proposals
services/livia/__tests__/policyDriftDetector.test.ts
cfg/livia.drift.yaml

11) Test İskeleti (Jest/Vitest)

Safety Drift: 3 kritik alan değişti → risk≥high → roll_back önerisi

Qo Benign Drift: plan A/B deney whitelisted → benign ve document

Counterfactual: 5k replay → toxicity +0.3pp [CI pozitif] → risk ↑

Freeze: frozen → apply yok; freeze_active kartı

Canary Promote: guardrail OK → promote; NDCG düşüşü %3.5 → rollback

Batching: 12 küçük feature-flag farkı → tek batch öneri

Idempotency: aynı driftKey → yalnız metrik güncellenir

Rapor: md/html yazıldı; L22 ile dağıtıldı; L38/L48 kayıtlandı

12) Örnek Akış (kısa)

10:10 DIFF: safety (prod) baseline’dan saptı (3 alan).

10:11 SCORE: risk 0.83 (high); blastRadius global.

10:12 SIMULATE: toxicity +0.4pp (CI pozitif).

10:13 PROPOSE: roll_back + guardrail (canary %10/20dk, onay gerekir).

10:35 APPLY/EVAL: canary iyi → promote.

10:40 REPORT: kart, metrik, rapor; WORM/Lineage/Audit tamamlandı.

13) SLO

Tarama p95 < 70 ms/surface

Yanlış pozitif drift ≤ %2, kaçan kritik drift ≤ %1

Öneri → karar süresi ≤ 15 dk (block durumlarında)

Idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-64 · zeroDowntimeConfigApplier.ts — Geniş Prompt v3 (+ Atomic/Staged Apply, Health-Probe, Traffic-Shift, Rollback-Safe)

Amaç:
Çoklu yüzeylerde (Qo/Safety/Fresh/Cost/SLO/Release/RBAC/Feature/Connector/Infra) sıfır kesinti ile konfig/politika değişikliklerini atomic/staged/canary olarak uygula:
diff→plan→preflight→shadow/dry-run→staged apply (canary %X)→health/telemetri doğrulama→traffic shift→promote→finalize; başarısızlıkta otomatik rollback.
Entegrasyon: PolicyDrift (L63), Runbook (L62), Release Freeze (L51), AB/Canary (L45), Qo (L55), Traffic Shaper (L54), SLO (L32), Cost Guard (L53/L34), Safety (L56), Evidence (L57), Freshness (L58), Provenance/Lineage/Audit (L38/L39/L48), DR/MRF (L49/L50).
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

ISO-8601; gün penceresi 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: ops|policy|mlops|release tam, observer salt okur

Gizlilik: PII yok; kimlikler L21 ile hash; sırlar vault ref

İdempotency: applyKey = target + env + planHash + windowISO

Observability: spans (zd.plan|preflight|shadow|apply.stage|probe|shift|promote|rollback|finalize) + metrics

Uyumluluk: her adım WORM (L38), Lineage (L39), Audit (L48) kayıtlı

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "config.apply.request": {
    "event":"config.apply.request","timestamp":"iso8601",
    "requestId":"req#8c12","target":"safety|qo|fresh|cost|slo|release|rbac|feature|connector|infra",
    "env":"prod|stg|dev","mode":"atomic|staged|canary",
    "diff":{"path":"/grounding/minCitationCoveragePct","from":60,"to":70},
    "sources":{"baseline":"2025-09-15#42","intent":"jira-1234"},
    "constraints":{"p95MsMax":900,"errPctMax":1.0,"costUsdMax":0.015},
    "canary":{"trafficPct":10,"durationMin":20},
    "freezeRespect":true
  },

  "config.bundle.request": {
    "event":"config.bundle.request","timestamp":"iso8601",
    "requestId":"req#8c12","env":"prod",
    "items":[
      {"target":"qo","diff":{"path":"/plan","from":"P-vec-lite","to":"P-hybrid-fast"}},
      {"target":"feature","diff":{"path":"/answer.rps","from":80,"to":120}}
    ],
    "atomicGroup":true, "ordering":"qo→feature"
  },

  "health.probe.policy": {
    "event":"health.probe.policy","timestamp":"iso8601",
    "rules":{
      "slo":{"p95MsMax":900,"errPctMax":1.0},
      "acceptRateMin":0.50,
      "safetyNoWorse":true,
      "evidenceCoverageMin":0.60
    },
    "probeWindow":"5m","graceMin":5
  },

  "traffic.shift.capabilities": {
    "event":"traffic.shift.capabilities","timestamp":"iso8601",
    "providers":["envoy","istio","nginx"],
    "supports":{"weightedRoutes":true,"headerStickiness":true,"canaryByTenant":true}
  },

  "freeze.state.changed": {
    "event":"freeze.state.changed","timestamp":"iso8601",
    "state":"frozen|thawed","scope":"global|service:kb_api","reason":"incident|audit|drill"
  },

  "runbook.template.registered": {
    "event":"runbook.template.registered","timestamp":"iso8601",
    "templateId":"rb-config-rollback",
    "steps":[{"use":"config.rollback","with":{"requestId":"${requestId}"}}]
  },

  "slo.window.metrics": {
    "event":"slo.window.metrics","timestamp":"iso8601",
    "serviceId":"kb_api","window":"5m","p95Ms":860,"errPct":0.8
  },

  "cost.window.metrics": {
    "event":"cost.window.metrics","timestamp":"iso8601",
    "window":"5m","avgUsdPerQuery":0.0108
  },

  "traffic.current.split": {
    "event":"traffic.current.split","timestamp":"iso8601",
    "serviceId":"kb_api","splits":[{"rev":"baseline","pct":90},{"rev":"canary","pct":10}]
  }
}

3) Çıktılar (Out)
{
  "config.plan.ready": {
    "event":"config.plan.ready","timestamp":"iso8601",
    "requestId":"req#8c12","env":"prod","mode":"canary",
    "stages":[
      {"id":"shadow","desc":"dry-run+shadow read","checks":["schema","rbac","safety"]},
      {"id":"canary10","trafficPct":10,"durationMin":20,"checks":["slo","cost","safety","evidence"]},
      {"id":"promote","trafficPct":100,"checks":["post-verify"]}
    ],
    "rollbackPlan":"rb-config-rollback","hash":"sha256:..."
  },

  "config.preflight.report": {
    "event":"config.preflight.report","timestamp":"iso8601",
    "requestId":"req#8c12",
    "schemaOk":true,"rbacOk":true,"freeze":"thawed",
    "shadowWrite":"skipped|applied_to_shadow_env","issues":[]
  },

  "config.apply.stage.started": {
    "event":"config.apply.stage.started","timestamp":"iso8601",
    "requestId":"req#8c12","stage":"canary10","trafficPct":10
  },

  "health.probe.snapshot": {
    "event":"health.probe.snapshot","timestamp":"iso8601",
    "requestId":"req#8c12","stage":"canary10",
    "metrics":{"p95Ms":848,"errPct":0.7,"acceptRate":0.57,"evidenceCoverage":0.72,"safetyIncidentsDelta":0},
    "status":"ok|warn|fail"
  },

  "traffic.shift.applied": {
    "event":"traffic.shift.applied","timestamp":"iso8601",
    "requestId":"req#8c12","from":{"baseline":100},"to":{"canary":10,"baseline":90},
    "provider":"istio","stickiness":"header:tenant"
  },

  "config.apply.promoted": {
    "event":"config.apply.promoted","timestamp":"iso8601",
    "requestId":"req#8c12","finalTraffic":{"baseline":0,"canary":100},
    "postVerify":{"p95Ms":842,"errPct":0.8,"acceptRate":0.58}
  },

  "config.apply.rolledback": {
    "event":"config.apply.rolledback","timestamp":"iso8601",
    "requestId":"req#8c12","reason":"probe_fail|guardrail_breach|freeze_active",
    "via":"runbook:rb-config-rollback","durationSec":38
  },

  "config.card": {
    "event":"config.card","timestamp":"iso8601",
    "title":"Konfig Uygulandı — safety (canary %10→%100)",
    "body":"p95 860→842ms, err 0.8% • guardrails OK • zero-downtime.",
    "severity":"info","ttlSec":600
  },

  "config.alert": {
    "event":"config.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"idem_duplicate|rbac_denied|schema_incompatible|freeze_active|preflight_fail|probe_fail|guardrail_breach|shift_failed|rollback_failed|budget_exceeded"
  },

  "config.metrics": {
    "event":"config.metrics","timestamp":"iso8601",
    "applies":1,"promoted":1,"rolledBack":0,
    "avgPreflightMs":110,"avgProbeMs":4200,"avgStageMs":120000,
    "trafficShifts":2,"downtimeSec":0
  },

  "config.report.ready": {
    "event":"config.report.ready","timestamp":"iso8601",
    "path":"data/config/2025-09-16/req_8c12/report.md",
    "summary":"Canary %10/20dk → promote. Guardrail ihlali yok. Zero-downtime.",
    "hash":"sha256:..."
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  modes:{
    atomic:{ enable:true, requireMaintenanceWindow:true },
    staged:{ enable:true, stages:["shadow","25%","50%","100%"] },
    canary:{ enable:true, defaultTrafficPct:10, defaultDurationMin:20, provider:"istio" }
  },

  preflight:{
    schemaCompat:true, semanticCompat:true, // L63 semantik eşdeğerlik
    rbacEnforce:true, freezeRespect:true,
    budget:{ maxChangesPerHour:5, costUsdMax:15 }
  },

  shadow:{
    enable:true, kind:"read-only|shadow-env", // dry-run veya shadow namespace
    dataWrite:"none", sideEffects:"none"
  },

  probes:{
    window:"5m", graceMin:5,
    rules:{ p95MsMax:900, errPctMax:1.0, acceptRateMin:0.50, safetyNoWorse:true, evidenceCoverageMin:0.60 },
    evaluateEverySec:30, requireConsecutivePasses:2
  },

  traffic:{
    provider:"istio", stickiness:"header:tenant|cookie:session",
    stepPct:[10,25,50,100], rampDelayMin:10,
    failFast:true, autoPauseOnProbeFail:true
  },

  guardrails:{
    slo:{ p95MsMax:900, errPctMax:1.0 },
    cost:{ usdPerQueryMax:0.015 },
    safety:{ noWorse:true },
    evidence:{ coverageMin:0.60 }
  },

  rollback:{
    strategy:"immediate_on_fail|graceful", via:"runbook:rb-config-rollback",
    timeoutSec:60, postRollbackVerify:true
  },

  bundle:{
    atomicGroup:true, orderingStrategy:"topo|declared",
    twoPhaseCommit:true, // prepare→commit/abort (best-effort across surfaces)
    partialFailurePolicy:"abort_all"
  },

  freezeHook:"LIVIA-51",
  integrations:{
    drift:"LIVIA-63", runbook:"LIVIA-62", canary:"LIVIA-45",
    traffic:"LIVIA-54", slo:"LIVIA-32", cost:"LIVIA-34", costGuard:"LIVIA-53",
    qo:"LIVIA-55", safety:"LIVIA-56", evidence:"LIVIA-57", fresh:"LIVIA-58",
    provenance:"LIVIA-38", lineage:"LIVIA-39", audit:"LIVIA-48", dist:"LIVIA-22",
    drills:"LIVIA-50", failover:"LIVIA-49"
  },

  rbacViews:{ observer:{ hideDiff:true, showOnlyOutcome:true } },

  idempotencyTtlSec: 3600
}

5) Karar Mantığı (özet)

Planlama: istek → mod (atomic|staged|canary) seçimi; bundle ise iki-aşamalı (prepare/commit).

Preflight: şema/semantik uyum (L63), RBAC, freeze, bütçe; shadow dry-run.

Uygulama:

Canary/Staged: trafik %X’e yönlendir; konfig yalnız hedef pods/route’larda etkin.

Atomic: bakım penceresi zorunlu; tek hamlede apply + hızlı prob.

Probe & Guardrails: SLO/Cost/Safety/Evidence eşiği; ardışık geçiş sayısı → promote ya da rollback.

Traffic Shift: L54 ile istio/envoy/nginx; stickiness=tenant/session; fail-fast destekli.

Rollback: fail/ihlal durumunda otomatik; runbook (L62) ile güvenli geri dönüş + post-verify.

Persist: tüm aşamalar WORM/Lineage/Audit; rapor ve kart L22.

6) Pipeline (Kompozisyon)

Ingest: config.apply.request|bundle.request|health.probe.policy|traffic.capabilities

Plan: mod+stages; rollback planı ve guardrails

Preflight/Shadow: schema/semantik/RBAC/freeze/bütçe; shadow/dry-run

Apply Stage: (canary/staged/atomic)

Probe: SLO/Cost/Safety/Evidence ölç; status ok|warn|fail

Shift: trafik ağırlıklarını güncelle

Promote/Rollback: kurallara göre nihai karar

Finalize: rapor, kart, metrik, audit; idempotent kayıt

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (apply.request|bundle.request) PLAN

PLAN → PREFLIGHT → (fail) ALERT/DONE | SHADOW

SHADOW → (ok) APPLY_STAGE | (fail) ALERT/DONE

APPLY_STAGE → PROBE → (ok) SHIFT → (tüm aşamalar bitti) PROMOTE → FINALIZE

PROBE → (fail/warn>limit) ROLLBACK → FINALIZE

Hata: ALERT; idem: aynı applyKey yinelemesinde yalnız snapshot/metrik güncellenir

8) Kenar Durumlar

Freeze Aktif: freeze_active → yalnız plan/preflight/shadow; apply yok.

Schema İnkompatibilitesi: schema_incompatible → plan iptal, migration öner.

Bundle Partial Failure: iki-aşamalı commit; bir yüzey fail → abort_all + rollback.

Probe Flap (gürültü): ardışık geçiş koşulu ve grace ile yanlış negatif azalt.

Stickiness Yoksa: kullanıcılar kol arasında zıplar → header/cookie ile sabitle.

Cost Baskısı: L53 tetik → stage süresini uzat veya promote eşiğini sıkılaştır.

DR/Failover: L49 aktif → yalnız shadow/staged düşük %; promote kapalı.

Observer: diff/secret gizli; yalnız sonuç/telemetri.

Idempotency: aynı applyKey ikinci kez → no-op (card/metrik güncellenir).

9) Telemetri
{
  "config.metrics": {
    "event":"config.metrics","timestamp":"iso8601",
    "applies":1,"promoted":1,"rolledBack":0,
    "avgPreflightMs":110,"avgProbeMs":4200,"avgStageMs":120000,
    "trafficShifts":2,"downtimeSec":0,
    "guardrailBreaches":0,"autoPauses":0
  }
}

10) Dosya Yapısı (öneri)
services/livia/zeroDowntimeConfigApplier.ts          # FSM + orchestrator
services/livia/lib/zd/plan.ts                        # stage planlayıcı + rollback stratejisi
services/livia/lib/zd/preflight.ts                   # schema/semantik/RBAC/freeze/bütçe
services/livia/lib/zd/shadow.ts                      # shadow/dry-run yürütücü
services/livia/lib/zd/apply.ts                       # stage/canary/atomic apply
services/livia/lib/zd/probe.ts                       # health probe + guardrail değerlendirme
services/livia/lib/zd/shift.ts                       # traffic provider köprüleri (istio/envoy/nginx)
services/livia/lib/zd/rollback.ts                    # runbook köprüsü + otomatik geri dönüş
services/livia/lib/zd/report.ts                      # md/html rapor + inline grafik
services/livia/lib/bridges.ts                        # L22/L32/L34/L38/L39/L45/L48/L49/L50/L51/L53/L54/L55/L56/L57/L58/L62/L63
services/livia/state/zdStore.ts                      # idem index + plan cache + probe geçmişi
services/livia/__tests__/zeroDowntimeConfigApplier.test.ts
cfg/livia.zd.yaml

11) Test İskeleti (Jest/Vitest)

Canary Başarılı: %10/20dk → guardrails OK → promote

Probe Fail: p95>900ms → rollback ve post-verify

Freeze: frozen → freeze_active; apply yok

Schema İncompatible: preflight fail → schema_incompatible uyarısı

Bundle Atomic: Qo + Feature iki-aşamalı commit; bir fail → abort_all

Traffic Stickiness: header stickiness olmadan A/B sızıntısı tespit; stickiness eklenir

Idempotency: aynı applyKey tekrarında yan etki yok

Rapor: md/html üretildi; L22 dağıtıldı; L38/L48 kayıtlandı

12) Örnek Akış (kısa)

16:02 config.apply.request(safety, prod, canary 10%)

16:03 PREFLIGHT/SHADOW: şema/RBAC ok, freeze yok → shadow ok

16:05 APPLY_STAGE: canary %10 → PROBE: p95 848ms, err 0.7%, accept 0.57, evidence 0.72 → ok

16:16 SHIFT: %10→%100; PROMOTE + post-verify p95 842ms

16:18 FINALIZE: kart/metrik/rapor yayımlandı; downtime=0

13) SLO

Preflight p95 < 150 ms

Stage ramp ≤ 10 dk (varsayılan), probe değerlendirme ≤ 30 sn

Downtime = 0 sn (canary/staged)

Yanlış promote ≤ %1, gereksiz rollback ≤ %3

Idempotent çakışma ≈ 0
______________________________________________________________________________________________
LIVIA-65 · costAnomalySentinel.ts — Geniş Prompt v3 (+ Gerçek-Zamanlı Maliyet Anomalisi, Otomatik Kısıtlama/Degrade, Güvenli Geri Dönüş)

Amaç:
Gerçek-zamanlı ve yakın-zaman pencerelerinde maliyet anomalilerini yakalayıp kök neden çıkarımı yaparak otomatik ve güvenli biçimde kısıtlama (throttle/cap), degrade (model/plan/topK/reranker/features), trafik kaydırma, politik ayar ve geri dönüş (restore) kararlarını uygulamak.

Kapsam: inference, retrieval/search, vektör indeks, trafik/çıktı token, üçüncü taraf API, depolama/transfer.

Hedefler: bütçe uyumu, $/sorgu, $/1k token, $/tenant/kanal, maliyet/SLO/fairness dengesi.

Entegrasyonlar: Cost Analytics (L34), Cost Guard (L53), Traffic Shaper (L54), Qo (L55), Safety (L56), Evidence (L57), Freshness (L58), Personalization (L59), MLang (L60), Learning (L61), Runbook (L62), Drift (L63), Zero-Downtime Apply (L64), Freeze (L51), SLO (L32), Audit/Provenance/Lineage (L48/L38/L39), Dist (L22).
I/O: event-driven JSON, Zod .strict(), TZ=Europe/Istanbul; idempotent + audit + metrics; OpenTelemetry.

1) Standartlar

Node 18+, TypeScript, pnpm, Jest/Vitest

Zaman: ISO-8601; gün penceresi 00:00–23:59:59 (Europe/Istanbul)

Güvenlik: HMAC/JWT; RBAC: ops|finance|mlops|policy tam; observer salt okur

Gizlilik: PII yok; tenant/kullanıcı kimlikleri L21 hash

İdempotency: costKey = windowISO + scope + detectorHash + policyHash

Observability: spans (cost.ingest|baseline|detect|rca|decide|apply|restore|report) + metrics

Uyumluluk: tüm eylemler WORM (L38), Lineage (L39), Audit (L48) kayıtlı

2) Girdiler (In) — Zod .strict() şema örnekleri
{
  "cost.stream.sample": {
    "event":"cost.stream.sample","timestamp":"iso8601",
    "component":"inference|retrieval|index|traffic|external",
    "tenant":"t#acme","channel":"web|api|batch","region":"TR|EU|US",
    "metrics":{"usd":0.0042,"tokensOut":380,"tokensIn":620,"calls":1}
  },

  "cost.window.metrics": {
    "event":"cost.window.metrics","timestamp":"iso8601",
    "window":"1m|5m|1h|1d",
    "agg":{"usdPerQuery":0.012,"usdPer1kTok":0.68,"totalUsd":42.3},
    "byComponent":{"inference":0.008,"retrieval":0.003,"index":0.001},
    "byTenant":{"t#acme":0.014,"t#beta":0.009}
  },

  "billing.usage.snapshot": {
    "event":"billing.usage.snapshot","timestamp":"iso8601",
    "provider":"cloud|llm|search","period":"hour","amountUsd":128.4,
    "usage":{"calls":18200,"tokIn":3_200_000,"tokOut":5_600_000}
  },

  "traffic.current.split": {
    "event":"traffic.current.split","timestamp":"iso8601",
    "serviceId":"kb_api","splits":[{"rev":"baseline","pct":85},{"rev":"lowcost","pct":15}]
  },

  "qo.decision.path": {
    "event":"qo.decision.path","timestamp":"iso8601",
    "route":"hybrid","planId":"P-hybrid-fast",
    "params":{"topK":60,"reranker":"ce-small","model":"gpt-m","maxTokens":700}
  },

  "slo.window.metrics": {
    "event":"slo.window.metrics","timestamp":"iso8601",
    "serviceId":"kb_api","window":"5m","p95Ms":860,"errPct":0.8
  },

  "cost.policy.updated": {
    "event":"cost.policy.updated","timestamp":"iso8601",
    "budget":{"period":"1d","tenantUsd":{"t#acme":300,"t#beta":200},"globalUsd":1200},
    "caps":{"usdPerQueryMax":0.015,"usdPer1kTokMax":0.80},
    "actions":{"allowAutoThrottle":true,"allowAutoDegrade":true}
  },

  "thresholds.cost.anomaly": {
    "event":"thresholds.cost.anomaly","timestamp":"iso8601",
    "detectors":{"ewma":{"alpha":0.3,"k":3},"stl":{"season":"1d"},"esd":{"alpha":0.05}},
    "minTraffic":200,"minSpendUsd":5
  },

  "freeze.state.changed": {
    "event":"freeze.state.changed","timestamp":"iso8601",
    "state":"frozen|thawed","scope":"global|service:kb_api","reason":"incident|audit|drill"
  }
}

3) Çıktılar (Out)
{
  "cost.anomaly.detected": {
    "event":"cost.anomaly.detected","timestamp":"iso8601",
    "severity":"low|med|high|block",
    "scope":"global|tenant|channel|component",
    "signal":{"zScore":4.1,"deltaPct":+65,"window":"5m","baseline":"1d same-hour"},
    "where":{"tenant":"t#acme","component":"inference","channel":"api"},
    "rca":{"drivers":[["tokensOutPerQuery",+38],["reranker","on"],["model","gpt-m"]]}
  },

  "cost.sentinel.action.plan": {
    "event":"cost.sentinel.action.plan","timestamp":"iso8601",
    "severity":"high",
    "actions":[
      {"type":"throttle","via":"L54","args":{"path":"/answer","rpsCap":45}},
      {"type":"degrade","via":"L55","args":{"plan":"P-vec-lite","topK":40,"reranker":"none","model":"gpt-s"}},
      {"type":"cap_tokens","via":"L55","args":{"maxTokens":500}},
      {"type":"feature_toggle","via":"L64","args":{"flag":"rich_html","value":false}}
    ],
    "guardrails":{"p95MsMax":900,"acceptRateMin":0.50,"safetyNoWorse":true},
    "cooldownMin":20,"restoreHint":"gradual"
  },

  "cost.sentinel.action.applied": {
    "event":"cost.sentinel.action.applied","timestamp":"iso8601",
    "applied":["throttle","degrade","cap_tokens","feature_toggle"],
    "expectedImpact":{"usdPerQuery":"-0.0045","p95Ms":"+18ms","acceptRate":"-0.6pp"}
  },

  "cost.sentinel.restore.plan": {
    "event":"cost.sentinel.restore.plan","timestamp":"iso8601",
    "mode":"gradual","steps":[{"afterMin":20,"lift":"feature_toggle"},{"afterMin":40,"lift":"cap_tokens"},{"afterMin":60,"lift":"degrade"}]
  },

  "cost.sentinel.restore.applied": {
    "event":"cost.sentinel.restore.applied","timestamp":"iso8601",
    "finalState":"normal","residualRisk":"low"
  },

  "cost.card": {
    "event":"cost.card","timestamp":"iso8601",
    "title":"Maliyet Anomalisi — inference/api (t#acme)",
    "body":"+65%/5dk • throttle+degrade uygulandı • restore: kademeli.",
    "severity":"warn","ttlSec":600
  },

  "cost.alert": {
    "event":"cost.alert","timestamp":"iso8601",
    "level":"warn|error",
    "message":"idem_duplicate|rbac_denied|freeze_active|budget_exceeded|apply_failed|guardrail_breach"
  },

  "cost.metrics": {
    "event":"cost.metrics","timestamp":"iso8601",
    "anomalies":1,"actionsApplied":3,"restores":0,
    "avgDetectMs":68,"avgApplyMs":2200,
    "usdPerQueryDelta":"-0.0038","p95DeltaMs":"+12","acceptRateDelta":"-0.4pp"
  },

  "cost.report.ready": {
    "event":"cost.report.ready","timestamp":"iso8601",
    "path":"data/cost/2025-09-16/sentinel/report.md",
    "summary":"inference/api t#acme +65% (5m). throttle+degrade ile $/query -0.0038; SLO korundu.",
    "hash":"sha256:..."
  }
}

4) Konfig (varsayılanlar)
{
  i18n:{ locale:"tr-TR", tz:"Europe/Istanbul" },

  detectors:{
    ewma:{ alpha:0.3, k:3 },         // |x - μ_ewma| > k*σ_ewma
    stl:{ season:"1d", trend:"robust" },
    esd:{ alpha:0.05 },              // generalized ESD
    minTraffic:200, minSpendUsd:5,
    combine:"vote_majority|max_zscore"
  },

  baselines:{
    compareWindows:["prev_1h","prev_24h_same_hour","dow_7d"],
    normalizeBy:["queries","1k_tokens","tenant_mix"]
  },

  budgets:{
    globalUsdPerDay:1200,
    perTenantUsdPerDay:{"t#acme":300,"t#beta":200},
    caps:{ usdPerQueryMax:0.015, usdPer1kTokMax:0.80 }
  },

  rca:{
    features:["tokensOutPerQuery","topK","reranker","model","retrievalHits","indexLatencyMs","trafficMix","lang","fmt_html"],
    shaplikeTopN:5
  },

  actions:{
    throttle:{ enable:true, provider:"L54", rpsCapsByTier:{ gold:60, silver:40, bronze:25 } },
    degrade:{
      enable:true, via:"L55",
      plans:[
        {"from":"P-hybrid-fast","to":"P-vec-lite","topK":"-20","reranker":"none","model":"gpt-s","maxTokens":"-200"}
      ]
    },
    cap_tokens:{ enable:true, minMaxTokens:400 },
    feature_toggle:{ enable:true, flags:["rich_html","inline_svg","long_citations"] },
    traffic_shift:{ enable:true, provider:"L54", toRevision:"lowcost", pct:15 }
  },

  guardrails:{
    slo:{ p95MsMax:900, errPctMax:1.0, acceptRateMin:0.50 },
    safety:{ noWorse:true }, evidence:{ coverageMin:0.60 },
    fairness:{ protected:["tier","region"], parityTolerancePct:10 } // düşük tier'ı orantısız etkileme
  },

  restore:{
    mode:"gradual", stepMin:20, requireStableWindows:2, hysteresisPct:10
  },

  freezeRespect:true,

  integrations:{
    cost:"LIVIA-34", costGuard:"LIVIA-53", traffic:"LIVIA-54",
    qo:"LIVIA-55", safety:"LIVIA-56", evidence:"LIVIA-57", fresh:"LIVIA-58",
    pers:"LIVIA-59", mlang:"LIVIA-60", learn:"LIVIA-61",
    runbook:"LIVIA-62", drift:"LIVIA-63", zd:"LIVIA-64",
    slo:"LIVIA-32", provenance:"LIVIA-38", lineage:"LIVIA-39", audit:"LIVIA-48", dist:"L22"
  },

  rbacViews:{ observer:{ hideDrivers:true, showOnlyTotals:true } },

  idempotencyTtlSec: 1800
}

5) Karar Mantığı (özet)

Tespit: EWMA/STL/ESD çoklu-dedektör; trafik/spend eşiği sağlanırsa anomaly.

RCA: SHAP-vari katkılarla sürücüleri sırala (tokensOut/topK/model/reranker/feature/trafficMix…).

Şiddet: deltaPct, zScore, budget gap, blast radius → low/med/high/block.

Eylem Planı: şiddete göre throttle → degrade → cap_tokens → feature_toggle → traffic_shift; guardrail ve fairness kontrolü.

Uygulama: L54/L55/L64 üzerinden zero-downtime; Freeze aktifse yalnız plan/rapor.

Restore: koşullar normale döndüğünde kademeli kaldır (histerezis + stabil pencere).

Öğrenme: L61’e kalıcı tuning önerileri (örn. varsayılan topK ↓).

Raporlama: card/alert/metrics/report; WORM/Lineage/Audit.

6) Pipeline (Kompozisyon)

Ingest: cost/billing/traffic/qo/slo akışları

Baseline: normalizasyon ve sezonluk tabanlar (aynı saat/hafta günü)

Detect: çoklu dedektör → anomaly + şiddet

RCA: sürücüler ve etkileri

Decide: eylem planı + guardrails + fairness

Apply: throttle/degrade/cap/feature/traffic (freeze değilse)

Observe: etkileri ölç; restore için stabiliteyi izle

Emit: anomaly.detected, action.plan/applied, restore.plan/applied, card/alert/metrics/report

Persist: L38/L39/L48 ve cache

7) FSM — advance(state, event, cfg, now) → emissions[]

IDLE → (cost.stream.sample|cost.window.metrics|billing.snapshot) DETECT

DETECT → (no anomaly) IDLE | (anomaly) RCA → DECIDE → (freeze? PARK) | APPLY → OBSERVE → (stable) RESTORE → REPORT → IDLE

Hata: ALERT; idem: aynı costKey yinelemesinde yan etki yok (yalnız kart/metrik güncellenir)

8) Kenar Durumlar

Düşük Trafik: minTraffic altında → tespit ertelenir, false positive önlenir.

Sezonsallık: stl sezon farkı → sahte alarm; sezon tabanı ile düzeltilir.

Token Patlaması: tek tenant/kanal tokenOut sıçrar → cap_tokens öncelik.

Fairness: sadece düşük tier’i etkileyecek throttle → parity kontrolü şart.

SLO Baskısı: degrade p95’i bozmamalı; aşarsa geri al.

Freeze: frozen → yalnız plan ve rapor; apply yok.

Zincirleme Etki: feature kapatması Evidence/Freshness’i düşürürse alternatif plan.

Partial Success: bazı eylemler uygulanamadı → Runbook (L62) devreye girer.

Idempotency: aynı anomaly için ikinci çalıştırma yan etkisiz.

9) Telemetri
{
  "cost.metrics": {
    "event":"cost.metrics","timestamp":"iso8601",
    "anomalies":1,"actionsApplied":3,"restores":0,
    "avgDetectMs":68,"avgApplyMs":2200,
    "usdPerQueryDelta":"-0.0038","p95DeltaMs":"+12","acceptRateDelta":"-0.4pp",
    "falsePositivePct":1.2
  }
}

10) Dosya Yapısı (öneri)
services/livia/costAnomalySentinel.ts                 # FSM + orchestrator
services/livia/lib/cost/detect.ts                     # EWMA/STL/ESD + sezon tabanı
services/livia/lib/cost/rca.ts                        # sürücü analizi (SHAP-vari)
services/livia/lib/cost/decide.ts                     # aksiyon seçim/guardrail/fairness
services/livia/lib/cost/apply.ts                      # L54/L55/L64 entegrasyonları
services/livia/lib/cost/restore.ts                    # kademeli restore + histerezis
services/livia/lib/cost/report.ts                     # md/html rapor + grafik
services/livia/lib/bridges.ts                         # L22/L32/L34/L38/L39/L48/L51/L53/L54/L55/L56/L57/L58/L59/L60/L61/L62/L63/L64
services/livia/state/costStore.ts                     # idem index + baseline cache + cooldown
services/livia/__tests__/costAnomalySentinel.test.ts
cfg/livia.cost.yaml

11) Test İskeleti (Jest/Vitest)

Sıçrama: +65%/5m → anomaly.detected(high) → throttle+degrade uygulanır

Sahte Alarm: düşük trafik → alarm bastırılır

Guardrail İhlali: degrade sonrası p95>900 → otomatik restore

Fairness: throttle düşük tier’e orantısız → plan revize edilir

Freeze: frozen → plan/rapor, apply yok

Restore: 2 stabil pencere → kademeli kaldırma

Idempotency: aynı costKey ilkinden sonra yan etki yok

Rapor: md/html üretildi; L22 dağıtıldı; L38/L48 kayıtlandı

12) Örnek Akış (kısa)

15:05 DETECT: inference/api t#acme +65% (5m, z=4.1)

15:06 RCA: tokensOut ↑, reranker on, model gpt-m → sürücüler belirlendi

15:07 DECIDE/APPLY: throttle 45 rps + plan P-vec-lite + maxTokens 500 + rich_html=false

15:25 OBSERVE: $/query -0.0038, p95 +12ms, accept -0.4pp (guardrails OK)

16:00 RESTORE: kademeli kaldırma → sistem normal

16:05 REPORT: kart/metrik/rapor yayımlandı

13) SLO

Tespit p95 < 100 ms

Yanlış pozitif ≤ %2, kaçan yüksek şiddet ≤ %1

Uygulama p95 < 3 s (trafik/plan eylemleri)

Bütçe ihlali süresi ≤ 15 dk

Idempotent çakışma ≈ 0
_____________________________________________________________________________________________
