name: 🔒 Security Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    name: 🔒 Security Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8'
          
      - name: 📦 Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: 🔍 CodeQL Analysis - Initialize
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          config-file: ./.github/codeql/codeql-config.yml
          
      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3
          
      - name: 🔍 CodeQL Analysis - Analyze
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"
        
      - name: 🔒 Run Snyk Security Scan
        if: env.SNYK_TOKEN != ''
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium
          
      - name: 🔐 Secret Scanning
        run: |
          echo "🔐 Scanning for leaked secrets..."
          # Use git-secrets or similar tool
          git log --oneline --all | head -20
          # Check for common secret patterns
          grep -r "api[_-]?key" . --exclude-dir=node_modules --exclude-dir=.git || echo "No API keys found in plaintext"
          grep -r "password" . --exclude-dir=node_modules --exclude-dir=.git || echo "No passwords found in plaintext"
          
      - name: 🔒 Dependency Security Audit
        run: |
          echo "🔒 Running comprehensive security audit..."
          pnpm audit --audit-level high
          
      - name: 📝 Generate Security Report
        run: |
          echo "# 🔒 Security Scan Report" >> security-report.md
          echo "- Scan Date: $(date)" >> security-report.md
          echo "- Repository: ${{ github.repository }}" >> security-report.md
          echo "- Branch: ${{ github.ref_name }}" >> security-report.md
          echo "- Commit: ${{ github.sha }}" >> security-report.md
          
      - name: 📤 Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report-${{ github.sha }}
          path: security-report.md